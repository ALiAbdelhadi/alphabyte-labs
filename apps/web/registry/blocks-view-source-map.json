{
  "about-1": {
    "components": {
      "@/registry/view/about-1/components/about": "\"use client\"\n\nimport { useEffect, useRef } from \"react\"\nimport { gsap } from \"gsap\"\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\"\nimport Container from \"@/components/Container\"\n\ngsap.registerPlugin(ScrollTrigger)\n\nconst About = () => {\n  const sectionRef = useRef(null)\n  useEffect(() => {\n    const elements = sectionRef.current.querySelectorAll(\".animate-element\")\n    const timelineElements =\n      sectionRef.current.querySelectorAll(\".animate-timeline\")\n    elements.forEach((element) => {\n      gsap.fromTo(\n        element,\n        {\n          opacity: 0,\n          y: 20,\n        },\n        {\n          opacity: 1,\n          y: 0,\n          duration: 1,\n          scrollTrigger: {\n            trigger: element,\n            start: \"top 80%\",\n            end: \"top 60%\",\n            scrub: true,\n            once: true,\n          },\n        }\n      )\n    })\n    timelineElements.forEach((element) => {\n      gsap.fromTo(\n        element,\n        {\n          opacity: 0,\n          x: -50,\n        },\n        {\n          opacity: 1,\n          x: 0,\n          duration: 1,\n          scrollTrigger: {\n            trigger: element,\n            start: \"top 90%\",\n            end: \"top 70%\",\n            scrub: true,\n            once: true,\n          },\n        }\n      )\n    })\n  }, [])\n\n  return (\n    <section ref={sectionRef}>\n      <Container>\n        <div className=\"grid gap-10 lg:grid-cols-[1fr_500px]\">\n          <div className=\"grid gap-4\">\n            <div className=\"space-y-4 animate-element\">\n              <h2 className=\"font-bold tracking-tighter text-3xl sm:text-4xl md:text-5xl\">\n                About Our Company\n              </h2>\n              <p className=\"max-w-[600px] text-muted-foreground md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed\">\n                At Art Lighting Inc. we are a team of passionate innovators\n                dedicated to pushing the boundaries of what&apos;s possible.\n                Since our founding in 2010, we&apos;ve been on a mission to\n                create cutting-edge products and services that transform the way\n                people live and work.\n              </p>\n            </div>\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <div className=\"bg-gray-100 dark:bg-neutral-900 rounded-lg p-6 animate-element\">\n                <h3 className=\"text-lg font-semibold text-primary\">\n                  Our Mission\n                </h3>\n                <p className=\"text-muted-foreground mt-2\">\n                  To revolutionize the tech industry and empower people with\n                  innovative solutions.\n                </p>\n              </div>\n              <div className=\"bg-gray-100 dark:bg-neutral-900 rounded-lg p-6 animate-element\">\n                <h3 className=\"text-lg font-semibold text-primary\">\n                  Our Values\n                </h3>\n                <p className=\"text-muted-foreground mt-2\">\n                  Integrity, Collaboration, Creativity, and Continuous\n                  Improvement.\n                </p>\n              </div>\n              <div className=\"bg-gray-100 dark:bg-neutral-900 rounded-lg p-6 animate-element\">\n                <h3 className=\"text-lg font-semibold text-primary\">Our Team</h3>\n                <p className=\"text-muted-foreground mt-2\">\n                  A diverse group of talented individuals who are passionate\n                  about making a difference.\n                </p>\n              </div>\n              <div className=\"bg-gray-100 dark:bg-neutral-900 rounded-lg p-6 animate-element\">\n                <h3 className=\"text-lg font-semibold text-primary\">\n                  Our Commitment\n                </h3>\n                <p className=\"text-muted-foreground mt-2\">\n                  To deliver exceptional products and services that exceed our\n                  customers&apos; expectations.\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"relative animate-element\">\n            <div className=\"after:absolute after:inset-y-0 after:w-px after:bg-gray-500/20 relative pl-6 after:left-0 grid gap-10\">\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2010 - Founding of Art Lighting Inc.\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2010 - Launch of First Product\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2012 - Expansion into New Markets\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2013 - Breakthrough Innovation\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2014 - Local Expansion and Acquisition\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2015 - Sustainability Initiatives\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2016 - Art Lighting Inc. Goes Public\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2016 - Art Lighting Working with Military{\" \"}\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2020 - Pandemic Response and Resilience\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2023 - Our Factory completed\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </section>\n  )\n}\n\nexport default About\n"
    },
    "constant": {},
    "lib": {},
    "@/registry/view/about-1/page": "import About_1 from \"./components/about\"\n\nconst page = () => {\n  return (\n    <div className=\"py-10 md:py-16 lg:py-20\">\n      <About_1 />\n    </div>\n  )\n}\n\nexport default page\n"
  },
  "banner-1": {
    "components": {
      "@/registry/view/banner-1/components/banner": "\"use client\";\r\n\r\nimport { Button } from \"@/components/library/button\";\r\nimport { X } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Banner1Props {\r\n    title: string;\r\n    description: string;\r\n    linkText: string;\r\n    linkUrl: string;\r\n    defaultVisible?: boolean;\r\n}\r\n\r\nexport const Banner = ({\r\n    title = \"Version 2.0 is now available!\",\r\n    description = \"Check out all the\",\r\n    linkText = \"new features\",\r\n    linkUrl = \"#\",\r\n    defaultVisible = true,\r\n}: Banner1Props) => {\r\n    const [isVisible, setIsVisible] = useState(defaultVisible);\r\n\r\n    const handleClose = () => {\r\n        setIsVisible(false);\r\n    };\r\n\r\n    if (!isVisible) return null;\r\n\r\n    return (\r\n        <section className=\"w-full border-b bg-white px-4 py-3 shadow-sm\">\r\n            <div className=\"flex items-center justify-between gap-2\">\r\n                <div className=\"flex-1 text-center\">\r\n                    <span className=\"text-sm\">\r\n                        <span className=\"font-medium\">{title}</span>{\" \"}\r\n                        <span className=\"text-muted-foreground\">\r\n                            {description}{\" \"}\r\n                            <Link\r\n                                href={linkUrl}\r\n                                className=\"underline underline-offset-4 hover:text-foreground\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                {linkText}\r\n                            </Link>\r\n                            .\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    className=\"-mr-2 h-8 w-8 flex-none\"\r\n                    onClick={handleClose}\r\n                >\r\n                    <X className=\"h-4 w-4\" />\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\n\r\n"
    },
    "constant": {},
    "lib": {},
    "@/registry/view/banner-1/page": "import React from 'react'\r\nimport { Banner } from './components/banner'\r\n\r\nconst page = () => {\r\n    return (\r\n        <div>\r\n            <Banner />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default page"
  },
  "carousel-1": {
    "components": {
      "@/registry/view/carousel-1/components/Carousel-Container": "import Link from \"next/link\";\nimport { CarouselBigDataForBlock } from \"../constant/index\";\nimport { Card, Carousel } from \"./carousel\";\n\nconst CarouselContainer = () => {\n  const projectCards = CarouselBigDataForBlock.map((project, index) => (\n    <Link href={project.link} key={project.id} className=\"not-prose\">\n      <Card project={project} index={index} />\n    </Link>\n  ));\n  return <Carousel items={projectCards} />;\n};\n\nexport default CarouselContainer;\n",
      "@/registry/view/carousel-1/components/carousel": "\"use client\"\n\nimport {\n  createContext,\n  Fragment,\n  JSX,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\nimport Image, { ImageProps } from \"next/image\"\nimport { IconArrowNarrowLeft, IconArrowNarrowRight } from \"@tabler/icons-react\"\nimport { motion } from \"framer-motion\"\nimport { cn } from \"@/lib/utils\"\nimport { useOutsideClick } from \"@/hooks/out-side-click\"\n\ninterface CarouselProps {\n  items: JSX.Element[]\n  initialScroll?: number\n  cardGap?: number\n  scrollOffset?: number\n  initialActiveIndex?: number\n}\n\ninterface Project {\n  id: number\n  title: string\n  description: string\n  image: string\n  link: string\n}\n\nconst CarouselContext = createContext<{\n  onCardClick: (index: number) => void\n  currentIndex: number\n}>({\n  onCardClick: () => { },\n  currentIndex: 0,\n})\n\nexport const Carousel = ({\n  items,\n  initialScroll = 0,\n  cardGap = 16,\n  scrollOffset: initialScrollOffset,\n  initialActiveIndex = 1,\n}: CarouselProps) => {\n  const [scrollOffset, setScrollOffset] = useState(950)\n  useEffect(() => {\n    const WidthWindow = window.innerWidth\n    if (WidthWindow < 789) {\n      setScrollOffset(260)\n    } else {\n      setScrollOffset(950)\n    }\n  }, [])\n  const carouselRef = useRef<HTMLDivElement>(null)\n  const [canScrollLeft, setCanScrollLeft] = useState(false)\n  const [canScrollRight, setCanScrollRight] = useState(true)\n  const [currentIndex, setCurrentIndex] = useState(initialActiveIndex)\n  const checkScrollAbility = () => {\n    if (carouselRef.current) {\n      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current\n      setCanScrollLeft(scrollLeft > 0)\n      setCanScrollRight(scrollLeft < scrollWidth - clientWidth)\n    }\n  }\n  useEffect(() => {\n    if (carouselRef.current && initialActiveIndex !== undefined) {\n      const itemWidth = carouselRef.current.offsetWidth - 500\n      const scrollTo = itemWidth * initialActiveIndex\n      carouselRef.current.scrollTo({\n        left: scrollTo,\n        behavior: \"smooth\",\n      })\n    }\n  }, [initialActiveIndex])\n\n  const scroll = (direction: \"left\" | \"right\") => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollBy({\n        left: direction === \"left\" ? -scrollOffset : scrollOffset,\n        behavior: \"smooth\",\n      })\n    }\n  }\n  const handleCarouselClick = (index: number) => {\n    setCurrentIndex(index)\n  }\n\n  return (\n    <CarouselContext.Provider\n      value={{ onCardClick: handleCarouselClick, currentIndex }}\n    >\n      <div className=\"relative w-full py-0 !my-12 \">\n        <div className=\"flex justify-end space-x-2\">\n          <button\n            className=\"relative z-40 h-12 w-12 rounded-full bg-gray-100 flex items-center justify-center disabled:opacity-50\"\n            onClick={() => scroll(\"left\")}\n            disabled={!canScrollLeft}\n          >\n            <IconArrowNarrowLeft className=\"h-7 w-7 text-gray-500\" />\n          </button>\n          <button\n            className=\"relative z-40 h-12 w-12 rounded-full bg-gray-100 flex items-center justify-center disabled:opacity-50\"\n            onClick={() => scroll(\"right\")}\n            disabled={!canScrollRight}\n          >\n            <IconArrowNarrowRight className=\"h-7 w-7 text-gray-500\" />\n          </button>\n        </div>\n        <div\n          className=\"flex w-full overflow-x-scroll py-6 scroll-smooth [scrollbar-width:none]\"\n          ref={carouselRef}\n          onScroll={checkScrollAbility}\n        >\n          <div\n            className=\"flex flex-row justify-end gap-4\"\n            style={{ gap: `${cardGap}px` }}\n          >\n            {items.map((item, index) => (\n              <motion.div\n                key={index}\n                className=\"rounded-3xl\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{\n                  opacity: 1,\n                  y: 0,\n                  transition: { duration: 0.5, delay: 0.3 * index },\n                }}\n              >\n                {item}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </CarouselContext.Provider>\n  )\n}\n\nexport const Card = ({\n  project,\n  index,\n  layout = false,\n}: {\n  project: Project\n  index: number\n  layout?: boolean\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const cardRef = useRef<HTMLDivElement>(null)\n  useOutsideClick(containerRef, () => setIsOpen(false))\n  const handleCardClick = () => {\n    setIsOpen(true)\n    if (cardRef.current) {\n      cardRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\",\n        inline: \"center\",\n      })\n    }\n  }\n  return (\n    <Fragment>\n      <motion.div\n        ref={cardRef}\n        layoutId={layout ? `card-${project.id}` : undefined}\n        onClick={handleCardClick}\n        className=\"rounded-3xl cursor-pointer bg-gray-100 dark:bg-neutral-900 h-72 md:h-[33rem] w-[35vh] sm:w-[50vh] md:w-[90vh] lg:w-[110vh] xl:w-[150vh] overflow-hidden flex flex-col items-start justify-start relative z-10\"\n      >\n        <div className=\"absolute h-full top-0 inset-x-0 bg-gradient-to-b from-black/50 via-transparent to-transparent z-30 pointer-events-none\" />\n        <div className=\"relative z-40 p-8\">\n          <motion.p\n            layoutId={layout ? `title-${project.id}` : undefined}\n            className=\"text-white text-xl md:text-3xl font-semibold max-w-xs text-left font-sans mt-2\"\n          >\n            {project.title}\n          </motion.p>\n          <motion.p\n            layoutId={layout ? `description-${project.id}` : undefined}\n            className=\"text-white text-sm md:text-base font-medium font-sans text-left mt-2\"\n          >\n            {project.description}\n          </motion.p>\n        </div>\n        <BlurImage\n          src={project.image}\n          alt={project.title}\n          fill\n          className=\"object-cover absolute z-10 inset-0\"\n        />\n      </motion.div>\n    </Fragment>\n  )\n}\n\nexport const BlurImage = ({\n  height,\n  width,\n  src,\n  className,\n  alt,\n  ...rest\n}: ImageProps) => {\n  const [isLoading, setLoading] = useState(true)\n  return (\n    <Image\n      className={cn(\n        \"transition duration-300\",\n        isLoading ? \"blur-sm\" : \"blur-0\",\n        className\n      )}\n      onLoad={() => setLoading(false)}\n      src={src || \"/placeholder.svg\"}\n      width={width}\n      height={height}\n      loading=\"lazy\"\n      decoding=\"async\"\n      blurDataURL={typeof src === \"string\" ? src : undefined}\n      alt={alt ? alt : \"Background of a beautiful view\"}\n      {...rest}\n    />\n  )\n}\n"
    },
    "constant": {
      "@/registry/view/carousel-1/constant/index": "export const CarouselBigDataForBlock = [\n  {\n    id: 1,\n    title: \"E-commerce web app\",\n    description: \"An E-commerce web app for lighting store\",\n    image: \"/blocks/carousel-big/block-1.png\",\n    link: \"https://eg-artlighting.vercel.app\",\n  },\n  {\n    id: 2,\n    title: \"E-commerce web app\",\n    description: \"An E-commerce web app for lighting store\",\n    image: \"/blocks/carousel-big/block-2.png\",\n    link: \"https://casescobra-cuxh.vercel.app/\",\n  },\n  {\n    id: 3,\n    title: \"E-commerce web app\",\n    description: \"An E-commerce web app for lighting store\",\n    image: \"/blocks/carousel-big/block-3.png\",\n    link: \"https://modern-website-gold.vercel.app/\",\n  },\n]\n"
    },
    "lib": {},
    "@/registry/view/carousel-1/page": "import CarouselContainer from \"@/components/blocks/carousel-1/Carousel-Container\"\n\nconst page = () => {\n  return <CarouselContainer />\n}\n\nexport default page\n"
  },
  "carousel-2": {
    "components": {
      "@/registry/view/carousel-2/components/carousel-container": "import { CarouselsData } from \"../constant\"\nimport { Card, Carousel } from \"./carousel\"\n\nconst CarouselContainer = () => {\n  const cards = CarouselsData.map((card, index) => (\n    <Card key={card.src} card={card} index={index} />\n  ))\n  return <Carousel items={cards} />\n}\n\nexport default CarouselContainer\n",
      "@/registry/view/carousel-2/components/carousel": "\"use client\"\n\nimport {\n  createContext,\n  Fragment,\n  JSX,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\nimport Image, { ImageProps } from \"next/image\"\nimport { IconArrowNarrowLeft, IconArrowNarrowRight } from \"@tabler/icons-react\"\nimport { motion } from \"framer-motion\"\n\nimport { cn } from \"@/lib/utils\"\nimport { useOutsideClick } from \"@/hooks/out-side-click\"\n\ninterface CarouselProps {\n  items: JSX.Element[]\n  initialScroll?: number\n  cardGap?: number\n  scrollOffset?: number\n}\n\ninterface Card {\n  src: string\n  title: string\n  category: string\n}\nconst CarouselContext = createContext<{\n  onCardClick: (index: number) => void\n  currentIndex: number\n}>({\n  onCardClick: () => {},\n  currentIndex: 0,\n})\nexport const Carousel = ({\n  items,\n  initialScroll = 0,\n  cardGap = 16,\n  scrollOffset = 300,\n}: CarouselProps) => {\n  const carouselRef = useRef<HTMLDivElement>(null)\n  const [canScrollLeft, setCanScrollLeft] = useState(false)\n  const [canScrollRight, setCanScrollRight] = useState(true)\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const checkScrollAbility = () => {\n    if (carouselRef.current) {\n      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current\n      setCanScrollLeft(scrollLeft > 0)\n      setCanScrollRight(scrollLeft < scrollWidth - clientWidth)\n    }\n  }\n  useEffect(() => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollLeft = initialScroll\n      checkScrollAbility()\n    }\n  }, [initialScroll])\n  const scroll = (direction: \"left\" | \"right\") => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollBy({\n        left: direction === \"left\" ? -scrollOffset : scrollOffset,\n        behavior: \"smooth\",\n      })\n    }\n  }\n  const handleCarsouelClick = (index: number) => {\n    setCurrentIndex(index)\n  }\n  return (\n    <CarouselContext.Provider\n      value={{ onCardClick: handleCarsouelClick, currentIndex }}\n    >\n      <div className=\"relative w-full py-0 !my-12 \">\n        <div className=\"flex justify-end space-x-2\">\n          <button\n            className=\"relative z-40 h-12 w-12 rounded-full bg-gray-100 flex items-center justify-center disabled:opacity-50\"\n            onClick={() => scroll(\"left\")}\n            disabled={!canScrollLeft}\n          >\n            <IconArrowNarrowLeft className=\"h-7 w-7 text-gray-500\" />\n          </button>\n          <button\n            className=\"relative z-40 h-12 w-12 rounded-full bg-gray-100 flex items-center justify-center disabled:opacity-50\"\n            onClick={() => scroll(\"right\")}\n            disabled={!canScrollRight}\n          >\n            <IconArrowNarrowRight className=\"h-7 w-7 text-gray-500\" />\n          </button>\n        </div>\n        <div\n          className=\"flex w-full overflow-x-scroll py-6 scroll-smooth  [scrollbar-width:none]\"\n          ref={carouselRef}\n          onScroll={checkScrollAbility}\n        >\n          <div\n            className=\"flex flex-row justify-end\"\n            style={{ gap: `${cardGap}px` }}\n          >\n            {items.map((item, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{\n                  opacity: 1,\n                  y: 0,\n                  transition: { duration: 0.5, delay: 0.3 * index },\n                }}\n              >\n                {item}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </CarouselContext.Provider>\n  )\n}\nexport const Card = ({\n  card,\n  index,\n  layout = false,\n}: {\n  card: Card\n  index: number\n  layout?: boolean\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const cardRef = useRef<HTMLDivElement>(null)\n  useOutsideClick(containerRef, () => setIsOpen(false))\n  const handleCardClick = () => {\n    setIsOpen(true)\n    if (cardRef.current) {\n      cardRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\",\n        inline: \"center\",\n      })\n    }\n  }\n  return (\n    <Fragment>\n      <motion.div\n        ref={cardRef}\n        layoutId={layout ? `card-${card.title}` : undefined}\n        onClick={handleCardClick}\n        className=\"rounded-3xl cursor-pointer bg-gray-100 dark:bg-neutral-900 h-[18rem] md:h-[37rem] w-56 md:w-96 overflow-hidden flex flex-col items-start justify-start relative z-10zz\"\n      >\n        <div className=\"absolute h-full top-0 inset-x-0 bg-gradient-to-b from-black/50 via-transparent to-transparent z-30 pointer-events-none\" />\n        <div className=\"relative z-40 p-4 md:p-8\">\n          <motion.p\n            layoutId={layout ? `category-${card.category}` : undefined}\n            className=\"text-white/60 text-sm md:text-base font-medium font-sans text-left\"\n          >\n            {card.category}\n          </motion.p>\n          <motion.p\n            layoutId={layout ? `title-${card.title}` : undefined}\n            className=\"text-white text-lg md:text-xl lg:text-3xl font-semibold max-w-xs text-left\"\n          >\n            {card.title}\n          </motion.p>\n        </div>\n        <BlurImage\n          src={card.src}\n          alt={card.title}\n          fill\n          className=\"object-cover absolute z-10 inset-0\"\n        />\n      </motion.div>\n    </Fragment>\n  )\n}\nexport const BlurImage = ({\n  height,\n  width,\n  src,\n  className,\n  alt,\n  ...rest\n}: ImageProps) => {\n  const [isLoading, setLoading] = useState(true)\n  return (\n    <Image\n      className={cn(\n        \"transition duration-300\",\n        isLoading ? \"blur-sm\" : \"blur-0\",\n        className\n      )}\n      onLoad={() => setLoading(false)}\n      src={src}\n      width={width}\n      height={height}\n      loading=\"lazy\"\n      decoding=\"async\"\n      blurDataURL={typeof src === \"string\" ? src : undefined}\n      alt={alt ? alt : \"Background of a beautiful view\"}\n      {...rest}\n    />\n  )\n}\n"
    },
    "constant": {
      "@/registry/view/carousel-2/constant/index": "export const CarouselsData = [\n  {\n    category: \"Artificial Intelligence\",\n    title: \"You can do more with AI.\",\n    src: \"/blocks/carousel/design-process-2.jpg\",\n  },\n  {\n    category: \"Productivity\",\n    title: \"Enhance your productivity.\",\n    src: \"/blocks/carousel/design-process.jpg\",\n  },\n  {\n    category: \"Product\",\n    title: \"Launching the new Apple Vision Pro.\",\n    src: \"/blocks/carousel/design-process.jpg\",\n  },\n  {\n    category: \"Product\",\n    title: \"Launching the new Apple Vision Pro.\",\n    src: \"/blocks/carousel/design-process.jpg\",\n  },\n  {\n    category: \"Product\",\n    title: \"Launching the new Apple Vision Pro.\",\n    src: \"/blocks/carousel/design-process.jpg\",\n  },\n]\n"
    },
    "lib": {},
    "@/registry/view/carousel-2/page": "import Container from \"@/components/Container\"\nimport CarouselContainer from \"./components/carousel-container\"\n\nconst page = () => {\n  return (\n    <Container>\n      <CarouselContainer />\n    </Container>\n  )\n}\n\nexport default page\n"
  },
  "dashbaord-1": {
    "components": {},
    "constant": {},
    "lib": {}
  },
  "login-1": {
    "components": {
      "@/registry/view/login-1/components/login-form": "\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { Button } from \"@/components/library/button\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/library/card\"\r\nimport { Input } from \"@/components/library/input\"\r\nimport { Label } from \"@/components/library/label\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport Link from \"next/link\"\r\nimport { useState } from \"react\"\r\nimport { FcGoogle } from \"react-icons/fc\"\r\nimport { FiEye, FiEyeOff } from \"react-icons/fi\"\r\n\r\nexport function LoginForm({ className, ...props }: React.ComponentPropsWithoutRef<\"div\">) {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword)\r\n    }\r\n\r\n    return (\r\n        <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle className=\"text-2xl\">Login</CardTitle>\r\n                    <CardDescription>Enter your email below to login to your account</CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <form>\r\n                        <div className=\"flex flex-col gap-6\">\r\n                            <div className=\"grid gap-2\">\r\n                                <Label htmlFor=\"email\">Email</Label>\r\n                                <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\r\n                            </div>\r\n                            <div className=\"grid gap-2\">\r\n                                <div className=\"flex items-center\">\r\n                                    <Label htmlFor=\"password\">Password</Label>\r\n                                    <a href=\"#\" className=\"ml-auto inline-block text-sm underline-offset-4 hover:underline\">\r\n                                        Forgot your password?\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"relative\">\r\n                                    <Input id=\"password\" type={showPassword ? \"text\" : \"password\"} required />\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        variant=\"ghost\"\r\n                                        size=\"sm\"\r\n                                        className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                        onClick={togglePasswordVisibility}\r\n                                        aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                                    >\r\n                                        {showPassword ? (\r\n                                            <FiEyeOff className=\"h-4 w-4 text-gray-500\" />\r\n                                        ) : (\r\n                                            <FiEye className=\"h-4 w-4 text-gray-500\" />\r\n                                        )}\r\n                                        <span className=\"sr-only\">{showPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <Button type=\"submit\" className=\"w-full\">\r\n                                Login\r\n                            </Button>\r\n                            <Button variant=\"outline\" className=\"w-full\">\r\n                                <FcGoogle className=\"inline-block text-lg \" />Login with Google\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"mt-4 text-center text-sm\">\r\n                            Don&apos;t have an account?{\" \"}\r\n                            <Link href=\"/view/signup-1\" className=\"underline underline-offset-4\">\r\n                                Sign up\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "@/registry/view/login-1/page": "import Container from \"@/components/Container\";\r\nimport { LoginForm } from \"./components/login-form\";\r\n\r\nexport default function LogInPage() {\r\n    return (\r\n        <div className=\"flex min-h-svh w-full items-center justify-center p-6 md:p-10\">\r\n            <Container className=\"w-full max-w-sm\">\r\n                <LoginForm />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "login-2": {
    "components": {
      "@/registry/view/login-2/components/login-form": "import { useState } from \"react\";\r\nimport { Button } from \"@/components/library/button\";\r\nimport { Card, CardContent } from \"@/components/library/card\";\r\nimport { Input } from \"@/components/library/input\";\r\nimport { Label } from \"@/components/library/label\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { ArrowLeft, Eye, EyeOff } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\n\r\nexport function LoginForm({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"div\">) {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const togglePasswordVisibility = () => setShowPassword(prev => !prev);\r\n\r\n  return (\r\n    <div className={cn(\"flex flex-col gap-6 py-12\", className)} {...props}>\r\n      <Link\r\n        href=\"/\"\r\n        className=\"absolute top-4 left-4 text-foreground hover:text-primary transition-colors\"\r\n      >\r\n        <span className=\"flex items-center\">\r\n          <ArrowLeft className=\"mr-2 w-5 h-5\" />\r\n          Back to Home\r\n        </span>\r\n      </Link>\r\n      <Card className=\"overflow-hidden\">\r\n        <CardContent className=\"grid p-0 md:grid-cols-2\">\r\n          <form className=\"p-6 md:p-8\">\r\n            <div className=\"flex flex-col gap-6\">\r\n              <div className=\"flex flex-col items-center text-center\">\r\n                <h1 className=\"text-2xl font-bold\">Welcome back</h1>\r\n                <p className=\"text-balance text-muted-foreground\">\r\n                  Login to your Acme Inc account\r\n                </p>\r\n              </div>\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                <Input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"m@example.com\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"grid gap-2\">\r\n                <div className=\"flex items-center\">\r\n                  <Label htmlFor=\"password\">Password</Label>\r\n                  <Link\r\n                    href=\"#\"\r\n                    className=\"ml-auto text-sm underline-offset-2 hover:underline\"\r\n                  >\r\n                    Forgot your password?\r\n                  </Link>\r\n                </div>\r\n                <div className=\"relative\">\r\n                  <Input\r\n                    id=\"password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    required\r\n                  />\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                    onClick={togglePasswordVisibility}\r\n                    aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                  >\r\n                    {showPassword ? (\r\n                      <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                    ) : (\r\n                      <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                    )}\r\n                    <span className=\"sr-only\">\r\n                      {showPassword ? \"Hide password\" : \"Show password\"}\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <Button type=\"submit\" className=\"w-full\">\r\n                Login\r\n              </Button>\r\n              <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\r\n                <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\r\n                  Or continue with\r\n                </span>\r\n              </div>\r\n              <div className=\"grid grid-cols-3 gap-4\">\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                    <path\r\n                      d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\r\n                      fill=\"currentColor\"\r\n                    />\r\n                  </svg>\r\n                  <span className=\"sr-only\">Login with Apple</span>\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                    <path\r\n                      d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\r\n                      fill=\"currentColor\"\r\n                    />\r\n                  </svg>\r\n                  <span className=\"sr-only\">Login with Google</span>\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={30} height={30}>\r\n                    <path\r\n                      d=\"M6.915 4.03c-1.968 0-3.683 1.28-4.871 3.113C.704 9.208 0 11.883 0 14.449c0 .706.07 1.369.21 1.973a6.624 6.624 0 0 0 .265.86 5.297 5.297 0 0 0 .371.761c.696 1.159 1.818 1.927 3.593 1.927 1.497 0 2.633-.671 3.965-2.444.76-1.012 1.144-1.626 2.663-4.32l.756-1.339.186-.325c.061.1.121.196.183.3l2.152 3.595c.724 1.21 1.665 2.556 2.47 3.314 1.046.987 1.992 1.22 3.06 1.22 1.075 0 1.876-.355 2.455-.843a3.743 3.743 0 0 0 .81-.973c.542-.939.861-2.127.861-3.745 0-2.72-.681-5.357-2.084-7.45-1.282-1.912-2.957-2.93-4.716-2.93-1.047 0-2.088.467-3.053 1.308-.652.57-1.257 1.29-1.82 2.05-.69-.875-1.335-1.547-1.958-2.056-1.182-.966-2.315-1.303-3.454-1.303zm10.16 2.053c1.147 0 2.188.758 2.992 1.999 1.132 1.748 1.647 4.195 1.647 6.4 0 1.548-.368 2.9-1.839 2.9-.58 0-1.027-.23-1.664-1.004-.496-.601-1.343-1.878-2.832-4.358l-.617-1.028a44.908 44.908 0 0 0-1.255-1.98c.07-.109.141-.224.211-.327 1.12-1.667 2.118-2.602 3.358-2.602zm-10.201.553c1.265 0 2.058.791 2.675 1.446.307.327.737.871 1.234 1.579l-1.02 1.566c-.757 1.163-1.882 3.017-2.837 4.338-1.191 1.649-1.81 1.817-2.486 1.817-.524 0-1.038-.237-1.383-.794-.263-.426-.464-1.13-.464-2.046 0-2.221.63-4.535 1.66-6.088.454-.687.964-1.226 1.533-1.533a2.264 2.264 0 0 1 1.088-.285z\"\r\n                      fill=\"currentColor\"\r\n                    />\r\n                  </svg>\r\n                  <span className=\"sr-only\">Login with Meta</span>\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-center text-sm\">\r\n                Don&apos;t have an account?{' '}\r\n                <Link href=\"#\" className=\"underline underline-offset-4\">\r\n                  Sign up\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div className=\"flex-1 hidden md:block relative\">\r\n            <img\r\n              src=\"/blocks/login-2/new-collection-1.jpg\"\r\n              alt=\"Art Lighting Showcase\"\r\n              className=\"absolute inset-0 h-full w-full object-cover\"\r\n            />\r\n            <div className=\"absolute inset-0 bg-background/60 backdrop-blur-sm flex flex-col justify-end p-8 text-foreground\">\r\n              <h2 className=\"text-3xl font-bold mb-2\">Join Art Lighting</h2>\r\n              <p className=\"text-sm\">\r\n                Create your account and start illuminating your space\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <div className=\"text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:text-primary\">\r\n        By clicking continue, you agree to our <Link href=\"#\">Terms of Service</Link>{' '}\r\n        and <Link href=\"#\">Privacy Policy</Link>.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "@/registry/view/login-2/page": "import Container from \"@/components/Container\";\r\nimport { LoginForm } from \"./components/login-form\";\r\n\r\nexport default function LogInPage() {\r\n    return (\r\n        <div className=\"flex min-h-svh flex-col items-center justify-center p-6 md:p-10 bg-gradient-to-br from-primary/20 via-background to-secondary/20\">\r\n            <Container className=\"w-full max-w-sm md:max-w-3xl\">\r\n                <LoginForm />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "login-3": {
    "components": {
      "@/registry/view/login-3/components/login-form": "\"use client\"\r\nimport { Button } from \"@/components/library/button\";\r\nimport { Input } from \"@/components/library/input\";\r\nimport { Label } from \"@/components/library/label\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Eye, EyeOff } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { useState } from \"react\";\r\n\r\nexport function LoginForm({\r\n    className,\r\n    ...props\r\n}: React.ComponentPropsWithoutRef<\"form\">) {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const togglePasswordVisibility = () => setShowPassword(prev => !prev);\r\n\r\n    return (\r\n        <form className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n            <div className=\"flex flex-col items-center gap-2 text-center\">\r\n                <h1 className=\"text-2xl font-bold\">Login to your account</h1>\r\n                <p className=\"text-balance text-sm text-muted-foreground\">\r\n                    Enter your email below to login to your account\r\n                </p>\r\n            </div>\r\n            <div className=\"grid gap-6\">\r\n                <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"email\">Email</Label>\r\n                    <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                    <div className=\"flex items-center\">\r\n                        <Label htmlFor=\"password\">Password</Label>\r\n                        <Link\r\n                            href=\"#\"\r\n                            className=\"ml-auto text-sm underline-offset-2 hover:underline\"\r\n                        >\r\n                            Forgot your password?\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"relative\">\r\n                        <Input\r\n                            id=\"password\"\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            required\r\n                        />\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                            onClick={togglePasswordVisibility}\r\n                            aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                        >\r\n                            {showPassword ? (\r\n                                <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                            ) : (\r\n                                <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                            )}\r\n                            <span className=\"sr-only\">\r\n                                {showPassword ? \"Hide password\" : \"Show password\"}\r\n                            </span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Button type=\"submit\" className=\"w-full\">\r\n                    Login\r\n                </Button>\r\n                <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\r\n                    <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\r\n                        Or continue with\r\n                    </span>\r\n                </div>\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                        <path\r\n                            d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\r\n                            fill=\"currentColor\"\r\n                        />\r\n                    </svg>\r\n                    Login with GitHub\r\n                </Button>\r\n            </div>\r\n            <div className=\"text-center text-sm\">\r\n                Don&apos;t have an account?{\" \"}\r\n                <a href=\"#\" className=\"underline underline-offset-4\">\r\n                    Sign up\r\n                </a>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "@/registry/view/login-3/page": "import { GalleryVerticalEnd } from \"lucide-react\"\r\nimport { LoginForm } from \"./components/login-form\"\r\nimport Link from \"next/link\"\r\nexport default function LoginPage() {\r\n    return (\r\n        <div className=\"grid min-h-svh lg:grid-cols-2\">\r\n            <div className=\"flex flex-col gap-4 p-6 md:p-10\">\r\n                <div className=\"flex justify-center gap-2 md:justify-start\">\r\n                    <Link href=\"#\" className=\"flex items-center gap-2 font-medium\">\r\n                        <div className=\"flex h-6 w-6 items-center justify-center rounded-md bg-primary text-primary-foreground\">\r\n                            <GalleryVerticalEnd className=\"size-4\" />\r\n                        </div>\r\n                        UniqueBrand.\r\n                    </Link>\r\n                </div>\r\n                <div className=\"flex flex-1 items-center justify-center\">\r\n                    <div className=\"w-full max-w-xs\">\r\n                        <LoginForm />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"relative hidden bg-muted lg:block\">\r\n                <img\r\n                    src=\"/placeholder.svg\"\r\n                    alt=\"Image\"\r\n                    className=\"absolute inset-0 h-full w-full object-cover dark:brightness-[0.2] dark:grayscale\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "login-4": {
    "components": {
      "@/registry/view/login-4/components/login-form": "\"use client\"\r\nimport { Button } from \"@/components/library/button\"\r\nimport { Input } from \"@/components/library/input\"\r\nimport { Label } from \"@/components/library/label\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Eye, EyeOff, GalleryVerticalEnd } from \"lucide-react\"\r\nimport Link from \"next/link\"\r\nimport { useState } from \"react\"\r\n\r\nexport function LoginForm({\r\n    className,\r\n    ...props\r\n}: React.ComponentPropsWithoutRef<\"div\">) {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const togglePasswordVisibility = () => setShowPassword(prev => !prev);\r\n\r\n    return (\r\n        <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n            <form>\r\n                <div className=\"flex flex-col gap-6\">\r\n                    <div className=\"flex flex-col items-center gap-2\">\r\n                        <a\r\n                            href=\"#\"\r\n                            className=\"flex flex-col items-center gap-2 font-medium\"\r\n                        >\r\n                            <div className=\"flex h-8 w-8 items-center justify-center rounded-md\">\r\n                                <GalleryVerticalEnd className=\"size-6\" />\r\n                            </div>\r\n                            <span className=\"sr-only\">Acme Inc.</span>\r\n                        </a>\r\n                        <h1 className=\"text-xl font-bold\">Welcome to Acme Inc.</h1>\r\n                        <div className=\"text-center text-sm\">\r\n                            Don&apos;t have an account?{\" \"}\r\n                            <a href=\"#\" className=\"underline underline-offset-4\">\r\n                                Sign up\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-col gap-6\">\r\n                        <div className=\"grid gap-2\">\r\n                            <Label htmlFor=\"email\">Email</Label>\r\n                            <Input\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"m@example.com\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"grid gap-2\">\r\n                            <div className=\"flex items-center\">\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Link\r\n                                    href=\"#\"\r\n                                    className=\"ml-auto text-sm underline-offset-2 hover:underline\"\r\n                                >\r\n                                    Forgot your password?\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"relative\">\r\n                                <Input\r\n                                    id=\"password\"\r\n                                    type={showPassword ? \"text\" : \"password\"}\r\n                                    required\r\n                                />\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"ghost\"\r\n                                    size=\"sm\"\r\n                                    className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                    onClick={togglePasswordVisibility}\r\n                                    aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                                >\r\n                                    {showPassword ? (\r\n                                        <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                                    ) : (\r\n                                        <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                                    )}\r\n                                    <span className=\"sr-only\">\r\n                                        {showPassword ? \"Hide password\" : \"Show password\"}\r\n                                    </span>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <Button type=\"submit\" className=\"w-full\">\r\n                            Login\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\r\n                        <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\r\n                            Or\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"grid gap-4 sm:grid-cols-2\">\r\n                        <Button variant=\"outline\" className=\"w-full\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                                <path\r\n                                    d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\r\n                                    fill=\"currentColor\"\r\n                                />\r\n                            </svg>\r\n                            Continue with Apple\r\n                        </Button>\r\n                        <Button variant=\"outline\" className=\"w-full\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                                <path\r\n                                    d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\r\n                                    fill=\"currentColor\"\r\n                                />\r\n                            </svg>\r\n                            Continue with Google\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className=\"text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:text-primary  \">\r\n                By clicking continue, you agree to our <a href=\"#\">Terms of Service</a>{\" \"}\r\n                and <a href=\"#\">Privacy Policy</a>.\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "@/registry/view/login-4/page": "import { LoginForm } from \"./components/login-form\";\r\n\r\nexport default function LoginPage() {\r\n    return (\r\n        <div className=\"flex min-h-svh flex-col items-center justify-center gap-6 bg-background p-6 md:p-10\">\r\n            <div className=\"w-full max-w-sm\">\r\n                <LoginForm />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "navbar-1": {
    "components": {
      "@/registry/view/navbar-1/components/navbar": "import Link from \"next/link\"\nimport { Menu } from \"lucide-react\"\n\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n} from \"@/components/ui/navigation-menu\"\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/library/accordion\"\nimport { Button } from \"@/components/library/button\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/library/sheet\"\n\nimport {\n  defaultAuth,\n  defaultLogo,\n  defaultMenu,\n  defaultMobileExtraLinks,\n  MenuItem,\n} from \"../constant\"\n\ninterface NavbarProps {\n  logo?: {\n    url: string\n    alt: string\n    title: string\n  }\n  menu?: MenuItem[]\n  mobileExtraLinks?: {\n    name: string\n    url: string\n  }[]\n  auth?: {\n    login: {\n      text: string\n      url: string\n    }\n    signup: {\n      text: string\n      url: string\n    }\n  }\n}\n\nconst Navbar = ({\n  logo = defaultLogo,\n  menu = defaultMenu,\n  mobileExtraLinks = defaultMobileExtraLinks,\n  auth = defaultAuth,\n}: NavbarProps) => {\n  return (\n    <section className=\"py-4 border-b\">\n      <div className=\"container\">\n        {/* Desktop Navigation */}\n        <nav className=\"hidden justify-between lg:flex\">\n          <div className=\"flex items-center gap-6\">\n            <Link href={logo.url} className=\"flex items-center gap-2\">\n              <span className=\"text-lg font-semibold\">{logo.title}</span>\n            </Link>\n            <NavigationMenu>\n              <NavigationMenuList>\n                {menu.map((item) => renderMenuItem(item))}\n              </NavigationMenuList>\n            </NavigationMenu>\n          </div>\n          <div className=\"flex gap-2\">\n            <Button variant=\"outline\">{auth.login.text}</Button>\n            <Button>{auth.signup.text}</Button>\n          </div>\n        </nav>\n\n        {/* Mobile Navigation */}\n        <div className=\"block lg:hidden\">\n          <div className=\"flex items-center justify-between\">\n            <Link href={logo.url} className=\"flex items-center gap-2\">\n              <span className=\"text-lg font-semibold\">{logo.title}</span>\n            </Link>\n            <Sheet>\n              <SheetTrigger asChild>\n                <Button variant=\"outline\" size=\"icon\">\n                  <Menu className=\"h-5 w-5\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent className=\"overflow-y-auto\">\n                <SheetHeader>\n                  <SheetTitle>\n                    <Link href={logo.url} className=\"flex items-center gap-2\">\n                      <span className=\"text-lg font-semibold\">\n                        {logo.title}\n                      </span>\n                    </Link>\n                  </SheetTitle>\n                </SheetHeader>\n                <div className=\"my-6 flex flex-col gap-6\">\n                  <Accordion type=\"single\" collapsible className=\"w-full\">\n                    {menu.map((item) => renderMobileMenuItem(item))}\n                  </Accordion>\n                  <div className=\"border-t py-4\">\n                    <div className=\"grid grid-cols-2 gap-2\">\n                      {mobileExtraLinks.map((link, idx) => (\n                        <Link\n                          key={idx}\n                          className=\"inline-flex items-center justify-center rounded-md px-4 py-2 text-sm font-medium text-muted-foreground transition-colors hover:bg-muted hover:text-accent-foreground\"\n                          href={link.url}\n                        >\n                          {link.name}\n                        </Link>\n                      ))}\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col gap-3\">\n                    <Button variant=\"outline\">{auth.login.text}</Button>\n                    <Button>{auth.signup.text}</Button>\n                  </div>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nconst renderMenuItem = (item: MenuItem) => {\n  if (item.items) {\n    return (\n      <NavigationMenuItem key={item.title}>\n        <NavigationMenuTrigger>{item.title}</NavigationMenuTrigger>\n        <NavigationMenuContent>\n          <ul className=\"w-80 p-3\">\n            {item.items.map((subItem) => (\n              <li key={subItem.title}>\n                <NavigationMenuLink asChild>\n                  <Link\n                    className=\"flex items-center gap-4 rounded-md p-3 transition-colors hover:bg-muted hover:text-accent-foreground\"\n                    href={subItem.url}\n                  >\n                    {subItem.icon}\n                    <div>\n                      <div className=\"text-sm font-semibold\">\n                        {subItem.title}\n                      </div>\n                      {subItem.description && (\n                        <p className=\"text-sm text-muted-foreground\">\n                          {subItem.description}\n                        </p>\n                      )}\n                    </div>\n                  </Link>\n                </NavigationMenuLink>\n              </li>\n            ))}\n          </ul>\n        </NavigationMenuContent>\n      </NavigationMenuItem>\n    )\n  }\n\n  return (\n    <NavigationMenuItem key={item.title}>\n      <NavigationMenuLink asChild>\n        <Link\n          className=\"group inline-flex items-center rounded-md px-4 py-2 text-sm font-medium transition-colors hover:bg-muted hover:text-accent-foreground\"\n          href={item.url}\n        >\n          {item.title}\n        </Link>\n      </NavigationMenuLink>\n    </NavigationMenuItem>\n  )\n}\n\nconst renderMobileMenuItem = (item: MenuItem) => {\n  if (item.items) {\n    return (\n      <AccordionItem key={item.title} value={item.title} className=\"border-b-0\">\n        <AccordionTrigger className=\"py-2 font-semibold\">\n          {item.title}\n        </AccordionTrigger>\n        <AccordionContent className=\"mt-2 flex flex-col gap-2\">\n          {item.items.map((subItem) => (\n            <Link\n              key={subItem.title}\n              className=\"flex items-center gap-4 rounded-md p-3 transition-colors hover:bg-muted hover:text-accent-foreground\"\n              href={subItem.url}\n            >\n              {subItem.icon}\n              <div>\n                <div className=\"text-sm font-semibold\">{subItem.title}</div>\n                {subItem.description && (\n                  <p className=\"text-sm text-muted-foreground\">\n                    {subItem.description}\n                  </p>\n                )}\n              </div>\n            </Link>\n          ))}\n        </AccordionContent>\n      </AccordionItem>\n    )\n  }\n\n  return (\n    <div key={item.title} className=\"py-2\">\n      <Link className=\"font-semibold\" href={item.url}>\n        {item.title}\n      </Link>\n    </div>\n  )\n}\n\nexport default Navbar\n"
    },
    "constant": {
      "@/registry/view/navbar-1/constant/index": "import { Book, Sunset, Trees, Zap } from \"lucide-react\"\n\nexport interface MenuItem {\n  title: string\n  url: string\n  description?: string\n  icon?: React.ReactNode\n  items?: MenuItem[]\n}\n\nexport const defaultLogo = {\n  url: \"https://uniquebrand.com\",\n  alt: \"UniqueBrand Logo\",\n  title: \"UniqueBrand\",\n}\n\nexport const defaultMenu: MenuItem[] = [\n  { title: \"Dashboard\", url: \"/\" },\n  {\n    title: \"Services\",\n    url: \"#\",\n    items: [\n      {\n        title: \"Web Development\",\n        description: \"Responsive and modern websites\",\n        icon: <Zap className=\"h-5 w-5 shrink-0\" />,\n        url: \"/services/web-development\",\n      },\n      {\n        title: \"Mobile Apps\",\n        description: \"Innovative mobile solutions\",\n        icon: <Sunset className=\"h-5 w-5 shrink-0\" />,\n        url: \"/services/mobile-apps\",\n      },\n      {\n        title: \"UI/UX Design\",\n        description: \"User-centered design experiences\",\n        icon: <Book className=\"h-5 w-5 shrink-0\" />,\n        url: \"/services/library-ux-design\",\n      },\n      {\n        title: \"Consulting\",\n        description: \"Expert advice to grow your business\",\n        icon: <Trees className=\"h-5 w-5 shrink-0\" />,\n        url: \"/services/consulting\",\n      },\n    ],\n  },\n  {\n    title: \"About Us\",\n    url: \"/about\",\n  },\n  {\n    title: \"Contact\",\n    url: \"/contact\",\n  },\n  {\n    title: \"Blog\",\n    url: \"/blog\",\n  },\n]\n\nexport const defaultMobileExtraLinks = [\n  { name: \"Privacy Policy\", url: \"/privacy\" },\n  { name: \"Terms of Use\", url: \"/terms\" },\n  { name: \"Support\", url: \"/support\" },\n  { name: \"Careers\", url: \"/careers\" },\n]\n\nexport const defaultAuth = {\n  login: { text: \"Sign In\", url: \"/login\" },\n  signup: { text: \"Register\", url: \"/register\" },\n}\n"
    },
    "lib": {},
    "@/registry/view/navbar-1/page": "import Navbar from \"./components/navbar\"\n\nconst page = () => {\n  return <Navbar />\n}\n\nexport default page\n"
  },
  "new-collection-1": {
    "components": {
      "@/registry/view/new-collection-1/components/new-collection": "\"use client\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport Link from \"next/link\";\nimport React, { useEffect, useRef } from \"react\";\nimport Container from \"@/components/Container\";\n\ngsap.registerPlugin(ScrollTrigger);\nconst NewCollection = () => {\n  const sectionRef = useRef(null);\n  useEffect(() => {\n    const boxes = sectionRef.current.querySelectorAll(\".animate-box\");\n    boxes.forEach((box) => {\n      const button = box.querySelector(\".animate-button\");\n      const image = box.querySelector(\".animate-image\");\n      const text = box.querySelector(\".animate-text\");\n      const tl = gsap.timeline({\n        scrollTrigger: {\n          trigger: box,\n          start: \"top 80%\",\n          end: \"top 60%\",\n        },\n      });\n      tl.fromTo(\n        button,\n        {\n          opacity: 0,\n          scale: 0.5,\n        },\n        {\n          opacity: 1,\n          scale: 1,\n          duration: 0.5,\n          ease: \"power1.inOut\",\n        },\n      )\n        .fromTo(\n          image,\n          {\n            opacity: 0,\n            y: 20,\n          },\n          {\n            opacity: 1,\n            y: 0,\n            duration: 1,\n          },\n          \"-=0.2\",\n        )\n        .fromTo(\n          text,\n          {\n            opacity: 0,\n            y: 20,\n          },\n          {\n            opacity: 1,\n            y: 0,\n            duration: 1,\n          },\n          \"-=0.5\",\n        );\n    });\n  }, []);\n  return (\n    <section ref={sectionRef} className=\"py-12 md:py-24 lg:py-32 \">\n      <Container>\n        <div className=\"flex md:flex-row flex-col  items-start\">\n          <div className=\"w-full flex justify-between flex-col md:mb-0 mb-20 space-y-3\">\n            <Link className=\"animate-box\" href=\"Collection/spot\">\n              <div className=\"relative\">\n                <img\n                  alt=\"Line Up/Down LED Suspended Lamp\"\n                  className=\"object-cover w-full h-54 md:h-[500px] rounded-lg animate-image\"\n                  src=\"/blocks/new-collection/new-collection-3.jpg\"\n                />\n                <div\n                  className={`py-2 px-4 select-none bg-[linear-gradient(90deg,_transparent_0%,_#ffb96914_90%)] inline-flex w-fit items-center whitespace-nowrap rounded-full border text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent text-secondary dark:text-secondary-foreground absolute top-0 right-0 mt-4 mr-4 shadow-lg backdrop-blur-[6px] overflow-hidden  `}\n                >\n                  <p className=\"overflow-hidden\">NEW</p>\n                </div>\n              </div>\n              <div className=\"my-4 animate-text\">\n                <h2 className=\"text-sm sm:text-lg md:text-xl lg:text-2xl xl:text-3xl text-muted-foreground font-bold uppercase\">\n                  Halo — LED Ring Suspended Lamp\n                </h2>\n                <p className=\"block mt-2 text-sm sm:text-base md:text-lg hover:underline font-medium\">\n                  Discover more\n                </p>\n              </div>\n            </Link>\n            <Link className=\"animate-box\" href=\"Collection/hallo\">\n              <div className=\"relative\">\n                <img\n                  alt=\"Line Up/Down LED Suspended Lamp\"\n                  className=\"object-cover w-full h-55 md:h-[500px] rounded-lg animate-image\"\n                  src=\"/blocks/new-collection/new-collection-2.jpg\"\n                />\n                <div\n                  className={`py-2 px-4 select-none backdrop-blur-sm inline-flex text-[#fff] dark:text-secondary-foreground w-fit items-center whitespace-nowrap rounded-full border text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent text-secondary absolute top-0 right-0 mt-4 mr-4 shadow-lg overflow-hidden`}\n                >\n                  <p className=\"overflow-hidden\">NEW</p>\n                </div>\n              </div>\n              <div className=\"mt-4 animate-text absolute\">\n                <h2 className=\"text-muted-foreground text-sm sm:text-lg md:text-xl lg:text-2xl xl:text-3xl  font-bold uppercase\">\n                  Halo — LED Ring Suspended Lamp\n                </h2>\n                <p className=\"block mt-2 text-sm sm:text-base md:text-lg hover:underline  font-medium\">\n                  Discover more\n                </p>\n              </div>\n            </Link>\n          </div>\n          <Link\n            className=\"w-full animate-box  md:mt-0 md:ml-10\"\n            href=\"Collection/track\"\n          >\n            <div className=\"relative\">\n              <img\n                alt=\"Line Up/Down LED Suspended Lamp\"\n                className=\"object-cover w-full h-auto md:h-[500px] lg:h-[750px] rounded-lg animate-image\"\n                src=\"/blocks/new-collection/new-collection-1.jpg\"\n              />\n              <div\n                className={`py-2 px-4 select-none  bg-[linear-gradient(90deg,_transparent_0%,_#ffb96914_90%)] inline-flex text-[#FFF] dark:text-secondary-foreground w-fit items-center whitespace-nowrap rounded-full border text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent text-secondary absolute top-0 right-0 mt-4 mr-4 shadow-lg backdrop-blur-[6px] overflow-hidden  `}\n              >\n                <p className=\"overflow-hidden\">NEW</p>\n              </div>\n            </div>\n            <div className=\"mt-4 animate-text\">\n              <h2 className=\"text-sm sm:text-lg md:text-xl text-muted-foreground lg:text-2xl xl:text-3xl  font-bold uppercase\">\n                Line — Up/Down LED Suspended Lamp\n              </h2>\n              <p className=\"block mt-2 text-sm sm:text-base md:text-lg hover:underline  font-medium\">\n                Discover more\n              </p>\n            </div>\n          </Link>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default NewCollection;\n"
    },
    "constant": {},
    "lib": {},
    "@/registry/view/new-collection-1/page": "import Container from \"@/components/Container\"\nimport NewCollection from \"./components/new-collection\"\n\nconst page = () => {\n  return (\n    <Container>\n      <NewCollection />\n    </Container>\n  )\n}\n\nexport default page\n"
  },
  "product-overview-1": {
    "components": {
      "@/registry/view/product-overview-1/components/discounted-price": "import React from \"react\";\r\nimport { formatPrice } from \"../lib/utils\";\r\n\r\ninterface DiscountPriceProps {\r\n    price: number;\r\n    discount: number;\r\n    quantity?: number;\r\n}\r\nconst DiscountPrice: React.FC<DiscountPriceProps> = ({\r\n    price,\r\n    discount,\r\n    quantity = 1,\r\n}) => {\r\n    // here we are using Math.ceil to round up the price to the nearest integer\r\n    // this is because the price is in EGP and we want to avoid decimal values\r\n    let priceIncreasing = Math.ceil(price);\r\n    const discountedPrice = Math.ceil(priceIncreasing * (1 - discount));\r\n    // When using the quantity parameter, please ensure that the shipping price is updated accordingly, as shipping costs depend on the quantity of products ordered.\r\n        // const PriceAfterTimesQuantity = discountedPrice * quantity + shippingPrice + taxPrice * (discountedPrice * quantity);\r\n    const formattedPrice = formatPrice(\r\n        discountedPrice * quantity,\r\n    );\r\n    return (\r\n        <div>\r\n            <p className=\"text-destructive font-semibold\">{formattedPrice}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiscountPrice;\r\n",
      "@/registry/view/product-overview-1/components/normal-price": "import { formatPrice } from \"../lib/utils\";\r\nimport React from \"react\";\r\n\r\ntype ProductPrices = {\r\n    price: number;\r\n    quantity?: number;\r\n};\r\n\r\nconst NormalPrice: React.FC<ProductPrices> = ({\r\n    price,\r\n    quantity = 1,\r\n}) => {\r\n    // here we are using Math.ceil to round up the price to the nearest integer\r\n    // this is because the price is in EGP and we want to avoid decimal values\r\n    const PriceAfterTimesQuantity = price * quantity;\r\n    let normalPrice = Math.ceil(PriceAfterTimesQuantity);\r\n    // If you want to add more parameters to the price like: shippingPrice, taxPrice, etc. \r\n    // you can add it like this: \r\n    // When using the quantity parameter, please ensure that the shipping price is updated accordingly, as shipping costs depend on the quantity of products ordered.\r\n    // const PriceAfterTimesQuantity = normalPrice * quantity + shippingPrice + taxPrice * (normalPrice * quantity);\r\n    const formattedTotalPrice = formatPrice(normalPrice);\r\n    return (\r\n        <div>\r\n            <p>{formattedTotalPrice}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NormalPrice;\r\n",
      "@/registry/view/product-overview-1/components/product-color-temp-button": "\"use client\";\r\n\r\nimport { Button } from \"@/components/library/button\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport type ProductColorTemp = \"warm\" | \"cool\" | \"white\";\r\n\r\nexport interface ColorTemperatureOption {\r\n    value: ProductColorTemp;\r\n    label: string;\r\n    icon?: React.ReactNode;\r\n}\r\n\r\nconst DEFAULT_OPTIONS: ColorTemperatureOption[] = [\r\n    { value: \"warm\", label: \"Warm\" },\r\n    { value: \"cool\", label: \"Cool\" },\r\n    { value: \"white\", label: \"White\" },\r\n];\r\n\r\ninterface ColorTemperatureSelectorProps {\r\n    value: ProductColorTemp;\r\n    onValueChange: (newValue: ProductColorTemp) => void;\r\n    options?: ColorTemperatureOption[];\r\n    title?: string;\r\n    disabled?: boolean;\r\n    className?: string;\r\n    buttonClassName?: string;\r\n}\r\n\r\nexport function ColorTemperatureSelector({\r\n    value,\r\n    onValueChange,\r\n    options = DEFAULT_OPTIONS,\r\n    title = \"Color Temperature\",\r\n    disabled = false,\r\n    className,\r\n    buttonClassName,\r\n}: ColorTemperatureSelectorProps) {\r\n    const [selectedValue, setSelectedValue] = useState<ProductColorTemp>(value);\r\n\r\n    useEffect(() => {\r\n        setSelectedValue(value);\r\n    }, [value]);\r\n\r\n    const handleSelectionChange = (newValue: ProductColorTemp) => {\r\n        if (disabled || newValue === selectedValue) return;\r\n\r\n        setSelectedValue(newValue);\r\n        onValueChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={cn(\"space-y-2\", className)}>\r\n            {title && <h3 className=\"text-lg font-semibold mb-2\">{title}</h3>}\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n                {options.map((option) => (\r\n                    <Button\r\n                        key={option.value}\r\n                        onClick={() => handleSelectionChange(option.value)}\r\n                        variant={selectedValue === option.value ? \"default\" : \"outline\"}\r\n                        disabled={disabled}\r\n                        className={cn(\r\n                            \"flex items-center justify-center p-0 m-0 rounded-full transition-all duration-200\",\r\n                            selectedValue === option.value\r\n                                ? \"bg-primary text-primary-foreground shadow-lg\"\r\n                                : \"bg-background hover:bg-secondary\",\r\n                            disabled && \"opacity-50 cursor-not-allowed\",\r\n                            buttonClassName\r\n                        )}\r\n                    >\r\n                        {option.label}\r\n                    </Button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n",
      "@/registry/view/product-overview-1/components/product-image-carousel": "\"use client\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport Image from \"next/image\";\r\nimport React from \"react\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\ntype ProductImagesProps = {\r\n    productImages: string[];\r\n};\r\n\r\nconst ProductImages: React.FC<ProductImagesProps> = ({ productImages }) => {\r\n    const [currentIndex, setCurrentIndex] = React.useState(0);\r\n    const handleSlideChange = (index: number) => {\r\n        setCurrentIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"relative\">\r\n            <Carousel\r\n                showThumbs={true}\r\n                showStatus={false}\r\n                useKeyboardArrows={true}\r\n                infiniteLoop={false}\r\n                autoPlay={false}\r\n                selectedItem={currentIndex}\r\n                onChange={handleSlideChange}\r\n                className=\"product-carousel\"\r\n                thumbWidth={60}\r\n                renderThumbs={() =>\r\n                    productImages.map((img, index) => (\r\n                        <div key={index} className=\"thumbnail-wrapper h-12 sm:h-14 md:h-16\">\r\n                            <Image\r\n                                src={img}\r\n                                alt={`Thumbnail ${index + 1}`}\r\n                                width={80}\r\n                                height={80}\r\n                                className=\"object-cover rounded-sm thumbnail-image\"\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n                renderArrowPrev={(onClickHandler, hasPrev, label) =>\r\n                    hasPrev && (\r\n                        <button\r\n                            onClick={onClickHandler}\r\n                            title={label}\r\n                            className=\"absolute z-[2] w-8 h-8 sm:w-10 sm:h-10 left-1 sm:left-2 rounded-full bg-gray-50 dark:bg-gray-950 cursor-pointer border-none shadow-md flex items-center justify-center\"\r\n                            style={{\r\n                                top: \"calc(50% - 20px)\",\r\n                            }}\r\n                        >\r\n                            <ChevronLeft className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n                        </button>\r\n                    )\r\n                }\r\n                renderArrowNext={(onClickHandler, hasNext, label) =>\r\n                    hasNext && (\r\n                        <button\r\n                            onClick={onClickHandler}\r\n                            title={label}\r\n                            className=\"absolute z-[2] w-8 h-8 sm:w-10 sm:h-10 right-1 sm:right-2 rounded-full bg-gray-50 dark:bg-gray-950 cursor-pointer border-none shadow-md flex items-center justify-center\"\r\n                            style={{\r\n                                top: \"calc(50% - 20px)\",\r\n                            }}\r\n                        >\r\n                            <ChevronRight className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n                        </button>\r\n                    )\r\n                }\r\n            >\r\n                {productImages.map((img, index) => (\r\n                    <div key={index} className=\"w-full aspect-square flex items-center justify-center\">\r\n                        <Image\r\n                            src={img}\r\n                            alt={`Product image ${index + 1}`}\r\n                            width={800}\r\n                            height={800}\r\n                            priority={index === 0}\r\n                            quality={90}\r\n                            className=\"max-h-[60vh] mx-auto rounded-lg\"\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n            <style jsx global>{`\r\n                .carousel .thumbs-wrapper {\r\n                    margin: 10px 0 !important;\r\n                    overflow: hidden;\r\n                }\r\n                \r\n                .carousel .thumbs {\r\n                    padding: 0 !important;\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    gap: 8px;\r\n                }\r\n                \r\n                /* Better spacing on mobile */\r\n                @media (max-width: 640px) {\r\n                    .carousel .thumbs {\r\n                        gap: 4px;\r\n                    }\r\n                    \r\n                    .carousel .thumb {\r\n                        margin-right: 0 !important;\r\n                    }\r\n                }\r\n                \r\n                /* Make sure main image container is responsive */\r\n                .carousel .slide img {\r\n                    max-width: 100%;\r\n                    max-height: 100%;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductImages;",
      "@/registry/view/product-overview-1/components/product-info": "\"use client\";\r\n\r\nimport { Button } from \"@/components/library/button\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { ArrowRight, Minus, Plus, ShoppingCart } from \"lucide-react\";\r\nimport DiscountPrice from \"./discounted-price\";\r\nimport NormalPrice from \"./normal-price\";\r\nimport { ColorTemperatureSelector, ProductColorTemp } from \"./product-color-temp-button\";\r\nimport { ProductIP, ProductIPSelector } from \"./product-ip-buttons\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\ninterface ProductConfigurationPanelProps {\r\n    productName: string;\r\n    productCode?: string;\r\n    description: string;\r\n    displayPrice: number;\r\n    discountPercentage?: number;\r\n    quantity: number;\r\n    onIncreaseQuantity: () => void;\r\n    onDecreaseQuantity: () => void;\r\n    canDecreaseQuantity: boolean;\r\n    showIpSelector: boolean;\r\n    selectedIp: ProductIP;\r\n    onIpChange: (newIp: ProductIP) => void;\r\n    isIpSelectorDisabled?: boolean;\r\n    showColorTempSelector?: boolean;\r\n    selectedColorTemp: ProductColorTemp;\r\n    onColorTempChange: (newColorTemp: ProductColorTemp) => void;\r\n    isColorTempSelectorDisabled?: boolean;\r\n    showLampSelector: boolean;\r\n    isLampSelectorDisabled?: boolean;\r\n    basePriceForLamp?: number;\r\n    hNumberForLamp?: number;\r\n    onAddToCart: () => void;\r\n    isAddToCartLoading: boolean;\r\n    addToCartLabel?: string;\r\n    onOrderNow: () => void;\r\n    isOrderNowLoading: boolean;\r\n    orderNowLabel?: string;\r\n    stockStatus: \"inStock\" | \"outOfStock\" | \"checkAvailability\";\r\n    stockStatusText?: string;\r\n    availabilityCheckCta?: string\r\n}\r\n\r\nexport function ProductConfigurationPanel({\r\n    productName,\r\n    productCode = \"PRODUCT-CODE\",\r\n    description,\r\n    displayPrice,\r\n    discountPercentage,\r\n    quantity,\r\n    onIncreaseQuantity,\r\n    onDecreaseQuantity,\r\n    canDecreaseQuantity,\r\n    showIpSelector,\r\n    selectedIp,\r\n    onIpChange,\r\n    isIpSelectorDisabled,\r\n    showColorTempSelector = true,\r\n    selectedColorTemp,\r\n    onColorTempChange,\r\n    isColorTempSelectorDisabled,\r\n    onAddToCart,\r\n    isAddToCartLoading,\r\n    addToCartLabel = \"Add to Cart\",\r\n    onOrderNow,\r\n    isOrderNowLoading,\r\n    orderNowLabel = \"Order Now\",\r\n    stockStatus,\r\n    stockStatusText = \"In Stock\",\r\n    availabilityCheckCta = \"Check Stores Availability\",\r\n}: ProductConfigurationPanelProps) {\r\n    // State to track IP-related price changes\r\n    const [currentPrice, setCurrentPrice] = useState(displayPrice);\r\n    const [additionalIpCost, setAdditionalIpCost] = useState(0);\r\n\r\n    // Update price when displayPrice or additionalIpCost changes\r\n    useEffect(() => {\r\n        setCurrentPrice(displayPrice + additionalIpCost);\r\n    }, [displayPrice, additionalIpCost]);\r\n\r\n    // Handle IP change with price updates\r\n    const handleIpChange = (newIp: ProductIP, newAdditionalPrice?: number) => {\r\n        onIpChange(newIp);\r\n        if (newAdditionalPrice !== undefined) {\r\n            setAdditionalIpCost(newAdditionalPrice);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full px-2 sm:px-4 lg:ml-0 xl:ml-8 2xl:ml-16\">\r\n            <h1 className=\"text-xl sm:text-2xl md:text-[24px] lg:text-3xl mt-3 lg:mt-5 mb-2 font-bold uppercase\">\r\n                {productCode}\r\n            </h1>\r\n            <p className=\"text-muted-foreground text-sm md:text-base lg:text-lg mb-3\">\r\n                {description}\r\n            </p>\r\n            <div className=\"flex flex-col mb-2 sm:mb-4\">\r\n                <div className={cn(\r\n                    \"grid gap-4 space-x-0 gap-y-4 grid-cols-1 md:grid-cols-2 \",\r\n                )}>\r\n                    {showColorTempSelector && (\r\n                        <ColorTemperatureSelector\r\n                            value={selectedColorTemp}\r\n                            onValueChange={onColorTempChange}\r\n                            disabled={isColorTempSelectorDisabled || isOrderNowLoading || isAddToCartLoading}\r\n                        />\r\n                    )}\r\n                    {showIpSelector && (\r\n                        <ProductIPSelector\r\n                            value={selectedIp}\r\n                            onValueChange={handleIpChange}\r\n                            disabled={isIpSelectorDisabled || isOrderNowLoading || isAddToCartLoading}\r\n                            title=\"Water Resistance (IP)\"\r\n                            basePrice={displayPrice}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"my-3 sm:my-4 flex flex-wrap items-center gap-2 sm:gap-3\">\r\n                {discountPercentage && discountPercentage > 0 ? (\r\n                    <>\r\n                        <span className=\"text-base sm:text-lg font-semibold\">\r\n                            <DiscountPrice\r\n                                price={currentPrice}\r\n                                discount={discountPercentage}\r\n                                quantity={quantity}\r\n                            />\r\n                        </span>\r\n                        <s className=\"text-gray-500 italic text-sm sm:text-base\">\r\n                            <NormalPrice price={currentPrice} quantity={quantity} />\r\n                        </s>\r\n                        <span className=\"text-green-500 font-semibold text-sm sm:text-base\">\r\n                            {discountPercentage * 100}% OFF\r\n                        </span>\r\n                    </>\r\n                ) : (\r\n                    <span className=\"text-base sm:text-lg font-semibold\">\r\n                        <NormalPrice price={currentPrice} quantity={quantity} />\r\n                    </span>\r\n                )}\r\n            </div>\r\n            <div className=\"flex flex-row justify-between items-center w-full mb-3 sm:mb-4 gap-2 sm:gap-0\">\r\n                <button\r\n                    className=\"text-primary text-sm sm:text-base md:text-lg flex items-center hover:underline disabled:text-muted-foreground disabled:no-underline disabled:cursor-not-allowed\"\r\n                    disabled={stockStatus !== 'checkAvailability'}\r\n                >\r\n                    {availabilityCheckCta}\r\n                    <ArrowRight className=\"w-4 h-4 sm:w-5 sm:h-5 ml-1 sm:ml-2\" />\r\n                </button>\r\n                <p className={cn(\r\n                    \"text-sm sm:text-base md:text-lg\",\r\n                    stockStatus === 'inStock' ? \"text-green-400\" : \"text-red-500\"\r\n                )}>\r\n                    {stockStatusText}\r\n                </p>\r\n            </div>\r\n            <div className=\"mt-4 sm:mt-6\">\r\n                <div className=\"flex flex-row items-center gap-3 sm:gap-4 w-full\">\r\n                    <div className=\"flex items-center justify-center w-auto\">\r\n                        <Button\r\n                            size=\"icon\"\r\n                            onClick={onDecreaseQuantity}\r\n                            disabled={!canDecreaseQuantity || isOrderNowLoading || isAddToCartLoading}\r\n                            className=\"w-10 h-10 sm:w-12 sm:h-12 shadow-md hover:shadow-lg transition-shadow bg-gray-950 hover:bg-black dark:bg-gray-100 dark:hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        >\r\n                            <Minus className=\"h-4 w-4 sm:w-5 sm:h-5\" />\r\n                        </Button>\r\n                        <span className=\"text-base sm:text-lg mx-3 sm:mx-4 w-0 sm:w-6 md:w-8 text-center\">{quantity}</span>\r\n                        <Button\r\n                            size=\"icon\"\r\n                            onClick={onIncreaseQuantity}\r\n                            disabled={isOrderNowLoading || isAddToCartLoading}\r\n                            className=\"w-10 h-10 sm:w-12 sm:h-12 shadow-md hover:shadow-lg transition-shadow bg-gray-950 hover:bg-black dark:bg-gray-100 dark:hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        >\r\n                            <Plus className=\"h-4 w-4 sm:w-5 sm:h-5\" />\r\n                        </Button>\r\n                    </div>\r\n                    <Button\r\n                        onClick={onAddToCart}\r\n                        disabled={isAddToCartLoading || isOrderNowLoading || stockStatus !== 'inStock'}\r\n                        className=\"bg-primary text-white px-3 py-2.5 sm:px-4 sm:py-3 text-sm sm:text-base w-full rounded uppercase flex items-center justify-center disabled:opacity-70 disabled:cursor-not-allowed\"\r\n                    >\r\n                        {isAddToCartLoading ? \"Adding...\" : addToCartLabel}\r\n                        {!isAddToCartLoading && (\r\n                            <ShoppingCart className=\"ml-2 w-4 h-4 sm:w-5 sm:h-5\" />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n                <div className=\"mt-3 sm:mt-4\">\r\n                    <button\r\n                        onClick={onOrderNow}\r\n                        disabled={isOrderNowLoading || isAddToCartLoading || stockStatus !== 'inStock'}\r\n                        className={cn(\r\n                            \"border-gray-950 dark:border-gray-50 transition-colors duration-300 bg-gray-50 dark:bg-transparent border-[1.5px] px-3 py-2.5 sm:px-4 sm:py-3 text-sm sm:text-base w-full rounded\",\r\n                            \"hover:bg-black hover:text-white dark:hover:bg-gray-100 dark:hover:text-gray-950 dark:text-gray-100 dark:bg-background\",\r\n                            \"disabled:opacity-70 disabled:cursor-not-allowed disabled:bg-gray-200 disabled:text-gray-500 disabled:hover:bg-gray-200 disabled:hover:text-gray-500\"\r\n                        )}\r\n                    >\r\n                        {isOrderNowLoading ? \"Processing...\" : orderNowLabel}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}",
      "@/registry/view/product-overview-1/components/product-ip-buttons": "\"use client\"\r\n\r\nimport { Button } from \"@/components/library/button\";\r\nimport {\r\n    Tooltip,\r\n    TooltipContent,\r\n    TooltipProvider,\r\n    TooltipTrigger,\r\n} from \"@/components/library/tooltip\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Droplets } from \"lucide-react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport type ProductIP = \"IP20\" | \"IP44\" | \"IP54\" | \"IP65\" | \"IP68\";\r\n\r\nconst PRODUCT_IP_OPTIONS_MAP: Record<\r\n    ProductIP,\r\n    { label: string; description: string, increaseOnPricePercent: number }\r\n> = {\r\n    IP20: {\r\n        label: \"IP 20\",\r\n        description: \"Protected against solid objects over 12mm\",\r\n        increaseOnPricePercent: 0\r\n    },\r\n    IP44: {\r\n        label: \"IP 44\",\r\n        description: \"Protected against water splashes from all directions\",\r\n        increaseOnPricePercent: 0.04\r\n    },\r\n    IP54: {\r\n        label: \"IP 54\",\r\n        description: \"Protected against dust and water splashes\",\r\n        increaseOnPricePercent: 0.06\r\n    },\r\n    IP65: {\r\n        label: \"IP 65\",\r\n        description: \"Dust tight and protected against water jets\",\r\n        increaseOnPricePercent: 0.08\r\n    },\r\n    IP68: {\r\n        label: \"IP 68\",\r\n        description: \"Dust tight and protected against long periods of immersion\",\r\n        increaseOnPricePercent: 0.10\r\n    },\r\n};\r\n\r\ninterface ProductIPSelectorProps {\r\n    value: ProductIP;\r\n    onValueChange: (newValue: ProductIP, newPrice?: number) => void;\r\n    title?: string;\r\n    basePrice: number;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport function ProductIPSelector({\r\n    value,\r\n    onValueChange,\r\n    title = \"Water Resistance (IP Rating)\",\r\n    disabled = false,\r\n    basePrice\r\n}: ProductIPSelectorProps) {\r\n    const [selectedIp, setSelectedIp] = useState<ProductIP>(value);\r\n\r\n    useEffect(() => {\r\n        setSelectedIp(value);\r\n    }, [value]);\r\n\r\n    const handleIpChange = (newIp: ProductIP) => {\r\n        if (disabled) return;\r\n        setSelectedIp(newIp);\r\n\r\n        const { increaseOnPricePercent } = PRODUCT_IP_OPTIONS_MAP[newIp];\r\n        const additionalPrice = basePrice * increaseOnPricePercent;\r\n        onValueChange(newIp, additionalPrice);\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-2\">\r\n            {title && (\r\n                <h3 className=\"text-lg font-semibold mb-2\">{title}</h3>\r\n            )}\r\n            <div className=\"grid sm:grid-cols-3 grid-cols-1 gap-2\">\r\n                {Object.entries(PRODUCT_IP_OPTIONS_MAP).map(\r\n                    ([ip, { label, description }]) => (\r\n                        <TooltipProvider key={ip}>\r\n                            <Tooltip>\r\n                                <TooltipTrigger asChild>\r\n                                    <Button\r\n                                        onClick={() => handleIpChange(ip as ProductIP)}\r\n                                        variant={selectedIp === ip ? \"default\" : \"outline\"}\r\n                                        disabled={disabled}\r\n                                        className={cn(\r\n                                            \"flex items-center justify-center w-full rounded-full\",\r\n                                            \"transition-colors duration-150 ease-in-out\",\r\n                                            selectedIp === ip\r\n                                                ? \"bg-primary text-primary-foreground\"\r\n                                                : \"bg-background hover:bg-secondary text-secondary-foreground\",\r\n                                            disabled && \"opacity-50 cursor-not-allowed\"\r\n                                        )}\r\n                                    >\r\n                                        <Droplets className=\"w-4 h-4 mr-1 flex-shrink-0\" />\r\n                                        <span className=\"ml-1 truncate\">{label}</span>\r\n                                    </Button>\r\n                                </TooltipTrigger>\r\n                                <TooltipContent className=\"sm:block hidden font-medium\">\r\n                                    {description}\r\n                                </TooltipContent>\r\n                            </Tooltip>\r\n                        </TooltipProvider>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}"
    },
    "constant": {},
    "lib": {
      "@/registry/view/product-overview-1/lib/utils.ts": "// this for formatting the price in the product overview page for your country currency \r\nexport const formatPrice = (price: number) => {\r\n    const formatter = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"EGP\",\r\n        useGrouping: false,\r\n    });\r\n    return formatter.format(price);\r\n};\r\n"
    },
    "@/registry/view/product-overview-1/page": "\"use client\";\r\n\r\nimport Container from \"@/components/Container\";\r\nimport { ProductColorTemp } from \"@/registry/view/product-overview-1/components/product-color-temp-button\";\r\nimport ProductImages from \"@/registry/view/product-overview-1/components/product-image-carousel\";\r\nimport { ProductConfigurationPanel } from \"@/registry/view/product-overview-1/components/product-info\";\r\nimport { ProductIP } from \"@/registry/view/product-overview-1/components/product-ip-buttons\";\r\nimport { useState } from \"react\";\r\n\r\ninterface ProductOverviewProps {\r\n    productName: string;\r\n    productCode?: string;\r\n    description: string;\r\n    price: number;\r\n    originalPrice?: number;\r\n    discountPercentage?: number;\r\n    images: string[];\r\n    initialIp?: ProductIP;\r\n    initialColorTemp?: ProductColorTemp;\r\n    stockStatus?: \"inStock\" | \"outOfStock\" | \"checkAvailability\";\r\n    stockStatusText?: string;\r\n    specifications?: { [key: string]: string };\r\n}\r\n\r\nexport default function ProductOverviewPage({\r\n    productName = \"Product Name\",\r\n    productCode = \"PRODUCT-CODE\",\r\n    description = \"Product description goes here. This is a sample product overview page.\",\r\n    price = 99.99,\r\n    discountPercentage = 0.10,\r\n    images = [\r\n        \"/components/product-card-1.png\",\r\n        \"/components/product-card-1.png\",\r\n        \"/components/product-card-1.png\",\r\n    ],\r\n    initialIp = \"IP44\",\r\n    initialColorTemp = \"warm\",\r\n    stockStatus = \"inStock\",\r\n    stockStatusText = \"In Stock\",\r\n    specifications,\r\n}: ProductOverviewProps) {\r\n    const [quantity, setQuantity] = useState<number>(1);\r\n    const [selectedIp, setSelectedIp] = useState<ProductIP>(initialIp);\r\n    const [selectedColorTemp, setSelectedColorTemp] = useState<ProductColorTemp>(initialColorTemp);\r\n    const [isAddingToCart, setIsAddingToCart] = useState<boolean>(false);\r\n    const [isOrdering, setIsOrdering] = useState<boolean>(false);\r\n    const [currentPrice, setCurrentPrice] = useState<number>(price);\r\n\r\n    const handleIncreaseQuantity = () => {\r\n        setQuantity((prev) => prev + 1);\r\n    };\r\n\r\n    const handleDecreaseQuantity = () => {\r\n        if (quantity > 1) {\r\n            setQuantity((prev) => prev - 1);\r\n        }\r\n    };\r\n\r\n    const handleIpChange = (newIp: ProductIP) => {\r\n        setSelectedIp(newIp);\r\n    };\r\n\r\n    const handleAddToCart = () => {\r\n        setIsAddingToCart(true);\r\n        setTimeout(() => {\r\n            console.log(\"Added to cart:\", {\r\n                productName,\r\n                productCode,\r\n                quantity,\r\n                selectedIp,\r\n                selectedColorTemp,\r\n                price: currentPrice,\r\n            });\r\n            setIsAddingToCart(false);\r\n        }, 1000);\r\n    };\r\n\r\n    const handleOrderNow = () => {\r\n        setIsOrdering(true);\r\n        setTimeout(() => {\r\n            console.log(\"Ordered:\", {\r\n                productName,\r\n                productCode,\r\n                quantity,\r\n                selectedIp,\r\n                selectedColorTemp,\r\n                price: currentPrice,\r\n            });\r\n            setIsOrdering(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <div className=\"py-10 md:py-16 lg:py-20 w-full h-full\">\r\n            <Container>\r\n                <div className=\"flex flex-col sm:flex-row gap-4 sm:gap-6 lg:gap-8\">\r\n                    <div className=\"w-full md:w-1/2 lg:w-4/12 mx-auto md:mx-0\">\r\n                        <ProductImages productImages={images} />\r\n                    </div>\r\n                    <div className=\"w-full lg:w-7/12\">\r\n                        <ProductConfigurationPanel\r\n                            productName={productName}\r\n                            productCode={productCode}\r\n                            description={description}\r\n                            displayPrice={price}\r\n                            discountPercentage={discountPercentage}\r\n                            quantity={quantity}\r\n                            onIncreaseQuantity={handleIncreaseQuantity}\r\n                            onDecreaseQuantity={handleDecreaseQuantity}\r\n                            canDecreaseQuantity={quantity > 1}\r\n                            showIpSelector={true}\r\n                            selectedIp={selectedIp}\r\n                            onIpChange={handleIpChange}\r\n                            isIpSelectorDisabled={false}\r\n                            showColorTempSelector={true}\r\n                            selectedColorTemp={selectedColorTemp}\r\n                            onColorTempChange={(newTemp) => setSelectedColorTemp(newTemp)}\r\n                            isColorTempSelectorDisabled={false}\r\n                            showLampSelector={false}\r\n                            onAddToCart={handleAddToCart}\r\n                            isAddToCartLoading={isAddingToCart}\r\n                            onOrderNow={handleOrderNow}\r\n                            isOrderNowLoading={isOrdering}\r\n                            stockStatus={stockStatus}\r\n                            stockStatusText={stockStatusText}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}"
  },
  "products-carousel-1": {
    "components": {
      "@/registry/view/products-carousel-1/components/product-card": "\"use client\"\r\nimport React, { useState } from \"react\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport DiscountPrice from \"@/components/blocks/product-overview-1/discounted-price\";\r\nimport NormalPrice from \"@/components/blocks/product-overview-1/normal-price\";\r\nimport { Badge } from \"@/components/library/badge\";\r\nimport { Truck } from \"lucide-react\";\r\n\r\ninterface Product {\r\n    productId: string;\r\n    productName: string;\r\n    brand?: string;\r\n    price: number;\r\n    productImages: string[];\r\n    productDiscount: number;\r\n    detailsUrl?: string;\r\n    productDescription?: string;\r\n}\r\n\r\ninterface ProductCardProps {\r\n    product: Product;\r\n    showBadge?: boolean;\r\n    showShipping?: boolean;\r\n    onAddToCart?: (productId: string) => void;\r\n    className?: string;\r\n    cardWidth?: string;\r\n    isSignedIn?: boolean;\r\n    onAuthRequired?: () => void;\r\n}\r\n\r\nconst ProductCard: React.FC<ProductCardProps> = ({\r\n    product,\r\n    showBadge = true,\r\n    showShipping = true,\r\n    onAddToCart,\r\n    className = \"\",\r\n    cardWidth = \"max-w-[300px]\",\r\n    isSignedIn = true,\r\n    onAuthRequired,\r\n}) => {\r\n    const [currentIndex, setCurrentIndex] = useState<number>(0);\r\n    const [isClicked, setIsClicked] = useState(false);\r\n\r\n    const handleSlideChange = (index: number) => setCurrentIndex(index);\r\n    const handleDetailsClick = () => setIsClicked(true);\r\n\r\n    const handleAddToCart = () => {\r\n        if (!isSignedIn && onAuthRequired) {\r\n            onAuthRequired();\r\n            return;\r\n        }\r\n        onAddToCart?.(product.productId);\r\n    };\r\n\r\n    return (\r\n        <div className={cn(\"relative select-none\", cardWidth, className)}>\r\n            <div className=\"absolute top-2 left-2 z-10 px-2 py-1 flex items-center gap-2 text-xs text-white bg-[#676769] rounded-tr-md rounded-br-md\">\r\n                <Truck className=\"w-4 h-4\" />\r\n                <span>Fast Shipping</span>\r\n            </div>\r\n            <div className=\"absolute top-0 right-0 z-10\">\r\n                <Badge className=\"rounded-none text-sm bg-red-500 text-white\">\r\n                    {Math.round(product.productDiscount * 100)}% OFF\r\n                </Badge>\r\n            </div>\r\n            <div className=\"flex flex-col overflow-hidden\">\r\n                <div className=\"w-full h-52 relative overflow-hidden\">\r\n                    {product.productImages.length > 0 && (\r\n                        <Carousel\r\n                            showThumbs={false}\r\n                            showStatus={false}\r\n                            useKeyboardArrows\r\n                            infiniteLoop={false}\r\n                            autoPlay={false}\r\n                            selectedItem={currentIndex}\r\n                            onChange={handleSlideChange}\r\n                            renderArrowPrev={(onClick, hasPrev) =>\r\n                                hasPrev && (\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={onClick}\r\n                                        className=\"absolute left-2 top-1/2 -translate-y-1/2 z-10 p-1 bg-white/80 dark:bg-black/30 rounded-full\"\r\n                                    >\r\n                                        <svg\r\n                                            className=\"w-5 h-5 text-gray-800 dark:text-white\"\r\n                                            aria-hidden=\"true\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            fill=\"none\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                        >\r\n                                            <path stroke=\"currentColor\" d=\"m15 19-7-7 7-7\" />\r\n                                        </svg>\r\n                                    </button>\r\n                                )\r\n                            }\r\n                            renderArrowNext={(onClick, hasNext) =>\r\n                                hasNext && (\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={onClick}\r\n                                        className=\"absolute right-0 top-1/2 -translate-y-1/2 z-10 p-1 bg-white/80 dark:bg-black/30 rounded-full\"\r\n                                    >\r\n                                        <svg\r\n                                            className=\"w-5 h-5 text-gray-800 dark:text-white\"\r\n                                            aria-hidden=\"true\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            fill=\"none\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                        >\r\n                                            <path stroke=\"currentColor\" d=\"m9 5 7 7-7 7\" />\r\n                                        </svg>\r\n                                    </button>\r\n                                )\r\n                            }\r\n                        >\r\n                            {product.productImages.map((image, idx) => (\r\n                                <div key={idx} className=\"w-full h-full\">\r\n                                    <Image\r\n                                        src={image}\r\n                                        alt={product.productName}\r\n                                        width={500}\r\n                                        height={300}\r\n                                        quality={90}\r\n                                        className=\"w-full h-full object-cover\"\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </Carousel>\r\n                    )}\r\n                </div>\r\n                <div className=\"mt-1 space-y-2\">\r\n                    <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n                        {product.productName}\r\n                    </h2>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-300 line-clamp-2\">\r\n                        {product.productDescription}\r\n                    </p>\r\n                    <div>\r\n                        {product.productDiscount > 0 ? (\r\n                            <div className=\"flex items-center gap-2\">\r\n                                <span className=\"text-lg text-red-600 font-semibold\">\r\n                                    <DiscountPrice price={product.price} discount={product.productDiscount} />\r\n                                </span>\r\n                                <s className=\"text-gray-500 text-sm\">\r\n                                    <NormalPrice price={product.price} />\r\n                                </s>\r\n                            </div>\r\n                        ) : (\r\n                            <span className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n                                <NormalPrice price={product.price} />\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"flex gap-2 mt-4\">\r\n                        <Link\r\n                            href={product.detailsUrl || '#'}\r\n                            className={cn(\r\n                                \"flex-1 text-center px-4 py-2 text-sm font-medium border border-gray-800 rounded hover:bg-gray-800 hover:text-white dark:border-gray-200 dark:hover:bg-gray-200 dark:hover:text-gray-800 transition-colors\",\r\n                                isClicked\r\n                                    ? \"bg-gray-800 text-white dark:bg-gray-200 dark:text-gray-800\"\r\n                                    : ''\r\n                            )}\r\n                            onClick={handleDetailsClick}\r\n                        >\r\n                            More Details\r\n                        </Link>\r\n\r\n                        <button\r\n                            onClick={handleAddToCart}\r\n                            className=\"bg-black rounded py-1 px-2 flex items-center justify-center\"\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                viewBox=\"0 0 576 512\"\r\n                                width={20}\r\n                                height={20}\r\n                                fill=\"white\"\r\n                            >\r\n                                <path d=\"M0 24C0 10.7 10.7 0 24 0H69.5c22 0 41.5 12.8 50.6 32h411c26.3 0 45.5 25 38.6 50.4l-41 152.3c-8.5 31.4-37 53.3-69.5 53.3H170.7l5.4 28.5c2.2 11.3 12.1 19.5 23.6 19.5H488c13.3 0 24 10.7 24 24s-10.7 24-24 24H199.7c-34.6 0-64.3-24.6-70.7-58.5L77.4 54.5c-.7-3.8-4-6.5-7.9-6.5H24C10.7 48 0 37.3 0 24zM128 464a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm336-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCard;",
      "@/registry/view/products-carousel-1/components/product-carousel": "import { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from '@/components/library/carousel'\r\nimport ProductCard from './product-card'\r\nimport { products } from '../constant'\r\n\r\nconst ProductCarousel = () => {\r\n    return (\r\n        <Carousel className=\"w-full\">\r\n            <CarouselContent>\r\n                {products.map((product, index) => (\r\n                    <CarouselItem\r\n                        key={index}\r\n                        className=\"sm:basis-1/2 md:basis-1/3 lg:basis-1/4 xl:basis-1/5\"\r\n                    >\r\n                        <ProductCard\r\n                            product={product}\r\n                            showBadge={true}\r\n                            showShipping={true}\r\n                        />\r\n                    </CarouselItem>\r\n                ))}\r\n            </CarouselContent>\r\n            <CarouselPrevious className=\"ml-9 h-10 w-10 bg-slate-50 text-gray-950\" />\r\n            <CarouselNext className=\"mr-9 h-10 w-10 bg-slate-50 text-gray-950\" />\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel"
    },
    "constant": {
      "@/registry/view/products-carousel-1/constant/index": "export const products = [\r\n    {\r\n        productId: \"product-jy-535-5w\",\r\n        productName: \"Product-JY-535-5W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-535-5w/JY-535-5W (1).png\",\r\n            \"/blocks/product-carousel/jy-535-5w/JY-535-5W (2).png\",\r\n        ],\r\n        productDescription: \"Product-JY-535-5W is a high-quality indoor product with advanced features.\",\r\n        price: 500,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-535-5w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-539-7w\",\r\n        productName: \"Product-JY-539-7W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-539-7w/JY-539-7W (1).png\",\r\n            \"/blocks/product-carousel/jy-539-7w/JY-539-7W (2).png\",\r\n        ],\r\n        productDescription: \"High-performance lighting solution for modern interiors.\",\r\n        price: 750,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-539-7w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-540-7w\",\r\n        productName: \"Product-JY-540-7W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-540-7w/JY-540-7W (1).png\",\r\n            \"/blocks/product-carousel/jy-540-7w/JY-540-7W (2).png\",\r\n        ],\r\n        productDescription: \"Energy efficient lighting with sleek design.\",\r\n        price: 750,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-540-7w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-595-44w\",\r\n        productName: \"Product-JY-595-44W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-595-44w/JY-595-44W (1).png\",\r\n            \"/blocks/product-carousel/jy-595-44w/JY-595-44W (2).png\",\r\n        ],\r\n        productDescription: \"Product-JY-595-44W is a high-quality indoor product with advanced features.\",\r\n        price: 900,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-595-44w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-595-48w\",\r\n        productName: \"Product-JY-595-48W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\"\r\n        ],\r\n        productDescription: \"Product-JY-595-48W is a high-quality indoor product with advanced features.\",\r\n        price: 1100,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-595-48w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-595-48w\",\r\n        productName: \"Product-JY-595-48W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\"\r\n        ],\r\n        productDescription: \"Product-JY-595-48W is a high-quality indoor product with advanced features.\",\r\n        price: 1100,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-595-48w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-595-48w\",\r\n        productName: \"Product-JY-595-48W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\"\r\n        ],\r\n        productDescription: \"Product-JY-595-48W is a high-quality indoor product with advanced features.\",\r\n        price: 1100,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-595-48w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-595-48w\",\r\n        productName: \"Product-JY-595-48W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\"\r\n        ],\r\n        productDescription: \"Product-JY-595-48W is a high-quality indoor product with advanced features.\",\r\n        price: 1100,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-595-48w\",\r\n    },\r\n]"
    },
    "lib": {
      "@/registry/view/products-carousel-1/lib/utils.ts": "// this for formatting the price in the product overview page for your country currency \r\nexport const formatPrice = (price: number) => {\r\n    const formatter = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"EGP\",\r\n        useGrouping: false,\r\n    });\r\n    return formatter.format(price);\r\n};\r\n"
    },
    "@/registry/view/products-carousel-1/page": "import Container from '@/components/Container'\r\nimport ProductCarousel from './components/product-carousel'\r\n\r\nconst page = () => {\r\n    return (\r\n        <div className=\"py-10 md:py-16 lg:py-20\">\r\n            <Container>\r\n                <ProductCarousel />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default page"
  },
  "products-list-1": {
    "components": {
      "@/registry/view/products-list-1/components/product-list": "import { products } from \"@/registry/view/products-list-1/constant\"\r\nimport { MoveLeft, MoveRight } from \"lucide-react\"\r\nimport Image from \"next/image\"\r\nimport Link from \"next/link\"\r\nimport { Sidebar } from \"./sidebar\"\r\nimport Container from \"@/components/Container\"\r\n\r\nexport default function ProductsList() {\r\n    return (\r\n        <Container>\r\n            <div className=\"flex items-center justify-between mb-8 max-w-xl  \">\r\n                <div className=\"space-y-2 \">\r\n                    <h1 className=\"text-3xl font-normal text-neutral-800\">Our Product</h1>\r\n                    <p className=\"text-lg font-light text-muted-foreground \">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Totam ut sequi vitae beatae? Commodi, omnis. Incidunt dolore.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex h-screen border border-border p-2 rounded-lg\">\r\n                <Sidebar />\r\n                <main className=\"flex-1  lg:p-8 p-4 overflow-y-auto hide-scrollbar\">\r\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-6\">\r\n                        {products.map((product) => (\r\n                            <Link\r\n                                href={`/products/${product.id}`}\r\n                                key={product.id}\r\n                                className=\"group rounded-md overflow-hidden transition-all duration-300 hover:opacity-90\">\r\n                                <div className=\"aspect-square relative\">\r\n                                    <Image\r\n                                        src={product.image}\r\n                                        alt={product.name}\r\n                                        fill\r\n                                        className=\"object-cover\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"flex justify-between items-center mt-3 mb-1 px-3\">\r\n                                    <p className=\"lg:text-lg md:text-base sm:text-sm text-neutral-700\">{product.name}</p>\r\n                                    <p className=\"lg:text-lg md:text-base sm:text-sm font-medium text-neutral-700\">\r\n                                        ${product.price}\r\n                                    </p>\r\n                                </div>\r\n                            </Link>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between gap-4 mt-16\">\r\n                        <button className=\"py-3 px-8  rounded-md hover:bg-gray-200 transition-colors\">\r\n                            <MoveLeft size={20} />\r\n                        </button>\r\n                        <div className=\"flex space-x-2\">\r\n                            <span className=\"w-8 h-2 bg-gray-950 rounded-full cursor-pointer\" />\r\n                            <span className=\"w-2 h-2 bg-gray-300 rounded-full cursor-pointer\" />\r\n                            <span className=\"w-2 h-2 bg-gray-300 rounded-full cursor-pointer\" />\r\n                            <span className=\"w-2 h-2 bg-gray-300 rounded-full cursor-pointer\" />\r\n                        </div>\r\n                        <button className=\"py-3 px-8 rounded-md hover:bg-gray-200 transition-colors\">\r\n                            <MoveRight size={20} />\r\n                        </button>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </Container>\r\n    )\r\n}",
      "@/registry/view/products-list-1/components/sidebar": "\"use client\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Armchair, Bath, Bed, Crown, Facebook, Instagram, Layers, Mail, PanelLeftOpen, PanelRightOpen, Sparkles, Star, SwatchBook, TreePine, UtensilsCrossed } from 'lucide-react'\r\nimport Link from \"next/link\"\r\nimport type React from \"react\"\r\nimport { useState, useRef, useCallback } from \"react\"\r\n\r\ninterface SidebarItemProps {\r\n    icon: React.ReactNode\r\n    label: string\r\n    isActive?: boolean\r\n    href: string\r\n}\r\n\r\nconst SidebarItem = ({\r\n    icon,\r\n    label,\r\n    isActive = false,\r\n    href,\r\n}: SidebarItemProps) => {\r\n    return (\r\n        <Link\r\n            href={href}\r\n            className={cn(\r\n                \"flex items-center gap-3 px-4 py-2 rounded-md transition-colors\",\r\n                isActive ? \"bg-primary text-primary-foreground\" : \"hover:bg-accent text-muted-foreground\"\r\n            )}\r\n        >\r\n            <span className=\"w-5 h-5 text-current\">{icon}</span>\r\n            <span className=\"text-sm font-medium\">{label}</span>\r\n        </Link>\r\n    )\r\n}\r\n\r\ninterface SidebarSectionProps {\r\n    title: string\r\n    children: React.ReactNode\r\n}\r\n\r\nconst SidebarSection = ({ title, children }: SidebarSectionProps) => {\r\n    return (\r\n        <div className=\"mt-6 px-4\">\r\n            <h3 className=\"text-xs font-semibold tracking-wider text-gray-300 dark:text-gray-500 mb-2\">\r\n                {title}\r\n            </h3>\r\n            <div className=\"space-y-1\">{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Sidebar() {\r\n    const [isOpenSidebar, setIsOpenSidebar] = useState(true);\r\n    const toggleSidebar = useCallback(() => {\r\n        setIsOpenSidebar((prevState) => !prevState)\r\n    }, [])\r\n\r\n    const sidebarVariants = {\r\n        open: {\r\n            width: 280,\r\n            opacity: 1,\r\n            transition: { duration: 0.3 },\r\n        },\r\n        closed: {\r\n            width: 0,\r\n            opacity: 0,\r\n            transition: { duration: 0.3 },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isOpenSidebar && (\r\n                <button\r\n                    onClick={toggleSidebar}\r\n                    aria-label=\"Open sidebar\"\r\n                    className=\"relative top-2 left-0 z-20 p-2 border-r border-border bg-background hover:bg-accent transition-colors flex items-center justify-center\"\r\n                >\r\n                    <PanelLeftOpen className=\"w-5 h-5 text-foreground\" />\r\n                </button>\r\n            )}\r\n            <motion.aside\r\n                initial={isOpenSidebar ? \"open\" : \"closed\"}\r\n                animate={isOpenSidebar ? \"open\" : \"closed\"}\r\n                variants={sidebarVariants}\r\n                className={cn(\"w-64 h-full border-r border-border sticky top-0 flex flex-col\", isOpenSidebar ? \"open\" : \"closed\")}>\r\n                <div className=\"px-6 py-8 flex justify-between items-center border-b border-border\">\r\n                    <h1 className=\"text-xl font-semibold uppercase\">UniqueBrand</h1>\r\n                    {isOpenSidebar && (\r\n                        <button\r\n                            onClick={toggleSidebar}\r\n                            aria-label=\"Close sidebar\"\r\n                            className=\"p-1.5 rounded-md hover:bg-accent transition-colors\"\r\n                        >\r\n                            <PanelRightOpen className=\"w-5 h-5 text-foreground\" />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <nav className=\"flex-1 overflow-y-auto hide-scrollbar\">\r\n                    <SidebarSection title=\"\">\r\n                        <SidebarItem\r\n                            icon={<Star size={18} />}\r\n                            label=\"Popular\"\r\n                            isActive\r\n                            href=\"#\"\r\n                        />\r\n                        <SidebarItem\r\n                            icon={<Sparkles size={18} />}\r\n                            label=\"New Collection\"\r\n                            href=\"#\"\r\n                        />\r\n                        <SidebarItem\r\n                            icon={<Armchair size={18} />}\r\n                            label=\"Custom Furniture\"\r\n                            href=\"#\"\r\n                        />\r\n                    </SidebarSection>\r\n                    <SidebarSection title=\"MATERIAL\">\r\n                        <SidebarItem icon={<TreePine size={18} />} label=\"Wood\" href=\"#\" />\r\n                        <SidebarItem icon={<Layers size={18} />} label=\"Glass\" href=\"#\" />\r\n                        <SidebarItem icon={<SwatchBook size={18} />} label=\"Fabric\" href=\"#\" />\r\n                    </SidebarSection>\r\n                    <SidebarSection title=\"PACKAGE\">\r\n                        <SidebarItem icon={<Crown size={18} />} label=\"Brand\" href=\"#\" />\r\n                        <SidebarItem icon={<Bed size={18} />} label=\"Bedroom\" href=\"#\" />\r\n                        <SidebarItem icon={<Bath size={18} />} label=\"Bathroom\" href=\"#\" />\r\n                        <SidebarItem\r\n                            icon={<UtensilsCrossed size={18} />}\r\n                            label=\"Kitchen Sets\"\r\n                            href=\"#\"\r\n                        />\r\n                    </SidebarSection>\r\n                    <SidebarSection title=\"CONTACT\">\r\n                        <SidebarItem\r\n                            icon={<Facebook size={18} />}\r\n                            label=\"Facebook\"\r\n                            href=\"#\"\r\n                        />\r\n                        <SidebarItem\r\n                            icon={<Instagram size={18} />}\r\n                            label=\"Instagram\"\r\n                            href=\"#\"\r\n                        />\r\n                        <SidebarItem icon={<Mail size={18} />} label=\"Email\" href=\"#\" />\r\n                    </SidebarSection>\r\n                </nav>\r\n            </motion.aside>\r\n        </>\r\n    )\r\n}\r\n"
    },
    "constant": {
      "@/registry/view/products-list-1/constant/index": "interface Product {\r\n    id: string\r\n    name: string\r\n    price: number\r\n    image: string\r\n}\r\n\r\n\r\nexport const products: Product[] = [\r\n    {\r\n        id: \"1\",\r\n        name: \"Radiant Glow Lamp\",\r\n        price: 30,\r\n        image: \"/blocks/products-list-1/image-1.jpg\",\r\n    },\r\n    {\r\n        id: \"2\",\r\n        name: \"Breeze Recliner\",\r\n        price: 59,\r\n        image: \"/blocks/products-list-1/image-2.jpg\",\r\n    },\r\n    {\r\n        id: \"3\",\r\n        name: \"Vista Armchair\",\r\n        price: 40,\r\n        image: \"/blocks/products-list-1/image-3.jpg\",\r\n    },\r\n    {\r\n        id: \"4\",\r\n        name: \"Eden Comfort Seat\",\r\n        price: 60,\r\n        image: \"/blocks/products-list-1/image-4.jpg\",\r\n    },\r\n    {\r\n        id: \"5\",\r\n        name: \"Crestwood Chair\",\r\n        price: 59,\r\n        image: \"/blocks/products-list-1/image-5.jpg\",\r\n    },\r\n    {\r\n        id: \"6\",\r\n        name: \"Dining Chair With Arms\",\r\n        price: 45,\r\n        image: \"/blocks/products-list-1/image-6.jpg\",\r\n    },\r\n    {\r\n        id: \"7\",\r\n        name: \"Floor Lamp\",\r\n        price: 50,\r\n        image: \"/blocks/products-list-1/image-7.jpg\",\r\n    },\r\n    {\r\n        id: \"8\",\r\n        name: \"Luxe Lounger\",\r\n        price: 48,\r\n        image: \"/blocks/products-list-1/image-8.jpg\",\r\n    },\r\n    {\r\n        id: \"9\",\r\n        name: \"Outdoor Armchair\",\r\n        price: 47,\r\n        image: \"/blocks/products-list-1/image-9.jpg\",\r\n    },\r\n]"
    },
    "lib": {},
    "@/registry/view/products-list-1/page": "import Container from '@/components/Container'\r\nimport ProductsList from './components/product-list'\r\nconst page = () => {\r\n    return (\r\n        <div className=\"py-10 md:py-16 lg:py-20\">\r\n            <Container>\r\n                <ProductsList />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default page"
  },
  "service-1": {
    "components": {
      "@/registry/view/service-1/components/service": "\"use client\"\n\nimport { useEffect, useRef, useState } from \"react\"\nimport Link from \"next/link\"\nimport gsap from \"gsap\"\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\"\nimport { MoveRight } from \"lucide-react\"\n\nimport Container from \"@/components/Container\"\n\nimport { services } from \"../constant\"\n\ngsap.registerPlugin(ScrollTrigger)\nexport default function Services() {\n  const [activeService, setActiveService] = useState<number>(2)\n  const sectionRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    const ctx = gsap.context(() => {\n      gsap.fromTo(\n        \".service-card\",\n        { y: 50, opacity: 0 },\n        {\n          y: 0,\n          opacity: 1,\n          duration: 0.8,\n          stagger: 0.3,\n          ease: \"power4.out\",\n          scrollTrigger: {\n            trigger: sectionRef.current,\n            start: \"top 80%\",\n            end: \"top 30%\",\n            toggleActions: \"play none none none\",\n          },\n        }\n      )\n    }, sectionRef)\n    return () => ctx.revert()\n  }, [])\n\n  return (\n    <section\n      className=\"bg-background text-foreground py-20 relative overflow-hidden\"\n      ref={sectionRef}\n    >\n      <Container>\n        <span className=\"text-sm uppercase tracking-wider text-muted-foreground\">\n          OUR SERVICES\n        </span>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mt-6\">\n          <div>\n            <h2 className=\"text-4xl md:text-5xl lg:text-6xl font-bold leading-tight\">\n              What <span className=\"text-primary\">Services</span>\n              <br />\n              We&apos;re Offering\n            </h2>\n          </div>\n          <div className=\"hidden lg:block relative\">\n            <p className=\"text-muted-foreground mt-6 max-w-xl leading-6\">\n              We empower businesses to thrive online. Our services enhance\n              online visibility, expand market reach, and boost revenue through\n              effective digital strategies.\n            </p>\n          </div>\n        </div>\n        <div className=\"mt-16 space-y-4 md:space-y-6\">\n          {services.map((service, index) => (\n            <div\n              key={service.title}\n              className={`service-card border-b border-border pb-4 md:pb-6`}\n              onMouseEnter={() => setActiveService(index)}\n            >\n              <div className=\"group flex items-center justify-between cursor-pointer\">\n                <Link href={service.link} className=\"space-y-2 flex-1\">\n                  <h3\n                    className={`text-xl md:text-2xl lg:text-3xl font-medium transition-colors duration-300 ${\n                      activeService === index\n                        ? \"text-foreground\"\n                        : \"text-muted-foreground group-hover:text-foreground\"\n                    }`}\n                  >\n                    {service.title}\n                  </h3>\n                  <p\n                    className={`text-base md:text-lg leading-5 font-normal lg:leading-[1.4] transition-all duration-500 md:max-w-xl max-w-xs overflow-hidden ${\n                      activeService === index\n                        ? \"text-muted-foreground h-auto opacity-100\"\n                        : \"h-0 opacity-0\"\n                    }`}\n                  >\n                    {service.description}\n                  </p>\n                </Link>\n                <MoveRight\n                  className={`w-6 h-6 transition-transform duration-500 ${\n                    activeService === index\n                      ? \"opacity-100 translate-x-0\"\n                      : \"opacity-0 -translate-x-6\"\n                  }`}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </Container>\n    </section>\n  )\n}\n"
    },
    "constant": {
      "@/registry/view/service-1/constant/index": "export const services: Service[] = [\n  {\n    id: \"uiux-design\",\n    link: \"/services/uiux-design\",\n    title: \"UI&UX Design\",\n    subtitle: \"Creating seamless user experiences\",\n    description:\n      \"We specialize in crafting intuitive and visually appealing digital experiences that align with user needs and business goals. Our design process ensures your product stands out while delivering exceptional usability.\",\n    showTags: true,\n    iconColor: \"text-teal-500\",\n  },\n  {\n    id: \"web-development\",\n    link: \"/services/web-development\",\n    title: \"Web Development\",\n    subtitle: \"Building modern, high-performing websites\",\n    description:\n      \"Our team develops high-performance and scalable websites and web applications tailored to meet your business requirements, utilizing the latest technologies and best practices.\",\n    showTags: true,\n    iconColor: \"text-blue-500\",\n  },\n  {\n    id: \"hosting-and-domain\",\n    link: \"/services/hosting-and-domain\",\n    title: \"Hosting & Domain\",\n    subtitle: \"Reliable hosting and domain services\",\n    description:\n      \"Our hosting and domain registration services guarantee reliability, scalability, and security, providing the foundation your online presence needs to thrive.\",\n    showTags: false,\n    iconColor: \"text-yellow-500\",\n  },\n  {\n    id: \"mvp-development\",\n    link: \"/services/mvp\",\n    title: \"MVP Development\",\n    subtitle: \"Bring your ideas to life quickly\",\n    description:\n      \"Our MVP development service enables you to rapidly test market assumptions and gather user feedback with functional, prototype-level solutions designed to scale.\",\n    showTags: true,\n    iconColor: \"text-green-500\",\n  },\n]\n"
    },
    "lib": {},
    "@/registry/view/service-1/page": "import Services from \"./components/service\"\n\nconst page = () => {\n  return <Services />\n}\n\nexport default page\n"
  },
  "signup-1": {
    "components": {
      "@/registry/view/signup-1/components/signup-form": "\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport type React from \"react\"\r\nimport { Button } from \"@/components/library/button\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/library/card\"\r\nimport { Input } from \"@/components/library/input\"\r\nimport { Label } from \"@/components/library/label\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Progress } from \"@/components/library/progress\"\r\nimport Link from \"next/link\"\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { Eye, EyeOff } from \"lucide-react\"\r\nimport Container from \"@/components/Container\"\r\n\r\nexport function SignUpForm({ className, ...props }: React.ComponentPropsWithoutRef<\"div\">) {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n    const [passwordStrength, setPasswordStrength] = useState({\r\n        score: 0,\r\n        message: \"Enter a password\",\r\n        color: \"bg-gray-200\",\r\n    })\r\n\r\n    const checkPasswordStrength = (password: string) => {\r\n        // Initialize score\r\n        let score = 0\r\n        let message = \"\"\r\n        let color = \"bg-gray-200\"\r\n\r\n        // Check if password is empty\r\n        if (password.length === 0) {\r\n            return { score: 0, message: \"Enter a password\", color: \"bg-gray-200\" }\r\n        }\r\n\r\n        // Check length\r\n        if (password.length < 8) {\r\n            score += 1\r\n            message = \"Weak - Too short\"\r\n            color = \"bg-red-500\"\r\n        } else {\r\n            score += 2\r\n        }\r\n\r\n        // Check for numbers\r\n        if (/\\d/.test(password)) {\r\n            score += 1\r\n        }\r\n\r\n        // Check for lowercase letters\r\n        if (/[a-z]/.test(password)) {\r\n            score += 1\r\n        }\r\n\r\n        // Check for uppercase letters\r\n        if (/[A-Z]/.test(password)) {\r\n            score += 1\r\n        }\r\n\r\n        // Check for special characters\r\n        if (/[^A-Za-z0-9]/.test(password)) {\r\n            score += 1\r\n        }\r\n\r\n        // Determine strength message and color based on score\r\n        if (score < 3) {\r\n            message = \"Weak\"\r\n            color = \"bg-red-500\"\r\n        } else if (score < 5) {\r\n            message = \"Medium\"\r\n            color = \"bg-yellow-500\"\r\n        } else {\r\n            message = \"Strong\"\r\n            color = \"bg-green-500\"\r\n        }\r\n\r\n        // Normalize score to percentage for progress bar (max score is 6)\r\n        const normalizedScore = Math.min(Math.floor((score / 6) * 100), 100)\r\n\r\n        return { score: normalizedScore, message, color }\r\n    }\r\n\r\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newPassword = e.target.value\r\n        setPassword(newPassword)\r\n        setPasswordStrength(checkPasswordStrength(newPassword))\r\n    }\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword)\r\n    }\r\n\r\n    const toggleConfirmPasswordVisibility = () => {\r\n        setShowConfirmPassword(!showConfirmPassword)\r\n    }\r\n\r\n    return (\r\n        <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n            <Container>\r\n                <Card>\r\n                    <CardHeader>\r\n                        <CardTitle className=\"text-2xl\">Sign Up</CardTitle>\r\n                        <CardDescription>Create an account to get started</CardDescription>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <form>\r\n                            <div className=\"flex flex-col gap-6\">\r\n                                <div className=\"grid gap-2\">\r\n                                    <Label htmlFor=\"name\">Full Name</Label>\r\n                                    <Input id=\"name\" type=\"text\" placeholder=\"John Doe\" required />\r\n                                </div>\r\n                                <div className=\"grid gap-2\">\r\n                                    <Label htmlFor=\"email\">Email</Label>\r\n                                    <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\r\n                                </div>\r\n                                <div className=\"grid gap-2\">\r\n                                    <Label htmlFor=\"password\">Password</Label>\r\n                                    <div className=\"relative\">\r\n                                        <Input\r\n                                            id=\"password\"\r\n                                            type={showPassword ? \"text\" : \"password\"}\r\n                                            value={password}\r\n                                            onChange={handlePasswordChange}\r\n                                            required\r\n                                        />\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            variant=\"ghost\"\r\n                                            size=\"icon\"\r\n                                            className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                            onClick={togglePasswordVisibility}\r\n                                            aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                                        >\r\n                                            {showPassword ? (\r\n                                                <EyeOff className=\"h-4 w-4 text-gray-500\" />\r\n                                            ) : (\r\n                                                <Eye className=\"h-4 w-4 text-gray-500\" />\r\n                                            )}\r\n                                            <span className=\"sr-only\">{showPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className=\"mt-2\">\r\n                                        <div className=\"flex items-center justify-between mb-1\">\r\n                                            <span className=\"text-sm\">Password strength:</span>\r\n                                            <span\r\n                                                className={`text-sm font-medium ${passwordStrength.message === \"Weak\"\r\n                                                    ? \"text-red-500\"\r\n                                                    : passwordStrength.message === \"Medium\"\r\n                                                        ? \"text-yellow-500\"\r\n                                                        : passwordStrength.message === \"Strong\"\r\n                                                            ? \"text-green-500\"\r\n                                                            : \"text-gray-500\"\r\n                                                    }`}\r\n                                            >\r\n                                                {passwordStrength.message}\r\n                                            </span>\r\n                                        </div>\r\n                                        <Progress\r\n                                            value={passwordStrength.score}\r\n                                            className=\"h-2\"\r\n                                            indicatorClassName={passwordStrength.color}\r\n                                        />\r\n                                        <p className=\"mt-1 text-xs text-gray-500\">\r\n                                            Use 8+ characters with a mix of letters, numbers & symbols\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"grid gap-2\">\r\n                                    <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\r\n                                    <div className=\"relative\">\r\n                                        <Input id=\"confirmPassword\" type={showConfirmPassword ? \"text\" : \"password\"} required />\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            variant=\"ghost\"\r\n                                            size=\"icon\"\r\n                                            className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                            onClick={toggleConfirmPasswordVisibility}\r\n                                            aria-label={showConfirmPassword ? \"Hide confirm password\" : \"Show confirm password\"}\r\n                                        >\r\n                                            {showConfirmPassword ? (\r\n                                                <EyeOff className=\"h-4 w-4 text-gray-500\" />\r\n                                            ) : (\r\n                                                <Eye className=\"h-4 w-4 text-gray-500\" />\r\n                                            )}\r\n                                            <span className=\"sr-only\">\r\n                                                {showConfirmPassword ? \"Hide confirm password\" : \"Show confirm password\"}\r\n                                            </span>\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                                <Button type=\"submit\" className=\"w-full\">\r\n                                    Sign Up\r\n                                </Button>\r\n                                <Button variant=\"outline\" className=\"w-full\">\r\n                                    <FcGoogle className=\"inline-block \" />Sign Up with Google\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"mt-4 text-center text-sm\">\r\n                                Already have an account?{\" \"}\r\n                                <Link href=\"/ui-blocks/login-1\" className=\"underline underline-offset-4\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </form>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "@/registry/view/signup-1/page": "import { SignUpForm } from \"./components/signup-form\";\r\n\r\nexport default function SignUpPage() {\r\n    return (\r\n        <div className=\"flex min-h-svh flex-col items-center justify-center py-10 md:py-16 lg:py-20\">\r\n                <SignUpForm className=\"w-full max-w-md\" />\r\n        </div>\r\n    )\r\n} \r\n"
  },
  "signup-2": {
    "components": {
      "@/registry/view/signup-2/components/signup-1": "\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { useState } from \"react\"\r\nimport { Button } from \"@/components/library/button\"\r\nimport { Card, CardContent } from \"@/components/library/card\"\r\nimport { Input } from \"@/components/library/input\"\r\nimport { Label } from \"@/components/library/label\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { ArrowLeft, Eye, EyeOff } from \"lucide-react\"\r\nimport Link from \"next/link\"\r\n\r\nexport function SignUpForm({ className, ...props }: React.ComponentProps<\"div\">) {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n\r\n    const togglePasswordVisibility = () => setShowPassword((prev) => !prev)\r\n    const toggleConfirmPasswordVisibility = () => setShowConfirmPassword((prev) => !prev)\r\n\r\n    return (\r\n        <div className={cn(\"flex flex-col gap-6 py-12\", className)} {...props}>\r\n            <Link href=\"/\" className=\"absolute top-4 left-4 text-foreground hover:text-primary transition-colors\">\r\n                <span className=\"flex items-center\">\r\n                    <ArrowLeft className=\"mr-2 w-5 h-5\" />\r\n                    Back to Home\r\n                </span>\r\n            </Link>\r\n            <Card className=\"overflow-hidden\">\r\n                <CardContent className=\"grid p-0 md:grid-cols-2\">\r\n                    <form className=\"p-6 md:p-8\">\r\n                        <div className=\"flex flex-col gap-6\">\r\n                            <div className=\"flex flex-col items-center text-center\">\r\n                                <h1 className=\"text-2xl font-bold\">Create an account</h1>\r\n                                <p className=\"text-balance text-muted-foreground\">Sign up for your Acme Inc account</p>\r\n                            </div>\r\n                            <div className=\"grid grid-cols-2 gap-4\">\r\n                                <div className=\"grid gap-2\">\r\n                                    <Label htmlFor=\"firstName\">First Name</Label>\r\n                                    <Input id=\"firstName\" type=\"text\" placeholder=\"John\" required />\r\n                                </div>\r\n                                <div className=\"grid gap-2\">\r\n                                    <Label htmlFor=\"lastName\">Last Name</Label>\r\n                                    <Input id=\"lastName\" type=\"text\" placeholder=\"Doe\" required />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grid gap-2\">\r\n                                <Label htmlFor=\"email\">Email</Label>\r\n                                <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\r\n                            </div>\r\n                            <div className=\"grid gap-2\">\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <div className=\"relative\">\r\n                                    <Input id=\"password\" type={showPassword ? \"text\" : \"password\"} required />\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        variant=\"ghost\"\r\n                                        size=\"sm\"\r\n                                        className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                        onClick={togglePasswordVisibility}\r\n                                        aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                                    >\r\n                                        {showPassword ? (\r\n                                            <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                                        ) : (\r\n                                            <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                                        )}\r\n                                        <span className=\"sr-only\">{showPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grid gap-2\">\r\n                                <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\r\n                                <div className=\"relative\">\r\n                                    <Input id=\"confirmPassword\" type={showConfirmPassword ? \"text\" : \"password\"} required />\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        variant=\"ghost\"\r\n                                        size=\"sm\"\r\n                                        className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                        onClick={toggleConfirmPasswordVisibility}\r\n                                        aria-label={showConfirmPassword ? \"Hide password\" : \"Show password\"}\r\n                                    >\r\n                                        {showConfirmPassword ? (\r\n                                            <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                                        ) : (\r\n                                            <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                                        )}\r\n                                        <span className=\"sr-only\">{showConfirmPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <Button type=\"submit\" className=\"w-full\">\r\n                                Sign Up\r\n                            </Button>\r\n                            <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\r\n                                <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">Or continue with</span>\r\n                            </div>\r\n                            <div className=\"grid grid-cols-3 gap-4\">\r\n                                <Button variant=\"outline\" className=\"w-full\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                                        <path\r\n                                            d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\r\n                                            fill=\"currentColor\"\r\n                                        />\r\n                                    </svg>\r\n                                    <span className=\"sr-only\">Sign up with Apple</span>\r\n                                </Button>\r\n                                <Button variant=\"outline\" className=\"w-full\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                                        <path\r\n                                            d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\r\n                                            fill=\"currentColor\"\r\n                                        />\r\n                                    </svg>\r\n                                    <span className=\"sr-only\">Sign up with Google</span>\r\n                                </Button>\r\n                                <Button variant=\"outline\" className=\"w-full\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={30} height={30}>\r\n                                        <path\r\n                                            d=\"M6.915 4.03c-1.968 0-3.683 1.28-4.871 3.113C.704 9.208 0 11.883 0 14.449c0 .706.07 1.369.21 1.973a6.624 6.624 0 0 0 .265.86 5.297 5.297 0 0 0 .371.761c.696 1.159 1.818 1.927 3.593 1.927 1.497 0 2.633-.671 3.965-2.444.76-1.012 1.144-1.626 2.663-4.32l.756-1.339.186-.325c.061.1.121.196.183.3l2.152 3.595c.724 1.21 1.665 2.556 2.47 3.314 1.046.987 1.992 1.22 3.06 1.22 1.075 0 1.876-.355 2.455-.843a3.743 3.743 0 0 0 .81-.973c.542-.939.861-2.127.861-3.745 0-2.72-.681-5.357-2.084-7.45-1.282-1.912-2.957-2.93-4.716-2.93-1.047 0-2.088.467-3.053 1.308-.652.57-1.257 1.29-1.82 2.05-.69-.875-1.335-1.547-1.958-2.056-1.182-.966-2.315-1.303-3.454-1.303zm10.16 2.053c1.147 0 2.188.758 2.992 1.999 1.132 1.748 1.647 4.195 1.647 6.4 0 1.548-.368 2.9-1.839 2.9-.58 0-1.027-.23-1.664-1.004-.496-.601-1.343-1.878-2.832-4.358l-.617-1.028a44.908 44.908 0 0 0-1.255-1.98c.07-.109.141-.224.211-.327 1.12-1.667 2.118-2.602 3.358-2.602zm-10.201.553c1.265 0 2.058.791 2.675 1.446.307.327.737.871 1.234 1.579l-1.02 1.566c-.757 1.163-1.882 3.017-2.837 4.338-1.191 1.649-1.81 1.817-2.486 1.817-.524 0-1.038-.237-1.383-.794-.263-.426-.464-1.13-.464-2.046 0-2.221.63-4.535 1.66-6.088.454-.687.964-1.226 1.533-1.533a2.264 2.264 0 0 1 1.088-.285z\"\r\n                                            fill=\"currentColor\"\r\n                                        />\r\n                                    </svg>\r\n                                    <span className=\"sr-only\">Sign up with Meta</span>\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"text-center text-sm\">\r\n                                Already have an account?{\" \"}\r\n                                <Link href=\"#\" className=\"underline underline-offset-4\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"flex-1 hidden md:block relative\">\r\n                        <img\r\n                            src=\"/placeholder.svg?height=800&width=600\"\r\n                            alt=\"Art Lighting Showcase\"\r\n                            className=\"absolute inset-0 h-full w-full object-cover\"\r\n                        />\r\n                        <div className=\"absolute inset-0 bg-background/60 backdrop-blur-sm flex flex-col justify-end p-8 text-foreground\">\r\n                            <h2 className=\"text-3xl font-bold mb-2\">Create Your Art Lighting Account</h2>\r\n                            <p className=\"text-sm\">Sign up today and start exploring our curated collection of lighting solutions</p>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <div className=\"text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:text-primary\">\r\n                By clicking sign up, you agree to our <Link href=\"#\">Terms of Service</Link> and{\" \"}\r\n                <Link href=\"#\">Privacy Policy</Link>.\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "@/registry/view/signup-2/page": "import Container from '@/components/Container'\r\nimport { SignUpForm } from './components/signup-1'\r\n\r\nconst page = () => {\r\n    return (\r\n        <div className=\"flex min-h-svh flex-col items-center justify-center p-6 md:p-10 bg-gradient-to-br from-primary/20 via-background to-secondary/20\">\r\n            <Container className=\"w-full max-w-sm md:max-w-3xl\">\r\n                <SignUpForm />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default page"
  },
  "signup-3": {
    "components": {
      "@/registry/view/signup-3/components/signup-form": "\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { Button } from \"@/components/library/button\"\r\nimport { Input } from \"@/components/library/input\"\r\nimport { Label } from \"@/components/library/label\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Eye, EyeOff } from \"lucide-react\"\r\nimport Link from \"next/link\"\r\nimport { useState } from \"react\"\r\n\r\nexport function SignupForm({ className, ...props }: React.ComponentPropsWithoutRef<\"form\">) {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n\r\n    const togglePasswordVisibility = () => setShowPassword((prev) => !prev)\r\n    const toggleConfirmPasswordVisibility = () => setShowConfirmPassword((prev) => !prev)\r\n\r\n    return (\r\n        <form className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n            <div className=\"flex flex-col items-center gap-2 text-center\">\r\n                <h1 className=\"text-2xl font-bold\">Create an account</h1>\r\n                <p className=\"text-balance text-sm text-muted-foreground\">Enter your details below to create your account</p>\r\n            </div>\r\n            <div className=\"grid gap-6\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div className=\"grid gap-2\">\r\n                        <Label htmlFor=\"firstName\">First name</Label>\r\n                        <Input id=\"firstName\" type=\"text\" required />\r\n                    </div>\r\n                    <div className=\"grid gap-2\">\r\n                        <Label htmlFor=\"lastName\">Last name</Label>\r\n                        <Input id=\"lastName\" type=\"text\" required />\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"email\">Email</Label>\r\n                    <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"password\">Password</Label>\r\n                    <div className=\"relative\">\r\n                        <Input id=\"password\" type={showPassword ? \"text\" : \"password\"} required />\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                            onClick={togglePasswordVisibility}\r\n                            aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                        >\r\n                            {showPassword ? (\r\n                                <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                            ) : (\r\n                                <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                            )}\r\n                            <span className=\"sr-only\">{showPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"confirmPassword\">Confirm password</Label>\r\n                    <div className=\"relative\">\r\n                        <Input id=\"confirmPassword\" type={showConfirmPassword ? \"text\" : \"password\"} required />\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                            onClick={toggleConfirmPasswordVisibility}\r\n                            aria-label={showConfirmPassword ? \"Hide password\" : \"Show password\"}\r\n                        >\r\n                            {showConfirmPassword ? (\r\n                                <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                            ) : (\r\n                                <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                            )}\r\n                            <span className=\"sr-only\">{showConfirmPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Button type=\"submit\" className=\"w-full\">\r\n                    Sign up\r\n                </Button>\r\n                <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\r\n                    <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">Or continue with</span>\r\n                </div>\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                        <path\r\n                            d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\r\n                            fill=\"currentColor\"\r\n                        />\r\n                    </svg>\r\n                    Sign up with GitHub\r\n                </Button>\r\n            </div>\r\n            <div className=\"text-center text-sm\">\r\n                Already have an account?{\" \"}\r\n                <Link href=\"/login\" className=\"underline underline-offset-4\">\r\n                    Login\r\n                </Link>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "@/registry/view/signup-3/page": "import { GalleryVerticalEnd } from \"lucide-react\"\r\nimport { SignupForm } from \"./components/signup-form\"\r\nimport Link from \"next/link\"\r\n\r\nexport default function SignupPage() {\r\n    return (\r\n        <div className=\"grid min-h-svh lg:grid-cols-2\">\r\n            <div className=\"flex flex-col gap-4 p-6 md:p-10\">\r\n                <div className=\"flex justify-center gap-2 md:justify-start\">\r\n                    <Link href=\"#\" className=\"flex items-center gap-2 font-medium\">\r\n                        <div className=\"flex h-6 w-6 items-center justify-center rounded-md bg-primary text-primary-foreground\">\r\n                            <GalleryVerticalEnd className=\"size-4\" />\r\n                        </div>\r\n                        UniqueBrand.\r\n                    </Link>\r\n                </div>\r\n                <div className=\"flex flex-1 items-center justify-center\">\r\n                    <div className=\"w-full max-w-xs\">\r\n                        <SignupForm />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"relative hidden bg-muted lg:block\">\r\n                <img\r\n                    src=\"/placeholder.svg\"\r\n                    alt=\"Image\"\r\n                    className=\"absolute inset-0 h-full w-full object-cover dark:brightness-[0.2] dark:grayscale\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "signup-4": {
    "components": {},
    "constant": {},
    "lib": {}
  },
  "timeline-1": {
    "components": {
      "@/registry/view/timeline-1/components/timeline-container": "import { TimeLineData } from \"@/registry/view/timeline-1/constant\";\r\nimport Timeline from \"./timeline\";\r\n\r\nconst TimelineContainer = () => {\r\n    return <Timeline data={TimeLineData} />;\r\n};\r\n\r\nexport default TimelineContainer;\r\n",
      "@/registry/view/timeline-1/components/timeline": "\"use client\";\r\nimport Container from \"@/components/Container\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { motion, useScroll, useTransform, Variants } from \"framer-motion\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nconst cardVariants: Variants = {\r\n    offscreen: {\r\n        y: 75,\r\n        opacity: 0,\r\n    },\r\n    onscreen: {\r\n        y: 0,\r\n        opacity: 1,\r\n        transition: {\r\n            duration: 0.4,\r\n        },\r\n    },\r\n};\r\n\r\nconst pointVariants: Variants = {\r\n    offscreen: {\r\n        scale: 0,\r\n        opacity: 0,\r\n    },\r\n    onscreen: {\r\n        scale: 1.1,\r\n        opacity: 1,\r\n        transition: {\r\n            duration: 0.3,\r\n        },\r\n    },\r\n};\r\n\r\nconst Timeline = ({ data }: { data: TimeLineProps[] }) => {\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [height, setHeight] = useState(0);\r\n    useEffect(() => {\r\n        const updateHeight = () => {\r\n            if (ref.current) {\r\n                const rect = ref.current.getBoundingClientRect();\r\n                setHeight(rect.height);\r\n            }\r\n        };\r\n        updateHeight();\r\n        window.addEventListener(\"resize\", updateHeight);\r\n        return () => window.removeEventListener(\"resize\", updateHeight);\r\n    }, []);\r\n\r\n    const { scrollYProgress } = useScroll({\r\n        target: containerRef,\r\n        offset: [\"start 0%\", \"end 50%\"],\r\n    });\r\n    const heightTransform = useTransform(scrollYProgress, [0, 1], [0, height]);\r\n    const opacityTransform = useTransform(scrollYProgress, [0, 0.1], [0, 1]);\r\n\r\n    return (\r\n        <div className=\"w-full my-24\" ref={containerRef}>\r\n            <Container>\r\n                <div className=\"mb-10 lg:mb-14\">\r\n                    <h2 className=\"text-3xl md:text-4xl mb-4 text-center font-bold\">\r\n                        How it works?\r\n                    </h2>\r\n                    <p className=\"text-muted-foreground text-center text-base md:text-lg\">\r\n                        We work in a structured way. Here is how you will be onboard:\r\n                    </p>\r\n                </div>\r\n                <div ref={ref} className=\"relative\">\r\n                    <div className=\"absolute my-4 left-4 md:left-1/2 top-0 h-full w-[3px] bg-neutral-200 md:-translate-x-1/2\">\r\n                        <motion.div\r\n                            style={{\r\n                                height: heightTransform,\r\n                                opacity: opacityTransform,\r\n                            }}\r\n                            className=\"absolute inset-x-0 top-0 w-full bg-primary rounded-full\"\r\n                        />\r\n                    </div>\r\n                    {data.map((item, index) => {\r\n                        const isEven = index % 2 !== 0;\r\n                        return (\r\n                            <motion.div\r\n                                key={index}\r\n                                initial=\"offscreen\"\r\n                                whileInView=\"onscreen\"\r\n                                viewport={{ once: true, amount: 0.6 }}\r\n                                className={cn(\r\n                                    \"flex flex-col md:flex-row items-start mb-16 md:mb-24\",\r\n                                    isEven ? \"md:flex-row-reverse\" : \"\",\r\n                                )}\r\n                            >\r\n                                <motion.div\r\n                                    variants={pointVariants}\r\n                                    viewport={{ once: true }}\r\n                                    className=\"absolute my-4 left-1.5 ml-[3px] lg:-ml-[8.5px] md:left-1/2 w-4 h-4 bg-primary rounded-full md:-translate-x-1/2\"\r\n                                />\r\n                                <motion.div\r\n                                    variants={cardVariants}\r\n                                    className={cn(\r\n                                        \"w-full md:w-5/12 pl-12 md:pl-0 md:h-[70vh] h-[50vh]\",\r\n                                        isEven ? \"md:pl-8\" : \"md:pr-8\",\r\n                                    )}\r\n                                >\r\n                                    <h3 className=\"text-sm font-semibold text-primary\">\r\n                                        {item.title}\r\n                                    </h3>\r\n                                    <div>{item.content}</div>\r\n                                </motion.div>\r\n                            </motion.div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\nexport default Timeline;\r\n"
    },
    "constant": {
      "@/registry/view/timeline-1/constant/index": "// Timeline block's data\nexport const TimeLineData: TimeLineProps[] = [\n  {\n    title: \"STEP 1: Discovery & Consultation\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Deep Dive & Alignment\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            We initiate with a thorough consultation to understand your unique\n            business needs, project goals, and desired outcomes for your\n            web/mobile app, MVP, or ERP system.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"STEP 2: Planning & Strategy\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Blueprint for Success\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            Our expert team meticulously plans the project roadmap, defining\n            scope, timelines, budget, and key deliverables for your web/mobile\n            app, MVP, or ERP system development.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"STEP 3: Design & Development\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Crafting Your Solution\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            Our skilled developers and designers bring your vision to life. We\n            focus on user-centered design, robust development, and seamless\n            integration for your web/mobile app, MVP, or ERP system.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"STEP 4: Testing & Quality Assurance\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Ensuring Excellence\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            Rigorous testing is conducted at every stage to identify and address\n            any issues, ensuring the highest quality and performance for your\n            web/mobile app, MVP, or ERP system.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"STEP 5: Launch & Beyond\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Go-Live & Continuous Support\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            We seamlessly launch your web/mobile app, MVP, or ERP system and\n            provide ongoing support, maintenance, and updates to ensure its\n            continued success and meet your evolving business needs.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n]\n"
    },
    "lib": {},
    "@/registry/view/timeline-1/page": "import TimelineContainer from \"./components/timeline-container\"\r\n\r\nconst page = () => {\r\n    return (\r\n        <TimelineContainer />\r\n    )\r\n}\r\n\r\nexport default page"
  }
}