{
  "about-1": {
    "components": {
      "@/registry/view/about-1/components/about": "\"use client\"\n\nimport { useEffect, useRef } from \"react\"\nimport { gsap } from \"gsap\"\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\"\nimport Container from \"@/components/Container\"\n\ngsap.registerPlugin(ScrollTrigger)\n\nconst About = () => {\n  const sectionRef = useRef(null)\n  useEffect(() => {\n    const elements = sectionRef.current.querySelectorAll(\".animate-element\")\n    const timelineElements =\n      sectionRef.current.querySelectorAll(\".animate-timeline\")\n    elements.forEach((element) => {\n      gsap.fromTo(\n        element,\n        {\n          opacity: 0,\n          y: 20,\n        },\n        {\n          opacity: 1,\n          y: 0,\n          duration: 1,\n          scrollTrigger: {\n            trigger: element,\n            start: \"top 80%\",\n            end: \"top 60%\",\n            scrub: true,\n            once: true,\n          },\n        }\n      )\n    })\n    timelineElements.forEach((element) => {\n      gsap.fromTo(\n        element,\n        {\n          opacity: 0,\n          x: -50,\n        },\n        {\n          opacity: 1,\n          x: 0,\n          duration: 1,\n          scrollTrigger: {\n            trigger: element,\n            start: \"top 90%\",\n            end: \"top 70%\",\n            scrub: true,\n            once: true,\n          },\n        }\n      )\n    })\n  }, [])\n\n  return (\n    <section ref={sectionRef}>\n      <Container>\n        <div className=\"grid gap-10 lg:grid-cols-[1fr_500px]\">\n          <div className=\"grid gap-4\">\n            <div className=\"space-y-4 animate-element\">\n              <h2 className=\"font-bold tracking-tighter text-3xl sm:text-4xl md:text-5xl\">\n                About Our Company\n              </h2>\n              <p className=\"max-w-[600px] text-muted-foreground md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed\">\n                At Art Lighting Inc. we are a team of passionate innovators\n                dedicated to pushing the boundaries of what&apos;s possible.\n                Since our founding in 2010, we&apos;ve been on a mission to\n                create cutting-edge products and services that transform the way\n                people live and work.\n              </p>\n            </div>\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <div className=\"bg-gray-100 dark:bg-neutral-900 rounded-lg p-6 animate-element\">\n                <h3 className=\"text-lg font-semibold text-primary\">\n                  Our Mission\n                </h3>\n                <p className=\"text-muted-foreground mt-2\">\n                  To revolutionize the tech industry and empower people with\n                  innovative solutions.\n                </p>\n              </div>\n              <div className=\"bg-gray-100 dark:bg-neutral-900 rounded-lg p-6 animate-element\">\n                <h3 className=\"text-lg font-semibold text-primary\">\n                  Our Values\n                </h3>\n                <p className=\"text-muted-foreground mt-2\">\n                  Integrity, Collaboration, Creativity, and Continuous\n                  Improvement.\n                </p>\n              </div>\n              <div className=\"bg-gray-100 dark:bg-neutral-900 rounded-lg p-6 animate-element\">\n                <h3 className=\"text-lg font-semibold text-primary\">Our Team</h3>\n                <p className=\"text-muted-foreground mt-2\">\n                  A diverse group of talented individuals who are passionate\n                  about making a difference.\n                </p>\n              </div>\n              <div className=\"bg-gray-100 dark:bg-neutral-900 rounded-lg p-6 animate-element\">\n                <h3 className=\"text-lg font-semibold text-primary\">\n                  Our Commitment\n                </h3>\n                <p className=\"text-muted-foreground mt-2\">\n                  To deliver exceptional products and services that exceed our\n                  customers&apos; expectations.\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"relative animate-element\">\n            <div className=\"after:absolute after:inset-y-0 after:w-px after:bg-gray-500/20 relative pl-6 after:left-0 grid gap-10\">\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2010 - Founding of Art Lighting Inc.\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2010 - Launch of First Product\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2012 - Expansion into New Markets\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2013 - Breakthrough Innovation\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2014 - Local Expansion and Acquisition\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2015 - Sustainability Initiatives\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2016 - Art Lighting Inc. Goes Public\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2016 - Art Lighting Working with Military{\" \"}\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2020 - Pandemic Response and Resilience\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2023 - Our Factory completed\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </section>\n  )\n}\n\nexport default About\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/about-1/page": "import About_1 from \"./components/about\"\n\nconst page = () => {\n  return (\n    <div className=\"py-10 md:py-16 lg:py-20\">\n      <About_1 />\n    </div>\n  )\n}\n\nexport default page\n"
  },
  "banner-1": {
    "components": {
      "@/registry/view/banner-1/components/banner": "\"use client\";\r\n\r\nimport { Button } from \"@/components/library/button\";\r\nimport { X } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { useState } from \"react\";\r\n\r\ninterface Banner1Props {\r\n    title: string;\r\n    description: string;\r\n    linkText: string;\r\n    linkUrl: string;\r\n    defaultVisible?: boolean;\r\n}\r\n\r\nexport const Banner = ({\r\n    title = \"Version 2.0 is now available!\",\r\n    description = \"Check out all the\",\r\n    linkText = \"new features\",\r\n    linkUrl = \"#\",\r\n    defaultVisible = true,\r\n}: Banner1Props) => {\r\n    const [isVisible, setIsVisible] = useState(defaultVisible);\r\n\r\n    const handleClose = () => {\r\n        setIsVisible(false);\r\n    };\r\n\r\n    if (!isVisible) return null;\r\n\r\n    return (\r\n        <section className=\"w-full border-b bg-white px-4 py-3 shadow-sm\">\r\n            <div className=\"flex items-center justify-between gap-2\">\r\n                <div className=\"flex-1 text-center\">\r\n                    <span className=\"text-sm\">\r\n                        <span className=\"font-medium\">{title}</span>{\" \"}\r\n                        <span className=\"text-muted-foreground\">\r\n                            {description}{\" \"}\r\n                            <Link\r\n                                href={linkUrl}\r\n                                className=\"underline underline-offset-4 hover:text-foreground\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                {linkText}\r\n                            </Link>\r\n                            .\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    className=\"-mr-2 h-8 w-8 flex-none\"\r\n                    onClick={handleClose}\r\n                >\r\n                    <X className=\"h-4 w-4\" />\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\n\r\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/banner-1/page": "import React from 'react'\r\nimport { Banner } from './components/banner'\r\n\r\nconst page = () => {\r\n    return (\r\n        <div>\r\n            <Banner />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default page"
  },
  "carousel-1": {
    "components": {
      "@/registry/view/carousel-1/components/Carousel-Container": "import Link from \"next/link\";\nimport { CarouselBigDataForBlock } from \"../constant/index\";\nimport { Card, Carousel } from \"./carousel\";\n\nconst CarouselContainer = () => {\n  const projectCards = CarouselBigDataForBlock.map((project, index) => (\n    <Link href={project.link} key={project.id} className=\"not-prose\">\n      <Card project={project} index={index} />\n    </Link>\n  ));\n  return <Carousel items={projectCards} />;\n};\n\nexport default CarouselContainer;\n",
      "@/registry/view/carousel-1/components/carousel": "\"use client\"\n\nimport {\n  createContext,\n  Fragment,\n  JSX,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\nimport Image, { ImageProps } from \"next/image\"\nimport { IconArrowNarrowLeft, IconArrowNarrowRight } from \"@tabler/icons-react\"\nimport { motion } from \"framer-motion\"\nimport { cn } from \"@/lib/utils\"\nimport { useOutsideClick } from \"@/hooks/out-side-click\"\n\ninterface CarouselProps {\n  items: JSX.Element[]\n  initialScroll?: number\n  cardGap?: number\n  scrollOffset?: number\n  initialActiveIndex?: number\n}\n\ninterface Project {\n  id: number\n  title: string\n  description: string\n  image: string\n  link: string\n}\n\nconst CarouselContext = createContext<{\n  onCardClick: (index: number) => void\n  currentIndex: number\n}>({\n  onCardClick: () => { },\n  currentIndex: 0,\n})\n\nexport const Carousel = ({\n  items,\n  initialScroll = 0,\n  cardGap = 16,\n  scrollOffset: initialScrollOffset,\n  initialActiveIndex = 1,\n}: CarouselProps) => {\n  const [scrollOffset, setScrollOffset] = useState(950)\n  useEffect(() => {\n    const WidthWindow = window.innerWidth\n    if (WidthWindow < 789) {\n      setScrollOffset(260)\n    } else {\n      setScrollOffset(950)\n    }\n  }, [])\n  const carouselRef = useRef<HTMLDivElement>(null)\n  const [canScrollLeft, setCanScrollLeft] = useState(false)\n  const [canScrollRight, setCanScrollRight] = useState(true)\n  const [currentIndex, setCurrentIndex] = useState(initialActiveIndex)\n  const checkScrollAbility = () => {\n    if (carouselRef.current) {\n      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current\n      setCanScrollLeft(scrollLeft > 0)\n      setCanScrollRight(scrollLeft < scrollWidth - clientWidth)\n    }\n  }\n  useEffect(() => {\n    if (carouselRef.current && initialActiveIndex !== undefined) {\n      const itemWidth = carouselRef.current.offsetWidth - 500\n      const scrollTo = itemWidth * initialActiveIndex\n      carouselRef.current.scrollTo({\n        left: scrollTo,\n        behavior: \"smooth\",\n      })\n    }\n  }, [initialActiveIndex])\n\n  const scroll = (direction: \"left\" | \"right\") => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollBy({\n        left: direction === \"left\" ? -scrollOffset : scrollOffset,\n        behavior: \"smooth\",\n      })\n    }\n  }\n  const handleCarouselClick = (index: number) => {\n    setCurrentIndex(index)\n  }\n\n  return (\n    <CarouselContext.Provider\n      value={{ onCardClick: handleCarouselClick, currentIndex }}\n    >\n      <div className=\"relative w-full py-0 !my-12 \">\n        <div className=\"flex justify-end space-x-2\">\n          <button\n            className=\"relative z-40 h-12 w-12 rounded-full bg-gray-100 flex items-center justify-center disabled:opacity-50\"\n            onClick={() => scroll(\"left\")}\n            disabled={!canScrollLeft}\n          >\n            <IconArrowNarrowLeft className=\"h-7 w-7 text-gray-500\" />\n          </button>\n          <button\n            className=\"relative z-40 h-12 w-12 rounded-full bg-gray-100 flex items-center justify-center disabled:opacity-50\"\n            onClick={() => scroll(\"right\")}\n            disabled={!canScrollRight}\n          >\n            <IconArrowNarrowRight className=\"h-7 w-7 text-gray-500\" />\n          </button>\n        </div>\n        <div\n          className=\"flex w-full overflow-x-scroll py-6 scroll-smooth [scrollbar-width:none]\"\n          ref={carouselRef}\n          onScroll={checkScrollAbility}\n        >\n          <div\n            className=\"flex flex-row justify-end gap-4\"\n            style={{ gap: `${cardGap}px` }}\n          >\n            {items.map((item, index) => (\n              <motion.div\n                key={index}\n                className=\"rounded-3xl\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{\n                  opacity: 1,\n                  y: 0,\n                  transition: { duration: 0.5, delay: 0.3 * index },\n                }}\n              >\n                {item}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </CarouselContext.Provider>\n  )\n}\n\nexport const Card = ({\n  project,\n  index,\n  layout = false,\n}: {\n  project: Project\n  index: number\n  layout?: boolean\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const cardRef = useRef<HTMLDivElement>(null)\n  useOutsideClick(containerRef, () => setIsOpen(false))\n  const handleCardClick = () => {\n    setIsOpen(true)\n    if (cardRef.current) {\n      cardRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\",\n        inline: \"center\",\n      })\n    }\n  }\n  return (\n    <Fragment>\n      <motion.div\n        ref={cardRef}\n        layoutId={layout ? `card-${project.id}` : undefined}\n        onClick={handleCardClick}\n        className=\"rounded-3xl cursor-pointer bg-gray-100 dark:bg-neutral-900 h-72 md:h-[33rem] w-[35vh] sm:w-[50vh] md:w-[90vh] lg:w-[110vh] xl:w-[150vh] overflow-hidden flex flex-col items-start justify-start relative z-10\"\n      >\n        <div className=\"absolute h-full top-0 inset-x-0 bg-gradient-to-b from-black/50 via-transparent to-transparent z-30 pointer-events-none\" />\n        <div className=\"relative z-40 p-8\">\n          <motion.p\n            layoutId={layout ? `title-${project.id}` : undefined}\n            className=\"text-white text-xl md:text-3xl font-semibold max-w-xs text-left font-sans mt-2\"\n          >\n            {project.title}\n          </motion.p>\n          <motion.p\n            layoutId={layout ? `description-${project.id}` : undefined}\n            className=\"text-white text-sm md:text-base font-medium font-sans text-left mt-2\"\n          >\n            {project.description}\n          </motion.p>\n        </div>\n        <BlurImage\n          src={project.image}\n          alt={project.title}\n          fill\n          className=\"object-cover absolute z-10 inset-0\"\n        />\n      </motion.div>\n    </Fragment>\n  )\n}\n\nexport const BlurImage = ({\n  height,\n  width,\n  src,\n  className,\n  alt,\n  ...rest\n}: ImageProps) => {\n  const [isLoading, setLoading] = useState(true)\n  return (\n    <Image\n      className={cn(\n        \"transition duration-300\",\n        isLoading ? \"blur-sm\" : \"blur-0\",\n        className\n      )}\n      onLoad={() => setLoading(false)}\n      src={src || \"/placeholder.svg\"}\n      width={width}\n      height={height}\n      loading=\"lazy\"\n      decoding=\"async\"\n      blurDataURL={typeof src === \"string\" ? src : undefined}\n      alt={alt ? alt : \"Background of a beautiful view\"}\n      {...rest}\n    />\n  )\n}\n"
    },
    "constant": {
      "@/registry/view/carousel-1/constant/index": "export const CarouselBigDataForBlock = [\n  {\n    id: 1,\n    title: \"E-commerce web app\",\n    description: \"An E-commerce web app for lighting store\",\n    image: \"/blocks/carousel-big/block-1.png\",\n    link: \"https://eg-artlighting.vercel.app\",\n  },\n  {\n    id: 2,\n    title: \"E-commerce web app\",\n    description: \"An E-commerce web app for lighting store\",\n    image: \"/blocks/carousel-big/block-2.png\",\n    link: \"https://casescobra-cuxh.vercel.app/\",\n  },\n  {\n    id: 3,\n    title: \"E-commerce web app\",\n    description: \"An E-commerce web app for lighting store\",\n    image: \"/blocks/carousel-big/block-3.png\",\n    link: \"https://modern-website-gold.vercel.app/\",\n  },\n]\n"
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/carousel-1/page": "import CarouselContainer from \"@/components/blocks/carousel-1/Carousel-Container\"\n\nconst page = () => {\n  return <CarouselContainer />\n}\n\nexport default page\n"
  },
  "carousel-2": {
    "components": {
      "@/registry/view/carousel-2/components/carousel-container": "import { CarouselsData } from \"../constant\"\nimport { Card, Carousel } from \"./carousel\"\n\nconst CarouselContainer = () => {\n  const cards = CarouselsData.map((card, index) => (\n    <Card key={card.src} card={card} index={index} />\n  ))\n  return <Carousel items={cards} />\n}\n\nexport default CarouselContainer\n",
      "@/registry/view/carousel-2/components/carousel": "\"use client\"\n\nimport {\n  createContext,\n  Fragment,\n  JSX,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\nimport Image, { ImageProps } from \"next/image\"\nimport { IconArrowNarrowLeft, IconArrowNarrowRight } from \"@tabler/icons-react\"\nimport { motion } from \"framer-motion\"\n\nimport { cn } from \"@/lib/utils\"\nimport { useOutsideClick } from \"@/hooks/out-side-click\"\n\ninterface CarouselProps {\n  items: JSX.Element[]\n  initialScroll?: number\n  cardGap?: number\n  scrollOffset?: number\n}\n\ninterface Card {\n  src: string\n  title: string\n  category: string\n}\nconst CarouselContext = createContext<{\n  onCardClick: (index: number) => void\n  currentIndex: number\n}>({\n  onCardClick: () => {},\n  currentIndex: 0,\n})\nexport const Carousel = ({\n  items,\n  initialScroll = 0,\n  cardGap = 16,\n  scrollOffset = 300,\n}: CarouselProps) => {\n  const carouselRef = useRef<HTMLDivElement>(null)\n  const [canScrollLeft, setCanScrollLeft] = useState(false)\n  const [canScrollRight, setCanScrollRight] = useState(true)\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const checkScrollAbility = () => {\n    if (carouselRef.current) {\n      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current\n      setCanScrollLeft(scrollLeft > 0)\n      setCanScrollRight(scrollLeft < scrollWidth - clientWidth)\n    }\n  }\n  useEffect(() => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollLeft = initialScroll\n      checkScrollAbility()\n    }\n  }, [initialScroll])\n  const scroll = (direction: \"left\" | \"right\") => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollBy({\n        left: direction === \"left\" ? -scrollOffset : scrollOffset,\n        behavior: \"smooth\",\n      })\n    }\n  }\n  const handleCarsouelClick = (index: number) => {\n    setCurrentIndex(index)\n  }\n  return (\n    <CarouselContext.Provider\n      value={{ onCardClick: handleCarsouelClick, currentIndex }}\n    >\n      <div className=\"relative w-full py-0 !my-12 \">\n        <div className=\"flex justify-end space-x-2\">\n          <button\n            className=\"relative z-40 h-12 w-12 rounded-full bg-gray-100 flex items-center justify-center disabled:opacity-50\"\n            onClick={() => scroll(\"left\")}\n            disabled={!canScrollLeft}\n          >\n            <IconArrowNarrowLeft className=\"h-7 w-7 text-gray-500\" />\n          </button>\n          <button\n            className=\"relative z-40 h-12 w-12 rounded-full bg-gray-100 flex items-center justify-center disabled:opacity-50\"\n            onClick={() => scroll(\"right\")}\n            disabled={!canScrollRight}\n          >\n            <IconArrowNarrowRight className=\"h-7 w-7 text-gray-500\" />\n          </button>\n        </div>\n        <div\n          className=\"flex w-full overflow-x-scroll py-6 scroll-smooth  [scrollbar-width:none]\"\n          ref={carouselRef}\n          onScroll={checkScrollAbility}\n        >\n          <div\n            className=\"flex flex-row justify-end\"\n            style={{ gap: `${cardGap}px` }}\n          >\n            {items.map((item, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{\n                  opacity: 1,\n                  y: 0,\n                  transition: { duration: 0.5, delay: 0.3 * index },\n                }}\n              >\n                {item}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </CarouselContext.Provider>\n  )\n}\nexport const Card = ({\n  card,\n  index,\n  layout = false,\n}: {\n  card: Card\n  index: number\n  layout?: boolean\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const cardRef = useRef<HTMLDivElement>(null)\n  useOutsideClick(containerRef, () => setIsOpen(false))\n  const handleCardClick = () => {\n    setIsOpen(true)\n    if (cardRef.current) {\n      cardRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\",\n        inline: \"center\",\n      })\n    }\n  }\n  return (\n    <Fragment>\n      <motion.div\n        ref={cardRef}\n        layoutId={layout ? `card-${card.title}` : undefined}\n        onClick={handleCardClick}\n        className=\"rounded-3xl cursor-pointer bg-gray-100 dark:bg-neutral-900 h-[18rem] md:h-[37rem] w-56 md:w-96 overflow-hidden flex flex-col items-start justify-start relative z-10zz\"\n      >\n        <div className=\"absolute h-full top-0 inset-x-0 bg-gradient-to-b from-black/50 via-transparent to-transparent z-30 pointer-events-none\" />\n        <div className=\"relative z-40 p-4 md:p-8\">\n          <motion.p\n            layoutId={layout ? `category-${card.category}` : undefined}\n            className=\"text-white/60 text-sm md:text-base font-medium font-sans text-left\"\n          >\n            {card.category}\n          </motion.p>\n          <motion.p\n            layoutId={layout ? `title-${card.title}` : undefined}\n            className=\"text-white text-lg md:text-xl lg:text-3xl font-semibold max-w-xs text-left\"\n          >\n            {card.title}\n          </motion.p>\n        </div>\n        <BlurImage\n          src={card.src}\n          alt={card.title}\n          fill\n          className=\"object-cover absolute z-10 inset-0\"\n        />\n      </motion.div>\n    </Fragment>\n  )\n}\nexport const BlurImage = ({\n  height,\n  width,\n  src,\n  className,\n  alt,\n  ...rest\n}: ImageProps) => {\n  const [isLoading, setLoading] = useState(true)\n  return (\n    <Image\n      className={cn(\n        \"transition duration-300\",\n        isLoading ? \"blur-sm\" : \"blur-0\",\n        className\n      )}\n      onLoad={() => setLoading(false)}\n      src={src}\n      width={width}\n      height={height}\n      loading=\"lazy\"\n      decoding=\"async\"\n      blurDataURL={typeof src === \"string\" ? src : undefined}\n      alt={alt ? alt : \"Background of a beautiful view\"}\n      {...rest}\n    />\n  )\n}\n"
    },
    "constant": {
      "@/registry/view/carousel-2/constant/index": "export const CarouselsData = [\n  {\n    category: \"Artificial Intelligence\",\n    title: \"You can do more with AI.\",\n    src: \"/blocks/carousel/design-process-2.jpg\",\n  },\n  {\n    category: \"Productivity\",\n    title: \"Enhance your productivity.\",\n    src: \"/blocks/carousel/design-process.jpg\",\n  },\n  {\n    category: \"Product\",\n    title: \"Launching the new Apple Vision Pro.\",\n    src: \"/blocks/carousel/design-process.jpg\",\n  },\n  {\n    category: \"Product\",\n    title: \"Launching the new Apple Vision Pro.\",\n    src: \"/blocks/carousel/design-process.jpg\",\n  },\n  {\n    category: \"Product\",\n    title: \"Launching the new Apple Vision Pro.\",\n    src: \"/blocks/carousel/design-process.jpg\",\n  },\n]\n"
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/carousel-2/page": "import Container from \"@/components/Container\"\nimport CarouselContainer from \"./components/carousel-container\"\n\nconst page = () => {\n  return (\n    <Container>\n      <CarouselContainer />\n    </Container>\n  )\n}\n\nexport default page\n"
  },
  "case-studies-1": {
    "components": {
      "@/registry/view/case-studies-1/components/case-studies": "\"use client\"\r\n\r\nimport { useRef, useState, useEffect } from \"react\"\r\nimport Image from \"next/image\"\r\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { motion } from \"framer-motion\"\r\n\r\ninterface CaseStudy {\r\n    id: string\r\n    title: string\r\n    description: string\r\n    image: string\r\n}\r\n\r\ninterface CaseStudiesCarouselProps {\r\n    title: string\r\n    description: string\r\n    caseStudies: CaseStudy[]\r\n}\r\n\r\nexport default function CaseStudiesCarousel({\r\n    title = \"Case Studies\",\r\n    description = \"Discover how leading companies and developers are leveraging modern web technologies to build exceptional digital experiences. These case studies showcase real-world applications and success stories.\",\r\n    caseStudies = [\r\n        {\r\n            id: \"shadcn\",\r\n            title: \"shadcn/ui: Building a Modern Component Library\",\r\n            description: \"Explore how shadcn/ui revolutionized React component development\",\r\n            image:\r\n                \"/blocks/case-studies-1/image-1.jpg\",\r\n        },\r\n        {\r\n            id: \"tailwind\",\r\n            title: \"Tailwind CSS: The Utility-First Revolution\",\r\n            description: \"Discover how Tailwind CSS transformed the way developers style applications\",\r\n            image:\r\n                \"/blocks/case-studies-1/image-2.jpg\",\r\n        },\r\n        {\r\n            id: \"astro\",\r\n            title: \"Astro: The All-in-One Web Framework\",\r\n            description: \"Learn how Astro's innovative 'Islands Architecture' and zero-JS approach\",\r\n            image:\r\n                \"/blocks/case-studies-1/image-3.jpg\",\r\n        },\r\n        {\r\n            id: \"react\",\r\n            title: \"React: Pioneering Component-Based UI\",\r\n            description: \"See how React continues to shape modern web development with its component model\",\r\n            image:\r\n                \"/blocks/case-studies-1/image-4.jpg\",\r\n        },\r\n        {\r\n            id: \"nextjs\",\r\n            title: \"Next.js: The React Framework\",\r\n            description: \"Explore how Next.js has become the go-to framework for React applications\",\r\n            image:\r\n                \"/blocks/case-studies-1/image-5.jpg\",\r\n        },\r\n    ],\r\n}: CaseStudiesCarouselProps) {\r\n    const carouselRef = useRef<HTMLDivElement>(null)\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n    const [canScrollLeft, setCanScrollLeft] = useState(false)\r\n    const [canScrollRight, setCanScrollRight] = useState(true)\r\n\r\n    const checkScrollAbility = () => {\r\n        if (carouselRef.current) {\r\n            const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current\r\n            setCanScrollLeft(scrollLeft > 0)\r\n            setCanScrollRight(scrollLeft < scrollWidth - clientWidth - 10)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkScrollAbility()\r\n        window.addEventListener(\"resize\", checkScrollAbility)\r\n        return () => window.removeEventListener(\"resize\", checkScrollAbility)\r\n    }, [])\r\n\r\n    const scroll = (direction: \"left\" | \"right\") => {\r\n        if (carouselRef.current) {\r\n            const cardWidth = carouselRef.current.querySelector(\"div[data-card]\")?.clientWidth || 300\r\n            const scrollAmount = direction === \"left\" ? -cardWidth : cardWidth\r\n\r\n            carouselRef.current.scrollBy({\r\n                left: scrollAmount,\r\n                behavior: \"smooth\",\r\n            })\r\n            if (direction === \"left\" && activeIndex > 0) {\r\n                setActiveIndex(activeIndex - 1)\r\n            } else if (direction === \"right\" && activeIndex < caseStudies.length - 1) {\r\n                setActiveIndex(activeIndex + 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    const scrollToIndex = (index: number) => {\r\n        if (carouselRef.current) {\r\n            const cards = carouselRef.current.querySelectorAll(\"div[data-card]\")\r\n            if (cards[index]) {\r\n                cards[index].scrollIntoView({\r\n                    behavior: \"smooth\",\r\n                    block: \"nearest\",\r\n                    inline: \"start\",\r\n                })\r\n                setActiveIndex(index)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full py-8 md:py-16 px-4 md:px-6 bg-white dark:bg-gray-950 transition-colors duration-200\">\r\n            <div className=\"max-w-7xl mx-auto\">\r\n                <div className=\"flex flex-col md:flex-row md:items-end justify-between mb-8 md:mb-12\">\r\n                    <div className=\"max-w-3xl mb-6 md:mb-0\">\r\n                        <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4\">{title}</h2>\r\n                        <p className=\"text-gray-600 dark:text-gray-300 text-base md:text-lg\">{description}</p>\r\n                    </div>\r\n                    <div className=\"flex space-x-2 self-end\">\r\n                        <button\r\n                            className=\"h-10 w-10 md:h-12 md:w-12 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center disabled:opacity-50 transition-colors hover:bg-gray-200 dark:hover:bg-gray-700\"\r\n                            onClick={() => scroll(\"left\")}\r\n                            disabled={!canScrollLeft}\r\n                            aria-label=\"Previous slide\"\r\n                        >\r\n                            <ArrowLeft className=\"h-5 w-5 md:h-6 md:w-6 text-gray-700 dark:text-gray-300\" />\r\n                        </button>\r\n                        <button\r\n                            className=\"h-10 w-10 md:h-12 md:w-12 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center disabled:opacity-50 transition-colors hover:bg-gray-200 dark:hover:bg-gray-700\"\r\n                            onClick={() => scroll(\"right\")}\r\n                            disabled={!canScrollRight}\r\n                            aria-label=\"Next slide\"\r\n                        >\r\n                            <ArrowRight className=\"h-5 w-5 md:h-6 md:w-6 text-gray-700 dark:text-gray-300\" />\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"relative w-full overflow-hidden\" aria-live=\"polite\">\r\n                    <div\r\n                        ref={carouselRef}\r\n                        className=\"flex w-full overflow-x-auto hide-scrollbar snap-x snap-mandatory gap-4 md:gap-6 pb-8\"\r\n                        onScroll={() => {\r\n                            checkScrollAbility()\r\n                            if (carouselRef.current) {\r\n                                const scrollLeft = carouselRef.current.scrollLeft\r\n                                const cardWidth = carouselRef.current.querySelector(\"div[data-card]\")?.clientWidth || 300\r\n                                const newIndex = Math.round(scrollLeft / cardWidth)\r\n                                if (newIndex !== activeIndex && newIndex >= 0 && newIndex < caseStudies.length) {\r\n                                    setActiveIndex(newIndex)\r\n                                }\r\n                            }\r\n                        }}\r\n                    >\r\n                        {caseStudies.map((study, index) => (\r\n                            <motion.div\r\n                                key={study.id}\r\n                                data-card\r\n                                className=\"min-w-[240px] md:min-w-[300px] lg:min-w-[360px] flex-shrink-0 snap-start rounded-xl overflow-hidden relative group\"\r\n                                initial={{ opacity: 0, y: 20 }}\r\n                                animate={{\r\n                                    opacity: 1,\r\n                                    y: 0,\r\n                                    transition: { duration: 0.5, delay: index * 0.1 },\r\n                                }}\r\n                            >\r\n                                <div className=\"relative aspect-[3/4] md:aspect-[4/5] w-full overflow-hidden\">\r\n                                    <Image\r\n                                        src={study.image}\r\n                                        alt={study.title}\r\n                                        fill\r\n                                        className=\"object-cover transition-transform duration-500 group-hover:scale-105\"\r\n                                        sizes=\"(max-width: 640px) 240px, (max-width: 1024px) 300px, 360px\"\r\n                                    />\r\n                                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent\" />\r\n                                    <div className=\"absolute bottom-0 left-0 right-0 p-4 md:p-6 flex flex-col\">\r\n                                        <h3 className=\"text-lg md:text-xl lg:text-2xl font-bold text-white mb-2\">{study.title}</h3>\r\n                                        <p className=\"text-sm md:text-base text-gray-200 mb-4 line-clamp-2\">{study.description}</p>\r\n                                        <button className=\"flex items-center text-white text-sm md:text-base font-medium group/btn\">\r\n                                            Read more\r\n                                            <ArrowRight className=\"ml-2 h-4 w-4 transition-transform group-hover/btn:translate-x-1\" />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </motion.div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"flex justify-center mt-4 space-x-2\">\r\n                        {caseStudies.map((_, index) => (\r\n                            <button\r\n                                key={index}\r\n                                onClick={() => scrollToIndex(index)}\r\n                                className={cn(\r\n                                    \"w-2 h-2 rounded-full transition-all duration-300\",\r\n                                    activeIndex === index ? \"bg-gray-800 dark:bg-white w-4\" : \"bg-gray-300 dark:bg-gray-600\",\r\n                                )}\r\n                                aria-label={`Go to slide ${index + 1}`}\r\n                                aria-current={activeIndex === index ? \"true\" : \"false\"}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/case-studies-1/page": "import CaseStudies from './components/case-studies'\r\n\r\nconst page = () => {\r\n    return (\r\n        <main className=\"min-h-screen\">\r\n            <CaseStudies />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default page"
  },
  "case-studies-2": {
    "components": {
      "@/registry/view/case-studies-2/components/case-studies": "\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { useRef, useState, useEffect, createContext, useContext } from \"react\"\r\nimport Image from \"next/image\"\r\nimport { ArrowLeft, ArrowRight, X, ExternalLink } from \"lucide-react\"\r\nimport { AnimatePresence, motion } from \"framer-motion\"\r\nimport { useOutsideClick } from \"@/hooks/out-side-click\"\r\n\r\ninterface CaseStudy {\r\n    id: string\r\n    title: string\r\n    description: string\r\n    image: string\r\n    category: string\r\n    fullDescription?: string\r\n    link?: string\r\n    technologies?: string[]\r\n    company?: string\r\n    content?: React.ReactNode\r\n}\r\n\r\ninterface CaseStudiesCarouselProps {\r\n    title: string\r\n    description: string\r\n    caseStudies: CaseStudy[]\r\n}\r\n\r\n// Create context for the carousel\r\nconst CarouselContext = createContext<{\r\n    onCardClose: (index: number) => void\r\n    currentIndex: number\r\n}>({\r\n    onCardClose: () => { },\r\n    currentIndex: 0,\r\n})\r\n\r\nexport default function CaseStudiesCarousel({\r\n    title = \"Case Studies\",\r\n    description = \"Discover how leading companies and developers are leveraging modern web technologies to build exceptional digital experiences. These case studies showcase real-world applications and success stories.\",\r\n    caseStudies = [\r\n        {\r\n            id: \"shadcn\",\r\n            title: \"shadcn/ui: Building a Modern Component Library\",\r\n            description: \"Explore how shadcn/ui revolutionized React component development\",\r\n            category: \"Component Library\",\r\n            fullDescription:\r\n                \"shadcn/ui has transformed how developers build React applications by providing a collection of reusable components that are both beautiful and accessible. Unlike traditional component libraries, shadcn/ui offers a unique approach where you copy and own the code, allowing for maximum customization while maintaining a consistent design language. This case study explores how this innovative approach has changed the component library landscape.\",\r\n            technologies: [\"React\", \"Radix UI\", \"Tailwind CSS\", \"TypeScript\"],\r\n            company: \"shadcn\",\r\n            link: \"https://ui.shadcn.com\",\r\n            image:\r\n                \"/blocks/case-studies-1/image-1.jpg\",\r\n        },\r\n        {\r\n            id: \"tailwind\",\r\n            title: \"Tailwind CSS: The Utility-First Revolution\",\r\n            description: \"Discover how Tailwind CSS transformed the way developers style applications\",\r\n            category: \"CSS Framework\",\r\n            fullDescription:\r\n                \"Tailwind CSS introduced a utility-first approach to styling that has dramatically changed how developers build interfaces. By providing low-level utility classes, Tailwind enables rapid UI development without leaving your HTML, resulting in more consistent designs and faster development cycles. This case study examines how Tailwind CSS has grown from a controversial idea to one of the most popular styling solutions in modern web development.\",\r\n            technologies: [\"CSS\", \"PostCSS\", \"JavaScript\", \"HTML\"],\r\n            company: \"Tailwind Labs\",\r\n            link: \"https://tailwindcss.com\",\r\n            image:\r\n                \"/blocks/case-studies-1/image-2.jpg\",\r\n        },\r\n        {\r\n            id: \"astro\",\r\n            title: \"Astro: The All-in-One Web Framework\",\r\n            description: \"Learn how Astro's innovative 'Islands Architecture' and zero-JS approach\",\r\n            category: \"Web Framework\",\r\n            fullDescription:\r\n                \"Astro has pioneered the 'Islands Architecture' approach, allowing developers to build faster websites by shipping less JavaScript to the client. By default, Astro renders your entire site to static HTML, then selectively hydrates only the interactive components when needed. This case study explores how Astro's innovative approach has enabled developers to build high-performance websites without sacrificing developer experience.\",\r\n            technologies: [\"JavaScript\", \"TypeScript\", \"HTML\", \"CSS\"],\r\n            company: \"Astro\",\r\n            link: \"https://astro.build\",\r\n            image:\r\n                \"/blocks/case-studies-1/image-3.jpg\",\r\n        },\r\n        {\r\n            id: \"react\",\r\n            title: \"React: Pioneering Component-Based UI\",\r\n            description: \"See how React continues to shape modern web development with its component model\",\r\n            category: \"JavaScript Library\",\r\n            fullDescription:\r\n                \"React introduced a component-based architecture that has fundamentally changed how developers build user interfaces. By breaking UIs into reusable, composable components and introducing a virtual DOM for efficient updates, React established patterns that have influenced virtually every modern frontend framework. This case study examines React's journey from a controversial library to the foundation of modern web development.\",\r\n            technologies: [\"JavaScript\", \"JSX\", \"Virtual DOM\", \"Hooks\"],\r\n            company: \"Meta (formerly Facebook)\",\r\n            link: \"https://react.dev\",\r\n            image:\r\n                \"/blocks/case-studies-1/image-4.jpg\",\r\n        },\r\n        {\r\n            id: \"nextjs\",\r\n            title: \"Next.js: The React Framework\",\r\n            description: \"Explore how Next.js has become the go-to framework for React applications\",\r\n            category: \"React Framework\",\r\n            fullDescription:\r\n                \"Next.js has established itself as the leading React framework by providing an elegant solution to common challenges in web development. With features like server-side rendering, static site generation, and automatic code splitting, Next.js enables developers to build high-performance React applications with minimal configuration. This case study explores how Next.js has evolved to address the needs of modern web applications.\",\r\n            technologies: [\"React\", \"JavaScript\", \"TypeScript\", \"Server Components\"],\r\n            company: \"Vercel\",\r\n            link: \"https://nextjs.org\",\r\n            image:\r\n                \"/blocks/case-studies-1/image-5.jpg\",\r\n        },\r\n    ],\r\n}: CaseStudiesCarouselProps) {\r\n    const carouselRef = useRef<HTMLDivElement>(null)\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n    const [canScrollLeft, setCanScrollLeft] = useState(false)\r\n    const [canScrollRight, setCanScrollRight] = useState(true)\r\n\r\n    const checkScrollAbility = () => {\r\n        if (carouselRef.current) {\r\n            const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current\r\n            setCanScrollLeft(scrollLeft > 0)\r\n            setCanScrollRight(scrollLeft < scrollWidth - clientWidth - 10) // Small buffer\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        checkScrollAbility()\r\n        window.addEventListener(\"resize\", checkScrollAbility)\r\n        return () => window.removeEventListener(\"resize\", checkScrollAbility)\r\n    }, [])\r\n\r\n    const scroll = (direction: \"left\" | \"right\") => {\r\n        if (carouselRef.current) {\r\n            const scrollAmount = direction === \"left\" ? -300 : 300\r\n\r\n            carouselRef.current.scrollBy({\r\n                left: scrollAmount,\r\n                behavior: \"smooth\",\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleCardClose = (index: number) => {\r\n        if (carouselRef.current) {\r\n            const cardWidth = window.innerWidth < 768 ? 224 : 320\r\n            const gap = window.innerWidth < 768 ? 16 : 24\r\n            const scrollPosition = index * (cardWidth + gap)\r\n\r\n            carouselRef.current.scrollTo({\r\n                left: scrollPosition,\r\n                behavior: \"smooth\",\r\n            })\r\n            setActiveIndex(index)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CarouselContext.Provider value={{ onCardClose: handleCardClose, currentIndex: activeIndex }}>\r\n            <div className=\"w-full py-8 md:py-16 px-4 md:px-6 bg-white dark:bg-gray-950 transition-colors duration-200\">\r\n                <div className=\"max-w-7xl mx-auto\">\r\n                    <div className=\"flex flex-col md:flex-row md:items-end justify-between mb-8 md:mb-12\">\r\n                        <div className=\"max-w-3xl mb-6 md:mb-0\">\r\n                            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4\">{title}</h2>\r\n                            <p className=\"text-gray-600 dark:text-gray-300 text-base md:text-lg\">{description}</p>\r\n                        </div>\r\n                        <div className=\"flex space-x-2 self-end\">\r\n                            <button\r\n                                className=\"h-10 w-10 md:h-12 md:w-12 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center disabled:opacity-50 transition-colors hover:bg-gray-200 dark:hover:bg-gray-700\"\r\n                                onClick={() => scroll(\"left\")}\r\n                                disabled={!canScrollLeft}\r\n                                aria-label=\"Previous slide\"\r\n                            >\r\n                                <ArrowLeft className=\"h-5 w-5 md:h-6 md:w-6 text-gray-700 dark:text-gray-300\" />\r\n                            </button>\r\n                            <button\r\n                                className=\"h-10 w-10 md:h-12 md:w-12 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center disabled:opacity-50 transition-colors hover:bg-gray-200 dark:hover:bg-gray-700\"\r\n                                onClick={() => scroll(\"right\")}\r\n                                disabled={!canScrollRight}\r\n                                aria-label=\"Next slide\"\r\n                            >\r\n                                <ArrowRight className=\"h-5 w-5 md:h-6 md:w-6 text-gray-700 dark:text-gray-300\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"relative w-full overflow-hidden\" aria-live=\"polite\">\r\n                        <div\r\n                            ref={carouselRef}\r\n                            className=\"flex w-full overflow-x-auto hide-scrollbar gap-4 md:gap-8 pb-8\"\r\n                            onScroll={checkScrollAbility}\r\n                        >\r\n                            {caseStudies.map((study, index) => (\r\n                                <CaseStudyCard key={study.id} card={study} index={index} layout={true} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </CarouselContext.Provider>\r\n    )\r\n}\r\n\r\nfunction CaseStudyCard({\r\n    card,\r\n    index,\r\n    layout = false,\r\n}: {\r\n    card: CaseStudy\r\n    index: number\r\n    layout?: boolean\r\n}) {\r\n    const [open, setOpen] = useState(false)\r\n    const containerRef = useRef<HTMLDivElement>(null)\r\n    const { onCardClose } = useContext(CarouselContext)\r\n\r\n    useEffect(() => {\r\n        function onKeyDown(event: KeyboardEvent) {\r\n            if (event.key === \"Escape\") {\r\n                handleClose()\r\n            }\r\n        }\r\n\r\n        if (open) {\r\n            document.body.style.overflow = \"hidden\"\r\n        } else {\r\n            document.body.style.overflow = \"auto\"\r\n        }\r\n\r\n        window.addEventListener(\"keydown\", onKeyDown)\r\n        return () => window.removeEventListener(\"keydown\", onKeyDown)\r\n    }, [open])\r\n\r\n    useOutsideClick(containerRef, () => handleClose())\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        onCardClose(index)\r\n    }\r\n\r\n    const cardContent = card.content || (\r\n        <div className=\"space-y-6\">\r\n            <p className=\"text-gray-700 dark:text-gray-300 text-base md:text-lg\">\r\n                {card.fullDescription || card.description}\r\n            </p>\r\n            {card.technologies && card.technologies.length > 0 && (\r\n                <div>\r\n                    <h3 className=\"text-lg font-semibold mb-3 text-gray-900 dark:text-white\">Technologies</h3>\r\n                    <div className=\"flex flex-wrap gap-2\">\r\n                        {card.technologies.map((tech) => (\r\n                            <span\r\n                                key={tech}\r\n                                className=\"px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 rounded-full text-sm\"\r\n                            >\r\n                                {tech}\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {card.image && (\r\n                <div className=\"relative\">\r\n                    <Image\r\n                        src={card.image}\r\n                        alt={card.title}\r\n                        fill\r\n                        className=\"object-cover w-full h-[100px]\"\r\n                    />\r\n                </div>\r\n            )}\r\n            {card.company && (\r\n                <div>\r\n                    <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">Company</h3>\r\n                    <p className=\"text-gray-700 dark:text-gray-300\">{card.company}</p>\r\n                </div>\r\n            )}\r\n            {card.link && (\r\n                <div className=\"pt-4\">\r\n                    <a\r\n                        href={card.link}\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"inline-flex items-center px-4 py-2 bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900 rounded-lg hover:bg-gray-800 dark:hover:bg-white transition-colors\"\r\n                    >\r\n                        Visit Website\r\n                        <ExternalLink className=\"ml-2 h-4 w-4\" />\r\n                    </a>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <AnimatePresence>\r\n                {open && (\r\n                    <div className=\"fixed inset-0 z-50 h-screen overflow-y-auto hide-scrollbar\">\r\n                        <motion.div\r\n                            initial={{ opacity: 0 }}\r\n                            animate={{ opacity: 1 }}\r\n                            exit={{ opacity: 0 }}\r\n                            className=\"fixed inset-0 h-full w-full bg-black/50 backdrop-blur-lg\"\r\n                        />\r\n                        <motion.div\r\n                            initial={{ opacity: 0 }}\r\n                            animate={{ opacity: 1 }}\r\n                            exit={{ opacity: 0 }}\r\n                            ref={containerRef}\r\n                            layoutId={layout ? `card-${card.id}` : undefined}\r\n                            className=\"relative z-[60] mx-auto my-10 h-fit max-w-5xl rounded-3xl bg-white p-4 font-sans md:p-10 dark:bg-neutral-900\"\r\n                        >\r\n                            <button\r\n                                className=\"sticky top-4 right-0 ml-auto flex h-8 w-8 items-center justify-center rounded-full bg-black dark:bg-white\"\r\n                                onClick={handleClose}\r\n                            >\r\n                                <X className=\"h-6 w-6 text-neutral-100 dark:text-neutral-900\" />\r\n                            </button>\r\n                            <motion.p\r\n                                layoutId={layout ? `category-${card.id}` : undefined}\r\n                                className=\"text-base font-medium text-black dark:text-white\"\r\n                            >\r\n                                {card.category}\r\n                            </motion.p>\r\n                            <motion.p\r\n                                layoutId={layout ? `title-${card.id}` : undefined}\r\n                                className=\"mt-4 text-2xl font-semibold text-neutral-700 md:text-5xl dark:text-white\"\r\n                            >\r\n                                {card.title}\r\n                            </motion.p>\r\n                            <div className=\"py-10\">{cardContent}</div>\r\n                        </motion.div>\r\n                    </div>\r\n                )}\r\n            </AnimatePresence>\r\n            <motion.button\r\n                layoutId={layout ? `card-${card.id}` : undefined}\r\n                onClick={handleOpen}\r\n                className=\"relative h-[360px] md:h-[440px] lg:h-[500px] z-10 flex flex-col items-start justify-start overflow-hidden rounded-xl bg-gray-100 dark:bg-neutral-900 flex-shrink-0\"\r\n            >\r\n                <div className=\"pointer-events-none absolute inset-x-0 top-0 z-30 h-full bg-gradient-to-b from-black/50 via-transparent to-transparent\" />\r\n                <div className=\"relative z-40 p-8\">\r\n                    <motion.p\r\n                        layoutId={layout ? `category-${card.id}` : undefined}\r\n                        className=\"text-left font-sans text-sm font-medium text-white md:text-base\"\r\n                    >\r\n                        {card.category}\r\n                    </motion.p>\r\n                    <motion.p\r\n                        layoutId={layout ? `title-${card.id}` : undefined}\r\n                        className=\"mt-2 max-w-xs text-left font-sans text-xl font-semibold [text-wrap:balance] text-white md:text-3xl\"\r\n                    >\r\n                        {card.title}\r\n                    </motion.p>\r\n                </div>\r\n                <Image\r\n                    src={card.image}\r\n                    alt={card.title}\r\n                    fill\r\n                    className=\"absolute inset-0 z-10 object-cover transition-transform duration-500 hover:scale-105\"\r\n                    sizes=\"(max-width: 640px) 240px, (max-width: 1024px) 300px, 360px\"\r\n                />\r\n            </motion.button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/case-studies-2/page": "import CaseStudies from './components/case-studies'\r\n\r\nconst page = () => {\r\n    return (\r\n        <main className=\"min-h-screen\">\r\n            <CaseStudies />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default page"
  },
  "dashbaord-1": {
    "components": {},
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {}
  },
  "dashboard-2": {
    "components": {
      "@/registry/view/dashboard-2/components/dashboard-header": "import { Separator } from \"@/components/library/separator\";\r\nimport { SidebarTrigger } from \"@/components/ui/sidebar\";\r\n\r\nexport function DashboardHeader() {\r\n    return (\r\n        <header className=\"group-has-data-[collapsible=icon]/sidebar-wrapper:h-12 flex h-12 shrink-0 items-center gap-2 border-b transition-[width,height] ease-linear\">\r\n            <div className=\"flex w-full items-center gap-1\">\r\n                <SidebarTrigger className=\"-ml-1\" />\r\n                <Separator\r\n                    orientation=\"vertical\"\r\n                    className=\"mx-2 data-[orientation=vertical]:h-4\"\r\n                />\r\n                <h1 className=\"text-base font-medium\">Dashboard</h1>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n",
      "@/registry/view/dashboard-2/components/dashboard-sidebar": "import {\r\n    Sidebar,\r\n    SidebarContent,\r\n    SidebarFooter,\r\n    SidebarHeader,\r\n    SidebarMenu,\r\n    SidebarMenuButton,\r\n    SidebarMenuItem\r\n} from \"@/components/ui/sidebar\";\r\nimport { AlertTriangle, BarChart3, Home, Package, ShoppingCart, Users } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport { NavMain } from \"./nav-main\";\r\nimport { NavUser } from \"./nav-user\";\r\n\r\nconst data = {\r\n    documents: [\r\n        { title: \"Overview\", href: \"/dashboard\", icon: Home },\r\n        { title: \"Orders\", href: \"/dashboard/orders\", icon: ShoppingCart },\r\n        { title: \"Sold Out Products\", href: \"/dashboard/sold-out\", icon: AlertTriangle },\r\n        { title: \"Products\", href: \"/dashboard/products\", icon: Package },\r\n        { title: \"Customers\", href: \"/dashboard/customers\", icon: Users },\r\n        { title: \"Analytics\", href: \"/dashboard/analytics\", icon: BarChart3 },\r\n    ],\r\n    user: {\r\n        name: \"shadcn\",\r\n        email: \"m@example.com\",\r\n        avatar: \"/avatars/shadcn.jpg\",\r\n    },\r\n}\r\n\r\nexport default function DashboardSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\r\n    const pathname = usePathname();\r\n    return (\r\n        <Sidebar collapsible=\"offcanvas\" {...props}>\r\n            <SidebarHeader>\r\n                <SidebarMenu>\r\n                    <SidebarMenuItem>\r\n                        <SidebarMenuButton\r\n                            asChild\r\n                            className=\"data-[slot=sidebar-menu-button]:!p-1.5\"\r\n                        >\r\n                            <Link href=\"#\">\r\n                                <span className=\"text-base font-semibold\">Acme Inc.</span>\r\n                            </Link>\r\n                        </SidebarMenuButton>\r\n                    </SidebarMenuItem>\r\n                </SidebarMenu>\r\n            </SidebarHeader>\r\n            <SidebarContent>\r\n                <NavMain items={data.documents} />\r\n            </SidebarContent>\r\n            <SidebarFooter>\r\n                <NavUser user={data.user} />\r\n            </SidebarFooter>\r\n        </Sidebar>\r\n    );\r\n}\r\n",
      "@/registry/view/dashboard-2/components/nav-main": "\"use client\"\n\nimport {\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from \"@/components/ui/sidebar\"\nimport { type LucideIcon } from \"lucide-react\"\n\nexport function NavMain({\n  items,\n}: {\n  items: {\n    title: string\n    url: string\n    icon?: LucideIcon\n  }[]\n}) {\n  return (\n    <SidebarGroup>\n      <SidebarGroupContent className=\"flex flex-col gap-1 md:gap-2\">\n        <SidebarMenu>\n          {items.map((item) => (\n            <SidebarMenuItem key={item.title}>\n              <SidebarMenuButton tooltip={item.title}>\n                {item.icon && <item.icon className=\"size-4 md:size-5\" />}\n                <span className=\"text-sm md:text-base\">{item.title}</span>\n              </SidebarMenuButton>\n            </SidebarMenuItem>\n          ))}\n        </SidebarMenu>\n      </SidebarGroupContent>\n    </SidebarGroup>\n  )\n}",
      "@/registry/view/dashboard-2/components/nav-user": "\"use client\"\n\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/components/library/avatar\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/library/dropdown-menu\"\nimport {\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\nimport {\n  BellIcon,\n  CreditCardIcon,\n  LogOutIcon,\n  MoreVerticalIcon,\n  UserCircleIcon,\n} from \"lucide-react\"\n\nexport function NavUser({\n  user,\n}: {\n  user: {\n    name: string\n    email: string\n    avatar: string\n  }\n}) {\n  const { isMobile } = useSidebar()\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton\n              size=\"lg\"\n              className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n            >\n              <Avatar className=\"h-8 w-8 rounded-lg grayscale\">\n                <AvatarImage src={user.avatar} alt={user.name} />\n                <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n              </Avatar>\n              <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                <span className=\"truncate font-medium\">{user.name}</span>\n                <span className=\"truncate text-xs text-muted-foreground\">\n                  {user.email}\n                </span>\n              </div>\n              <MoreVerticalIcon className=\"ml-auto size-4\" />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\n            side={isMobile ? \"bottom\" : \"right\"}\n            align=\"end\"\n            sideOffset={4}\n          >\n            <DropdownMenuLabel className=\"p-0 font-normal\">\n              <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n                <Avatar className=\"h-8 w-8 rounded-lg\">\n                  <AvatarImage src={user.avatar} alt={user.name} />\n                  <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n                </Avatar>\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                  <span className=\"truncate font-medium\">{user.name}</span>\n                  <span className=\"truncate text-xs text-muted-foreground\">\n                    {user.email}\n                  </span>\n                </div>\n              </div>\n            </DropdownMenuLabel>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem>\n                <UserCircleIcon />\n                Account\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <CreditCardIcon />\n                Billing\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <BellIcon />\n                Notifications\n              </DropdownMenuItem>\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>\n              <LogOutIcon />\n              Log out\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  )\n}\n",
      "@/registry/view/dashboard-2/components/section-cards": "import { Badge } from \"@/components/library/badge\"\nimport {\n  Card,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/library/card\"\nimport { TrendingDownIcon, TrendingUpIcon } from \"lucide-react\"\nimport { formatPrice } from \"../lib/utils\"\n\nexport function SectionCards() {\n  return (\n    <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4\">\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm \">\n        <CardHeader className=\"relative px-3 py-3 md:px-4 md:py-4\">\n          <CardDescription>Total Revenue</CardDescription>\n          <CardTitle className=\"text-xl md:text-2xl lg:text-3xl font-semibold tabular-nums text-green-600\">\n            {formatPrice(85637)}\n          </CardTitle>\n          <div className=\"absolute right-3 top-3 md:right-4 md:top-4\">\n            <Badge variant=\"outline\" className=\"flex flex-row gap-1 rounded-lg text-xs text-green-600\">\n              <TrendingUpIcon className=\"size-3\" />\n              +12.5%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-xs sm:text-sm px-3 py-2 md:px-4 md:py-3\">\n          <div className=\"line-clamp-1 flex gap-1 md:gap-2 font-medium\">\n            Trending up this month <TrendingUpIcon className=\"size-3 md:size-4\" />\n          </div>\n          <div className=\"text-muted-foreground text-xs md:text-sm\">\n            Visitors for the last 6 months\n          </div>\n        </CardFooter>\n      </Card>\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm \">\n        <CardHeader className=\"relative px-3 py-3 md:px-4 md:py-4\">\n          <CardDescription>New Customers</CardDescription>\n          <CardTitle className=\"text-xl md:text-2xl lg:text-3xl font-semibold tabular-nums\">\n            1,234\n          </CardTitle>\n          <div className=\"absolute right-3 top-3 md:right-4 md:top-4\">\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs text-destructive\">\n              <TrendingDownIcon className=\"size-3\" />\n              -20%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-xs sm:text-sm px-3 py-2 md:px-4 md:py-3\">\n          <div className=\"line-clamp-1 flex gap-1 md:gap-2 font-medium\">\n            Down 20% this period <TrendingDownIcon className=\"size-3 md:size-4\" />\n          </div>\n          <div className=\"text-muted-foreground text-xs md:text-sm\">\n            Acquisition needs attention\n          </div>\n        </CardFooter>\n      </Card>\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm\">\n        <CardHeader className=\"relative px-3 py-3 md:px-4 md:py-4\">\n          <CardDescription>Active Accounts</CardDescription>\n          <CardTitle className=\"text-xl md:text-2xl lg:text-3xl font-semibold tabular-nums\">\n            45,678\n          </CardTitle>\n          <div className=\"absolute right-3 top-3 md:right-4 md:top-4\">\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs text-green-600\">\n              <TrendingUpIcon className=\"size-3\" />\n              +12.5%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-xs sm:text-sm px-3 py-2 md:px-4 md:py-3\">\n          <div className=\"line-clamp-1 flex gap-1 md:gap-2 font-medium\">\n            Strong user retention <TrendingUpIcon className=\"size-3 md:size-4\" />\n          </div>\n          <div className=\"text-muted-foreground text-xs md:text-sm\">Engagement exceed targets</div>\n        </CardFooter>\n      </Card>\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm\">\n        <CardHeader className=\"relative px-3 py-3 md:px-4 md:py-4\">\n          <CardDescription>Growth Rate</CardDescription>\n          <CardTitle className=\"text-xl md:text-2xl lg:text-3xl font-semibold tabular-nums\">\n            4.5%\n          </CardTitle>\n          <div className=\"absolute right-3 top-3 md:right-4 md:top-4\">\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs text-green-600\">\n              <TrendingUpIcon className=\"size-3\" />\n              +4.5%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-xs sm:text-sm px-3 py-2 md:px-4 md:py-3\">\n          <div className=\"line-clamp-1 flex gap-1 md:gap-2 font-medium\">\n            Steady performance <TrendingUpIcon className=\"size-3 md:size-4\" />\n          </div>\n          <div className=\"text-muted-foreground text-xs md:text-sm\">Meets growth projections</div>\n        </CardFooter>\n      </Card>\n    </div>\n  )\n}\n"
    },
    "constant": {},
    "lib": {
      "@/registry/view/dashboard-2/lib/utils.ts": "// this for formatting the price in the product overview page for your country currency \r\nexport const formatPrice = (price: number) => {\r\n    const formatter = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"EGP\",\r\n        useGrouping: false,\r\n    });\r\n    return formatter.format(price);\r\n};\r\n"
    },
    "context": {},
    "hooks": {},
    "@/registry/view/dashboard-2/page": "\"use client\"\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/library/avatar\"\nimport { Badge } from \"@/components/library/badge\"\nimport { Button } from \"@/components/library/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/library/card\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/library/table\"\nimport { SidebarInset, SidebarProvider } from \"@/components/ui/sidebar\"\nimport { ArrowUpRight } from \"lucide-react\"\nimport dynamic from \"next/dynamic\"\nimport Link from \"next/link\"\nimport { formatPrice } from \"../dashboard-3/lib/utils\"\nimport { DashboardHeader } from \"./components/dashboard-header\"\nimport DashboardSidebar from \"./components/dashboard-sidebar\"\nimport { SectionCards } from \"./components/section-cards\"\n\n\nconst ReactECharts = dynamic(() => import('echarts-for-react'), { ssr: false })\nconst salesData = [\n  { name: \"Jan\", sales: 4000 },\n  { name: \"Feb\", sales: 3000 },\n  { name: \"Mar\", sales: 5000 },\n  { name: \"April\", sales: 2780 },\n  { name: \"May\", sales: 1890 },\n  { name: \"June\", sales: 6390 },\n  { name: \"July\", sales: 3490 },\n  { name: \"Aug\", sales: 9688 },\n  { name: \"Seb\", sales: 2500 },\n  { name: \"Oct\", sales: 7538 },\n  { name: \"Nov\", sales: 1598 },\n  { name: \"Dec\", sales: 7412 },\n]\nconst salesChartOptions = {\n  tooltip: {\n    trigger: 'axis',\n    backgroundColor: '#fff',\n    borderColor: '#e5e7eb',\n    borderWidth: 1,\n    textStyle: { color: '#111827', fontSize: 12 }\n  },\n  grid: { left: '3%', right: '4%', bottom: '3%', containLabel: true },\n  xAxis: {\n    type: 'category',\n    data: salesData.map((d) => d.name),\n    axisTick: { show: false },\n    axisLine: { lineStyle: { color: '#d1d5db' } },\n    axisLabel: {\n      fontSize: 12, interval: (index, value) => {\n        return window.innerWidth > 640 ? true : index % 2 === 0;\n      }\n    }\n  },\n  yAxis: {\n    type: 'value',\n    axisLine: { show: false },\n    splitLine: { lineStyle: { color: '#e5e7eb', type: 'dashed' } },\n    axisLabel: { fontSize: 12 }\n  },\n  series: [\n    {\n      data: salesData.map((d) => d.sales),\n      type: 'bar',\n      itemStyle: {\n        borderRadius: [4, 4, 0, 0],\n        color: '#6366f1'\n      },\n      barWidth: '40%'\n    }\n  ],\n  media: [\n    {\n      query: { maxWidth: 640 },\n      option: {\n        grid: { left: '8%', right: '8%' },\n        xAxis: { axisLabel: { fontSize: 10, rotate: 45 } },\n        yAxis: { axisLabel: { fontSize: 10 } }\n      }\n    }\n  ]\n}\n\nconst recentOrders = [\n  {\n    id: \"ORD-7352\",\n    date: \"2025-04-24\",\n    customer: \"Emma Johnson\",\n    amount: 235.89,\n    status: \"Delivered\",\n  },\n  {\n    id: \"ORD-7351\",\n    date: \"2025-04-23\",\n    customer: \"Michael Chen\",\n    amount: 125.99,\n    status: \"Processing\",\n  },\n  {\n    id: \"ORD-7350\",\n    date: \"2025-04-23\",\n    customer: \"Sophia Martinez\",\n    amount: 432.20,\n    status: \"Shipped\",\n  },\n  {\n    id: \"ORD-7349\",\n    date: \"2025-04-22\",\n    customer: \"James Wilson\",\n    amount: 76.45,\n    status: \"Delivered\",\n  },\n  {\n    id: \"ORD-7348\",\n    date: \"2025-04-21\",\n    customer: \"Olivia Brown\",\n    amount: 189.50,\n    status: \"Processing\",\n  },\n  {\n    id: \"ORD-7347\",\n    date: \"2025-04-20\",\n    customer: \"William Davis\",\n    amount: 312.75,\n    status: \"Delivered\",\n  },\n  {\n    id: \"ORD-7346\",\n    date: \"2025-04-19\",\n    customer: \"Ava Garcia\",\n    amount: 94.20,\n    status: \"Shipped\",\n  },\n]\n\n\nexport default function DashboardPage() {\n  return (\n    <SidebarProvider>\n      {/* Here you can choose of custom sidebar behavior (inset, sidebar, floating)  default use: sidebar */}\n      <DashboardSidebar variant=\"inset\" />\n      <SidebarInset className=\"container\">\n        <DashboardHeader />\n        <div className=\"flex flex-1 flex-col\">\n          <div className=\"flex flex-1 flex-col gap-2\">\n            <div className=\"flex flex-col gap-3 py-3 md:gap-6 md:py-6\">\n              <SectionCards />\n              <div className=\"grid gap-4 md:gap-6 grid-cols-1\">\n                <Card className=\"col-span-1 lg:col-span-8\">\n                  <CardHeader className=\"px-4 md:px-6 py-3 md:py-4\">\n                    <CardTitle className=\"text-base md:text-lg\">Sales Overview</CardTitle>\n                    <CardDescription className=\"text-xs md:text-sm\">Yearly sales performance for the last 12 months</CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"pl-0 md:pl-2 pt-0 pb-4\">\n                    <div className=\"h-[250px] md:h-[300px] lg:h-[400px] max-w-full\">\n                      <ReactECharts option={salesChartOptions} style={{ width: '100%', height: '100%' }} />\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n              <Card>\n                <CardHeader className=\"px-3 md:px-6 py-2 md:py-4\">\n                  <CardTitle className=\"text-base md:text-lg\">Recent Orders</CardTitle>\n                  <CardDescription className=\"text-xs md:text-sm\">Detailed view of the last 7 days order history</CardDescription>\n                </CardHeader>\n                <CardContent className=\"p-0\">\n                  <div className=\"overflow-auto max-w-full custom-scrollbar\">\n                    <Table className=\"w-full min-w-[500px]\">\n                      <TableHeader>\n                        <TableRow>\n                          <TableHead className=\"text-xs md:text-sm font-medium p-2 md:p-4\">Order ID</TableHead>\n                          <TableHead className=\"text-xs md:text-sm font-medium p-2 md:p-4\">Date</TableHead>\n                          <TableHead className=\"text-xs md:text-sm font-medium p-2 md:p-4\">Customer</TableHead>\n                          <TableHead className=\"text-xs md:text-sm font-medium p-2 md:p-4\">Status</TableHead>\n                          <TableHead className=\"text-xs md:text-sm font-medium text-right p-2 md:p-4\">Amount</TableHead>\n                        </TableRow>\n                      </TableHeader>\n                      <TableBody>\n                        {recentOrders.map((order) => (\n                          <TableRow key={order.id}>\n                            <TableCell className=\"text-xs md:text-sm font-medium text-foreground p-2 md:p-4 text-nowrap\">{order.id}</TableCell>\n                            <TableCell className=\"text-xs md:text-sm text-muted-foreground p-2 md:p-4 text-nowrap\">{order.date}</TableCell>\n                            <TableCell className=\"text-xs md:text-sm p-2 md:p-4\">\n                              <div className=\"flex items-center gap-1 md:gap-2\">\n                                <Avatar className=\"h-6 w-6 md:h-8 md:w-8\">\n                                  <AvatarImage src={`/placeholder.svg?height=32&width=32`} alt={order.customer} />\n                                  <AvatarFallback>{order.customer.charAt(0)}</AvatarFallback>\n                                </Avatar>\n                                <span className=\"text-foreground text-nowrap line-clamp-1\">{order.customer}</span>\n                              </div>\n                            </TableCell>\n                            <TableCell className=\"p-2 md:p-4\">\n                              <Badge\n                                variant={\n                                  order.status === \"Delivered\"\n                                    ? \"default\"\n                                    : order.status === \"Processing\"\n                                      ? \"secondary\"\n                                      : \"outline\"\n                                }\n                                className=\"text-xs\"\n                              >\n                                {order.status}\n                              </Badge>\n                            </TableCell>\n                            <TableCell className=\"text-xs md:text-sm text-right text-foreground p-2 md:p-4\">{formatPrice(order.amount)}</TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </div>\n                </CardContent>\n                <CardFooter className=\"flex justify-end px-3 md:px-6 py-2 md:py-4\">\n                  <Button asChild variant=\"outline\" className=\"h-8 md:h-10 text-xs md:text-sm\">\n                    <Link href=\"/dashboard/orders\">\n                      View All Orders\n                      <ArrowUpRight className=\"ml-1 md:ml-2 h-3 w-3 md:h-4 md:w-4\" />\n                    </Link>\n                  </Button>\n                </CardFooter>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </SidebarInset>\n    </SidebarProvider>\n  )\n}"
  },
  "dashboard-3": {
    "components": {
      "@/registry/view/dashboard-3/components/app-sidebar": "\"use client\"\nimport { Sidebar, SidebarContent, SidebarFooter, SidebarHeader, SidebarMenu, SidebarMenuButton, SidebarMenuItem } from \"@/components/ui/sidebar\"\nimport {\n  ArrowUpCircleIcon,\n  BarChartIcon,\n  CameraIcon,\n  ClipboardListIcon,\n  DatabaseIcon,\n  FileCodeIcon,\n  FileIcon,\n  FileTextIcon,\n  FolderIcon,\n  HelpCircleIcon,\n  LayoutDashboardIcon,\n  ListIcon,\n  SearchIcon,\n  SettingsIcon,\n  UsersIcon,\n} from \"lucide-react\"\nimport Link from \"next/link\"\nimport * as React from \"react\"\nimport { NavDocuments } from \"./nav-documents\"\nimport { NavMain } from \"../../dashboard-2/components/nav-main\"\nimport { NavSecondary } from \"./nav-secondary\"\nimport { NavUser } from \"../../dashboard-2/components/nav-user\"\n\nconst data = {\n  user: {\n    name: \"shadcn\",\n    email: \"m@example.com\",\n    avatar: \"/avatars/shadcn.jpg\",\n  },\n  navMain: [\n    {\n      title: \"Dashboard\",\n      url: \"#\",\n      icon: LayoutDashboardIcon,\n    },\n    {\n      title: \"Lifecycle\",\n      url: \"#\",\n      icon: ListIcon,\n    },\n    {\n      title: \"Analytics\",\n      url: \"#\",\n      icon: BarChartIcon,\n    },\n    {\n      title: \"Projects\",\n      url: \"#\",\n      icon: FolderIcon,\n    },\n    {\n      title: \"Team\",\n      url: \"#\",\n      icon: UsersIcon,\n    },\n  ],\n  navClouds: [\n    {\n      title: \"Capture\",\n      icon: CameraIcon,\n      isActive: true,\n      url: \"#\",\n      items: [\n        {\n          title: \"Active Proposals\",\n          url: \"#\",\n        },\n        {\n          title: \"Archived\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Proposal\",\n      icon: FileTextIcon,\n      url: \"#\",\n      items: [\n        {\n          title: \"Active Proposals\",\n          url: \"#\",\n        },\n        {\n          title: \"Archived\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Prompts\",\n      icon: FileCodeIcon,\n      url: \"#\",\n      items: [\n        {\n          title: \"Active Proposals\",\n          url: \"#\",\n        },\n        {\n          title: \"Archived\",\n          url: \"#\",\n        },\n      ],\n    },\n  ],\n  navSecondary: [\n    {\n      title: \"Settings\",\n      url: \"#\",\n      icon: SettingsIcon,\n    },\n    {\n      title: \"Get Help\",\n      url: \"#\",\n      icon: HelpCircleIcon,\n    },\n    {\n      title: \"Search\",\n      url: \"#\",\n      icon: SearchIcon,\n    },\n  ],\n  documents: [\n    {\n      name: \"Data Library\",\n      url: \"#\",\n      icon: DatabaseIcon,\n    },\n    {\n      name: \"Reports\",\n      url: \"#\",\n      icon: ClipboardListIcon,\n    },\n    {\n      name: \"Word Assistant\",\n      url: \"#\",\n      icon: FileIcon,\n    },\n  ],\n}\n\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  return (\n    <Sidebar collapsible=\"offcanvas\" {...props}>\n      <SidebarHeader>\n        <SidebarMenu>\n          <SidebarMenuItem>\n            <SidebarMenuButton\n              asChild\n              className=\"data-[slot=sidebar-menu-button]:!p-1.5\"\n            >\n              <Link href=\"#\">\n                <ArrowUpCircleIcon className=\"h-5 w-5\" />\n                <span className=\"text-base font-semibold\">Acme Inc.</span>\n              </Link>\n            </SidebarMenuButton>\n          </SidebarMenuItem>\n        </SidebarMenu>\n      </SidebarHeader>\n      <SidebarContent className=\"hide-scrollbar\">\n        <NavMain items={data.navMain} />\n        <NavDocuments items={data.documents} />\n        <NavSecondary items={data.navSecondary} className=\"mt-auto\" />\n      </SidebarContent>\n      <SidebarFooter>\n        <NavUser user={data.user} />\n      </SidebarFooter>\n    </Sidebar>\n  )\n}\n",
      "@/registry/view/dashboard-3/components/chart-area-interactive": "\"use client\"\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/library/card\"\nimport { ChartConfig, ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/library/chart\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/library/select\"\nimport { ToggleGroup, ToggleGroupItem } from \"@/components/library/toggle-group\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport * as React from \"react\"\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\n\n\nexport const description = \"An interactive area chart\"\n\nconst chartData = [\n  { date: \"2024-04-01\", desktop: 222, mobile: 150 },\n  { date: \"2024-04-02\", desktop: 97, mobile: 180 },\n  { date: \"2024-04-03\", desktop: 167, mobile: 120 },\n  { date: \"2024-04-04\", desktop: 242, mobile: 260 },\n  { date: \"2024-04-05\", desktop: 373, mobile: 290 },\n  { date: \"2024-04-06\", desktop: 301, mobile: 340 },\n  { date: \"2024-04-07\", desktop: 245, mobile: 180 },\n  { date: \"2024-04-08\", desktop: 409, mobile: 320 },\n  { date: \"2024-04-09\", desktop: 59, mobile: 110 },\n  { date: \"2024-04-10\", desktop: 261, mobile: 190 },\n  { date: \"2024-04-11\", desktop: 327, mobile: 350 },\n  { date: \"2024-04-12\", desktop: 292, mobile: 210 },\n  { date: \"2024-04-13\", desktop: 342, mobile: 380 },\n  { date: \"2024-04-14\", desktop: 137, mobile: 220 },\n  { date: \"2024-04-15\", desktop: 120, mobile: 170 },\n  { date: \"2024-04-16\", desktop: 138, mobile: 190 },\n  { date: \"2024-04-17\", desktop: 446, mobile: 360 },\n  { date: \"2024-04-18\", desktop: 364, mobile: 410 },\n  { date: \"2024-04-19\", desktop: 243, mobile: 180 },\n  { date: \"2024-04-20\", desktop: 89, mobile: 150 },\n  { date: \"2024-04-21\", desktop: 137, mobile: 200 },\n  { date: \"2024-04-22\", desktop: 224, mobile: 170 },\n  { date: \"2024-04-23\", desktop: 138, mobile: 230 },\n  { date: \"2024-04-24\", desktop: 387, mobile: 290 },\n  { date: \"2024-04-25\", desktop: 215, mobile: 250 },\n  { date: \"2024-04-26\", desktop: 75, mobile: 130 },\n  { date: \"2024-04-27\", desktop: 383, mobile: 420 },\n  { date: \"2024-04-28\", desktop: 122, mobile: 180 },\n  { date: \"2024-04-29\", desktop: 315, mobile: 240 },\n  { date: \"2024-04-30\", desktop: 454, mobile: 380 },\n  { date: \"2024-05-01\", desktop: 165, mobile: 220 },\n  { date: \"2024-05-02\", desktop: 293, mobile: 310 },\n  { date: \"2024-05-03\", desktop: 247, mobile: 190 },\n  { date: \"2024-05-04\", desktop: 385, mobile: 420 },\n  { date: \"2024-05-05\", desktop: 481, mobile: 390 },\n  { date: \"2024-05-06\", desktop: 498, mobile: 520 },\n  { date: \"2024-05-07\", desktop: 388, mobile: 300 },\n  { date: \"2024-05-08\", desktop: 149, mobile: 210 },\n  { date: \"2024-05-09\", desktop: 227, mobile: 180 },\n  { date: \"2024-05-10\", desktop: 293, mobile: 330 },\n  { date: \"2024-05-11\", desktop: 335, mobile: 270 },\n  { date: \"2024-05-12\", desktop: 197, mobile: 240 },\n  { date: \"2024-05-13\", desktop: 197, mobile: 160 },\n  { date: \"2024-05-14\", desktop: 448, mobile: 490 },\n  { date: \"2024-05-15\", desktop: 473, mobile: 380 },\n  { date: \"2024-05-16\", desktop: 338, mobile: 400 },\n  { date: \"2024-05-17\", desktop: 499, mobile: 420 },\n  { date: \"2024-05-18\", desktop: 315, mobile: 350 },\n  { date: \"2024-05-19\", desktop: 235, mobile: 180 },\n  { date: \"2024-05-20\", desktop: 177, mobile: 230 },\n  { date: \"2024-05-21\", desktop: 82, mobile: 140 },\n  { date: \"2024-05-22\", desktop: 81, mobile: 120 },\n  { date: \"2024-05-23\", desktop: 252, mobile: 290 },\n  { date: \"2024-05-24\", desktop: 294, mobile: 220 },\n  { date: \"2024-05-25\", desktop: 201, mobile: 250 },\n  { date: \"2024-05-26\", desktop: 213, mobile: 170 },\n  { date: \"2024-05-27\", desktop: 420, mobile: 460 },\n  { date: \"2024-05-28\", desktop: 233, mobile: 190 },\n  { date: \"2024-05-29\", desktop: 78, mobile: 130 },\n  { date: \"2024-05-30\", desktop: 340, mobile: 280 },\n  { date: \"2024-05-31\", desktop: 178, mobile: 230 },\n  { date: \"2024-06-01\", desktop: 178, mobile: 200 },\n  { date: \"2024-06-02\", desktop: 470, mobile: 410 },\n  { date: \"2024-06-03\", desktop: 103, mobile: 160 },\n  { date: \"2024-06-04\", desktop: 439, mobile: 380 },\n  { date: \"2024-06-05\", desktop: 88, mobile: 140 },\n  { date: \"2024-06-06\", desktop: 294, mobile: 250 },\n  { date: \"2024-06-07\", desktop: 323, mobile: 370 },\n  { date: \"2024-06-08\", desktop: 385, mobile: 320 },\n  { date: \"2024-06-09\", desktop: 438, mobile: 480 },\n  { date: \"2024-06-10\", desktop: 155, mobile: 200 },\n  { date: \"2024-06-11\", desktop: 92, mobile: 150 },\n  { date: \"2024-06-12\", desktop: 492, mobile: 420 },\n  { date: \"2024-06-13\", desktop: 81, mobile: 130 },\n  { date: \"2024-06-14\", desktop: 426, mobile: 380 },\n  { date: \"2024-06-15\", desktop: 307, mobile: 350 },\n  { date: \"2024-06-16\", desktop: 371, mobile: 310 },\n  { date: \"2024-06-17\", desktop: 475, mobile: 520 },\n  { date: \"2024-06-18\", desktop: 107, mobile: 170 },\n  { date: \"2024-06-19\", desktop: 341, mobile: 290 },\n  { date: \"2024-06-20\", desktop: 408, mobile: 450 },\n  { date: \"2024-06-21\", desktop: 169, mobile: 210 },\n  { date: \"2024-06-22\", desktop: 317, mobile: 270 },\n  { date: \"2024-06-23\", desktop: 480, mobile: 530 },\n  { date: \"2024-06-24\", desktop: 132, mobile: 180 },\n  { date: \"2024-06-25\", desktop: 141, mobile: 190 },\n  { date: \"2024-06-26\", desktop: 434, mobile: 380 },\n  { date: \"2024-06-27\", desktop: 448, mobile: 490 },\n  { date: \"2024-06-28\", desktop: 149, mobile: 200 },\n  { date: \"2024-06-29\", desktop: 103, mobile: 160 },\n  { date: \"2024-06-30\", desktop: 446, mobile: 400 },\n]\n\nconst chartConfig = {\n  visitors: {\n    label: \"Visitors\",\n  },\n  desktop: {\n    label: \"Desktop\",\n    color: \"hsl(var(--chart-1))\",\n  },\n  mobile: {\n    label: \"Mobile\",\n    color: \"hsl(var(--chart-2))\",\n  },\n} satisfies ChartConfig\n\nexport function ChartAreaInteractive() {\n  const isMobile = useIsMobile()\n  const [timeRange, setTimeRange] = React.useState(\"30d\")\n\n  React.useEffect(() => {\n    if (isMobile) {\n      setTimeRange(\"7d\")\n    }\n  }, [isMobile])\n\n  const filteredData = chartData.filter((item) => {\n    const date = new Date(item.date)\n    const referenceDate = new Date(\"2024-06-30\")\n    let daysToSubtract = 90\n    if (timeRange === \"30d\") {\n      daysToSubtract = 30\n    } else if (timeRange === \"7d\") {\n      daysToSubtract = 7\n    }\n    const startDate = new Date(referenceDate)\n    startDate.setDate(startDate.getDate() - daysToSubtract)\n    return date >= startDate\n  })\n\n  return (\n    <Card className=\"@container/card\">\n      <CardHeader className=\"relative\">\n        <CardTitle>Total Visitors</CardTitle>\n        <CardDescription>\n          <span className=\"@[540px]/card:block hidden\">\n            Total for the last 3 months\n          </span>\n          <span className=\"@[540px]/card:hidden\">Last 3 months</span>\n        </CardDescription>\n        <div className=\"absolute right-4 top-4\">\n          <ToggleGroup\n            type=\"single\"\n            value={timeRange}\n            onValueChange={setTimeRange}\n            variant=\"outline\"\n            className=\"@[767px]/card:flex hidden\"\n          >\n            <ToggleGroupItem value=\"90d\" className=\"h-8 px-2.5\">\n              Last 3 months\n            </ToggleGroupItem>\n            <ToggleGroupItem value=\"30d\" className=\"h-8 px-2.5\">\n              Last 30 days\n            </ToggleGroupItem>\n            <ToggleGroupItem value=\"7d\" className=\"h-8 px-2.5\">\n              Last 7 days\n            </ToggleGroupItem>\n          </ToggleGroup>\n          <Select value={timeRange} onValueChange={setTimeRange}>\n            <SelectTrigger\n              className=\"@[767px]/card:hidden flex w-40\"\n              aria-label=\"Select a value\"\n            >\n              <SelectValue placeholder=\"Last 3 months\" />\n            </SelectTrigger>\n            <SelectContent className=\"rounded-xl\">\n              <SelectItem value=\"90d\" className=\"rounded-lg\">\n                Last 3 months\n              </SelectItem>\n              <SelectItem value=\"30d\" className=\"rounded-lg\">\n                Last 30 days\n              </SelectItem>\n              <SelectItem value=\"7d\" className=\"rounded-lg\">\n                Last 7 days\n              </SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </CardHeader>\n      <CardContent className=\"px-2 pt-4 sm:px-6 sm:pt-6\">\n        <ChartContainer\n          config={chartConfig}\n          className=\"aspect-auto h-[250px] w-full\"\n        >\n          <AreaChart data={filteredData}>\n            <defs>\n              <linearGradient id=\"fillDesktop\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop\n                  offset=\"5%\"\n                  stopColor=\"var(--color-desktop)\"\n                  stopOpacity={1.0}\n                />\n                <stop\n                  offset=\"95%\"\n                  stopColor=\"var(--color-desktop)\"\n                  stopOpacity={0.1}\n                />\n              </linearGradient>\n              <linearGradient id=\"fillMobile\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop\n                  offset=\"5%\"\n                  stopColor=\"var(--color-mobile)\"\n                  stopOpacity={0.8}\n                />\n                <stop\n                  offset=\"95%\"\n                  stopColor=\"var(--color-mobile)\"\n                  stopOpacity={0.1}\n                />\n              </linearGradient>\n            </defs>\n            <CartesianGrid vertical={false} />\n            <XAxis\n              dataKey=\"date\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              minTickGap={32}\n              tickFormatter={(value) => {\n                const date = new Date(value)\n                return date.toLocaleDateString(\"en-US\", {\n                  month: \"short\",\n                  day: \"numeric\",\n                })\n              }}\n            />\n            <ChartTooltip\n              cursor={false}\n              content={\n                <ChartTooltipContent\n                  labelFormatter={(value) => {\n                    return new Date(value).toLocaleDateString(\"en-US\", {\n                      month: \"short\",\n                      day: \"numeric\",\n                    })\n                  }}\n                  indicator=\"dot\"\n                />\n              }\n            />\n            <Area\n              dataKey=\"mobile\"\n              type=\"natural\"\n              fill=\"url(#fillMobile)\"\n              stroke=\"var(--color-mobile)\"\n              stackId=\"a\"\n            />\n            <Area\n              dataKey=\"desktop\"\n              type=\"natural\"\n              fill=\"url(#fillDesktop)\"\n              stroke=\"var(--color-desktop)\"\n              stackId=\"a\"\n            />\n          </AreaChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  )\n}\n",
      "@/registry/view/dashboard-3/components/data-table": "\"use client\"\n\nimport {\n  Sheet,\n  SheetClose,\n  SheetContent,\n  SheetDescription,\n  SheetFooter,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/library//sheet\"\nimport { Badge } from \"@/components/library/badge\"\nimport { Button } from \"@/components/library/button\"\nimport { ChartConfig, ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/library/chart\"\nimport { Checkbox } from \"@/components/library/checkbox\"\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/library/dropdown-menu\"\nimport { Input } from \"@/components/library/input\"\nimport { Label } from \"@/components/library/label\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/library/select\"\nimport { Separator } from \"@/components/library/separator\"\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/library/table\"\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/components/ui/tabs\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport {\n  DndContext,\n  KeyboardSensor,\n  MouseSensor,\n  TouchSensor,\n  closestCenter,\n  useSensor,\n  useSensors,\n  type DragEndEvent,\n  type UniqueIdentifier,\n} from \"@dnd-kit/core\"\nimport { restrictToVerticalAxis } from \"@dnd-kit/modifiers\"\nimport {\n  SortableContext,\n  arrayMove,\n  useSortable,\n  verticalListSortingStrategy,\n} from \"@dnd-kit/sortable\"\nimport { CSS } from \"@dnd-kit/utilities\"\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  Row,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFacetedRowModel,\n  getFacetedUniqueValues,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\"\nimport {\n  CheckCircle2Icon,\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  ChevronsLeftIcon,\n  ChevronsRightIcon,\n  ColumnsIcon,\n  GripVerticalIcon,\n  LoaderIcon,\n  MoreVerticalIcon,\n  PlusIcon,\n  TrendingUpIcon\n} from \"lucide-react\"\nimport * as React from \"react\"\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\nimport { toast } from \"sonner\"\nimport { z } from \"zod\"\nexport const schema = z.object({\n  id: z.number(),\n  header: z.string(),\n  type: z.string(),\n  status: z.string(),\n  target: z.string(),\n  limit: z.string(),\n  reviewer: z.string(),\n})\n\n\nfunction DragHandle({ id }: { id: number }) {\n  const { attributes, listeners } = useSortable({\n    id,\n  })\n\n  return (\n    <Button\n      {...attributes}\n      {...listeners}\n      variant=\"ghost\"\n      size=\"icon\"\n      className=\"size-7 text-muted-foreground hover:bg-transparent\"\n    >\n      <GripVerticalIcon className=\"size-3 text-muted-foreground\" />\n      <span className=\"sr-only\">Drag to reorder</span>\n    </Button>\n  )\n}\n\nconst columns: ColumnDef<z.infer<typeof schema>>[] = [\n  {\n    id: \"drag\",\n    header: () => null,\n    cell: ({ row }) => <DragHandle id={row.original.id} />,\n  },\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <div className=\"flex items-center justify-center\">\n        <Checkbox\n          checked={\n            table.getIsAllPageRowsSelected() ||\n            (table.getIsSomePageRowsSelected() && \"indeterminate\")\n          }\n          onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n          aria-label=\"Select all\"\n        />\n      </div>\n    ),\n    cell: ({ row }) => (\n      <div className=\"flex items-center justify-center\">\n        <Checkbox\n          checked={row.getIsSelected()}\n          onCheckedChange={(value) => row.toggleSelected(!!value)}\n          aria-label=\"Select row\"\n        />\n      </div>\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"header\",\n    header: \"Header\",\n    cell: ({ row }) => {\n      return <TableCellViewer item={row.original} />\n    },\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"type\",\n    header: \"Section Type\",\n    cell: ({ row }) => (\n      <div className=\"w-32\">\n        <Badge variant=\"outline\" className=\"px-1.5 text-muted-foreground\">\n          {row.original.type}\n        </Badge>\n      </div>\n    ),\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => (\n      <Badge\n        variant=\"outline\"\n        className=\"flex gap-1 px-1.5 text-muted-foreground [&_svg]:size-3\"\n      >\n        {row.original.status === \"Done\" ? (\n          <CheckCircle2Icon className=\"text-green-500 dark:text-green-400\" />\n        ) : (\n          <LoaderIcon />\n        )}\n        {row.original.status}\n      </Badge>\n    ),\n  },\n  {\n    accessorKey: \"target\",\n    header: () => <div className=\"w-full text-right\">Target</div>,\n    cell: ({ row }) => (\n      <form\n        onSubmit={(e) => {\n          e.preventDefault()\n          toast.promise(new Promise((resolve) => setTimeout(resolve, 1000)), {\n            loading: `Saving ${row.original.header}`,\n            success: \"Done\",\n            error: \"Error\",\n          })\n        }}\n      >\n        <Label htmlFor={`${row.original.id}-target`} className=\"sr-only\">\n          Target\n        </Label>\n        <Input\n          className=\"h-8 w-16 border-transparent bg-transparent text-right shadow-none hover:bg-input/30 focus-visible:border focus-visible:bg-background\"\n          defaultValue={row.original.target}\n          id={`${row.original.id}-target`}\n        />\n      </form>\n    ),\n  },\n  {\n    accessorKey: \"limit\",\n    header: () => <div className=\"w-full text-right\">Limit</div>,\n    cell: ({ row }) => (\n      <form\n        onSubmit={(e) => {\n          e.preventDefault()\n          toast.promise(new Promise((resolve) => setTimeout(resolve, 1000)), {\n            loading: `Saving ${row.original.header}`,\n            success: \"Done\",\n            error: \"Error\",\n          })\n        }}\n      >\n        <Label htmlFor={`${row.original.id}-limit`} className=\"sr-only\">\n          Limit\n        </Label>\n        <Input\n          className=\"h-8 w-16 border-transparent bg-transparent text-right shadow-none hover:bg-input/30 focus-visible:border focus-visible:bg-background\"\n          defaultValue={row.original.limit}\n          id={`${row.original.id}-limit`}\n        />\n      </form>\n    ),\n  },\n  {\n    accessorKey: \"reviewer\",\n    header: \"Reviewer\",\n    cell: ({ row }) => {\n      const isAssigned = row.original.reviewer !== \"Assign reviewer\"\n\n      if (isAssigned) {\n        return row.original.reviewer\n      }\n\n      return (\n        <>\n          <Label htmlFor={`${row.original.id}-reviewer`} className=\"sr-only\">\n            Reviewer\n          </Label>\n          <Select>\n            <SelectTrigger\n              className=\"h-8 w-40\"\n              id={`${row.original.id}-reviewer`}\n            >\n              <SelectValue placeholder=\"Assign reviewer\" />\n            </SelectTrigger>\n            <SelectContent align=\"end\">\n              <SelectItem value=\"Eddie Lake\">Eddie Lake</SelectItem>\n              <SelectItem value=\"Jamik Tashpulatov\">\n                Jamik Tashpulatov\n              </SelectItem>\n            </SelectContent>\n          </Select>\n        </>\n      )\n    },\n  },\n  {\n    id: \"actions\",\n    cell: () => (\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button\n            variant=\"ghost\"\n            className=\"flex size-8 text-muted-foreground data-[state=open]:bg-muted\"\n            size=\"icon\"\n          >\n            <MoreVerticalIcon />\n            <span className=\"sr-only\">Open menu</span>\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent align=\"end\" className=\"w-32\">\n          <DropdownMenuItem>Edit</DropdownMenuItem>\n          <DropdownMenuItem>Make a copy</DropdownMenuItem>\n          <DropdownMenuItem>Favorite</DropdownMenuItem>\n          <DropdownMenuSeparator />\n          <DropdownMenuItem>Delete</DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    ),\n  },\n]\n\nfunction DraggableRow({ row }: { row: Row<z.infer<typeof schema>> }) {\n  const { transform, transition, setNodeRef, isDragging } = useSortable({\n    id: row.original.id,\n  })\n\n  return (\n    <TableRow\n      data-state={row.getIsSelected() && \"selected\"}\n      data-dragging={isDragging}\n      ref={setNodeRef}\n      className=\"relative z-0 data-[dragging=true]:z-10 data-[dragging=true]:opacity-80\"\n      style={{\n        transform: CSS.Transform.toString(transform),\n        transition: transition,\n      }}\n    >\n      {row.getVisibleCells().map((cell) => (\n        <TableCell key={cell.id}>\n          {flexRender(cell.column.columnDef.cell, cell.getContext())}\n        </TableCell>\n      ))}\n    </TableRow>\n  )\n}\n\nexport function DataTable({\n  data: initialData,\n}: {\n  data: z.infer<typeof schema>[]\n}) {\n  const [data, setData] = React.useState(() => initialData)\n  const [rowSelection, setRowSelection] = React.useState({})\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({})\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    []\n  )\n  const [sorting, setSorting] = React.useState<SortingState>([])\n  const [pagination, setPagination] = React.useState({\n    pageIndex: 0,\n    pageSize: 10,\n  })\n  const sortableId = React.useId()\n  const sensors = useSensors(\n    useSensor(MouseSensor, {}),\n    useSensor(TouchSensor, {}),\n    useSensor(KeyboardSensor, {})\n  )\n\n  const dataIds = React.useMemo<UniqueIdentifier[]>(\n    () => data?.map(({ id }) => id) || [],\n    [data]\n  )\n\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n      columnVisibility,\n      rowSelection,\n      columnFilters,\n      pagination,\n    },\n    getRowId: (row) => row.id.toString(),\n    enableRowSelection: true,\n    onRowSelectionChange: setRowSelection,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    onColumnVisibilityChange: setColumnVisibility,\n    onPaginationChange: setPagination,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFacetedRowModel: getFacetedRowModel(),\n    getFacetedUniqueValues: getFacetedUniqueValues(),\n  })\n\n  function handleDragEnd(event: DragEndEvent) {\n    const { active, over } = event\n    if (active && over && active.id !== over.id) {\n      setData((data) => {\n        const oldIndex = dataIds.indexOf(active.id)\n        const newIndex = dataIds.indexOf(over.id)\n        return arrayMove(data, oldIndex, newIndex)\n      })\n    }\n  }\n\n  return (\n    <Tabs\n      defaultValue=\"outline\"\n      className=\"flex w-full flex-col justify-start gap-6\"\n    >\n      <div className=\"flex items-center justify-between px-4 lg:px-6\">\n        <Label htmlFor=\"view-selector\" className=\"sr-only\">\n          View\n        </Label>\n        <Select defaultValue=\"outline\">\n          <SelectTrigger\n            className=\"@4xl/main:hidden flex w-fit\"\n            id=\"view-selector\"\n          >\n            <SelectValue placeholder=\"Select a view\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"outline\">Outline</SelectItem>\n            <SelectItem value=\"past-performance\">Past Performance</SelectItem>\n            <SelectItem value=\"key-personnel\">Key Personnel</SelectItem>\n            <SelectItem value=\"focus-documents\">Focus Documents</SelectItem>\n          </SelectContent>\n        </Select>\n        <TabsList className=\"@4xl/main:flex hidden\">\n          <TabsTrigger value=\"outline\">Outline</TabsTrigger>\n          <TabsTrigger value=\"past-performance\" className=\"gap-1\">\n            Past Performance{\" \"}\n            <Badge\n              variant=\"secondary\"\n              className=\"flex h-5 w-5 items-center justify-center rounded-full bg-muted-foreground/30\"\n            >\n              3\n            </Badge>\n          </TabsTrigger>\n          <TabsTrigger value=\"key-personnel\" className=\"gap-1\">\n            Key Personnel{\" \"}\n            <Badge\n              variant=\"secondary\"\n              className=\"flex h-5 w-5 items-center justify-center rounded-full bg-muted-foreground/30\"\n            >\n              2\n            </Badge>\n          </TabsTrigger>\n          <TabsTrigger value=\"focus-documents\">Focus Documents</TabsTrigger>\n        </TabsList>\n        <div className=\"flex items-center gap-2\">\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" size=\"sm\">\n                <ColumnsIcon />\n                <span className=\"hidden lg:inline\">Customize Columns</span>\n                <span className=\"lg:hidden\">Columns</span>\n                <ChevronDownIcon />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\" className=\"w-56\">\n              {table\n                .getAllColumns()\n                .filter(\n                  (column) =>\n                    typeof column.accessorFn !== \"undefined\" &&\n                    column.getCanHide()\n                )\n                .map((column) => {\n                  return (\n                    <DropdownMenuCheckboxItem\n                      key={column.id}\n                      className=\"capitalize\"\n                      checked={column.getIsVisible()}\n                      onCheckedChange={(value) =>\n                        column.toggleVisibility(!!value)\n                      }\n                    >\n                      {column.id}\n                    </DropdownMenuCheckboxItem>\n                  )\n                })}\n            </DropdownMenuContent>\n          </DropdownMenu>\n          <Button variant=\"outline\" size=\"sm\">\n            <PlusIcon />\n            <span className=\"hidden lg:inline\">Add Section</span>\n          </Button>\n        </div>\n      </div>\n      <TabsContent\n        value=\"outline\"\n        className=\"relative flex flex-col gap-4 overflow-auto px-4 lg:px-6\"\n      >\n        <div className=\"overflow-hidden rounded-lg border\">\n          <DndContext\n            collisionDetection={closestCenter}\n            modifiers={[restrictToVerticalAxis]}\n            onDragEnd={handleDragEnd}\n            sensors={sensors}\n            id={sortableId}\n          >\n            <div className=\"overflow-auto custom-scrollbar\">\n              <div className=\"flex items-center\">\n                <Table>\n                  <TableHeader className=\"sticky top-0 z-10 bg-muted\">\n                    {table.getHeaderGroups().map((headerGroup) => (\n                      <TableRow key={headerGroup.id}>\n                        {headerGroup.headers.map((header) => {\n                          return (\n                            <TableHead key={header.id} colSpan={header.colSpan}>\n                              {header.isPlaceholder\n                                ? null\n                                : flexRender(\n                                  header.column.columnDef.header,\n                                  header.getContext()\n                                )}\n                            </TableHead>\n                          )\n                        })}\n                      </TableRow>\n                    ))}\n                  </TableHeader>\n                  <TableBody className=\"**:data-[slot=table-cell]:first:w-8\">\n                    {table.getRowModel().rows?.length ? (\n                      <SortableContext\n                        items={dataIds}\n                        strategy={verticalListSortingStrategy}\n                      >\n                        {table.getRowModel().rows.map((row) => (\n                          <DraggableRow key={row.id} row={row} />\n                        ))}\n                      </SortableContext>\n                    ) : (\n                      <TableRow>\n                        <TableCell\n                          colSpan={columns.length}\n                          className=\"h-24 text-center\"\n                        >\n                          No results.\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </div>\n            </div>\n          </DndContext>\n        </div>\n        <div className=\"flex items-center justify-between px-4\">\n          <div className=\"hidden flex-1 text-sm text-muted-foreground lg:flex\">\n            {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n            {table.getFilteredRowModel().rows.length} row(s) selected.\n          </div>\n          <div className=\"flex w-full items-center gap-8 lg:w-fit\">\n            <div className=\"hidden items-center gap-2 lg:flex\">\n              <Label htmlFor=\"rows-per-page\" className=\"text-sm font-medium\">\n                Rows per page\n              </Label>\n              <Select\n                value={`${table.getState().pagination.pageSize}`}\n                onValueChange={(value) => {\n                  table.setPageSize(Number(value))\n                }}\n              >\n                <SelectTrigger className=\"w-20\" id=\"rows-per-page\">\n                  <SelectValue\n                    placeholder={table.getState().pagination.pageSize}\n                  />\n                </SelectTrigger>\n                <SelectContent side=\"top\">\n                  {[10, 20, 30, 40, 50].map((pageSize) => (\n                    <SelectItem key={pageSize} value={`${pageSize}`}>\n                      {pageSize}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"flex w-fit items-center justify-center text-sm font-medium\">\n              Page {table.getState().pagination.pageIndex + 1} of{\" \"}\n              {table.getPageCount()}\n            </div>\n            <div className=\"ml-auto flex items-center gap-2 lg:ml-0\">\n              <Button\n                variant=\"outline\"\n                className=\"hidden h-8 w-8 p-0 lg:flex\"\n                onClick={() => table.setPageIndex(0)}\n                disabled={!table.getCanPreviousPage()}\n              >\n                <span className=\"sr-only\">Go to first page</span>\n                <ChevronsLeftIcon />\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"size-8\"\n                size=\"icon\"\n                onClick={() => table.previousPage()}\n                disabled={!table.getCanPreviousPage()}\n              >\n                <span className=\"sr-only\">Go to previous page</span>\n                <ChevronLeftIcon />\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"size-8\"\n                size=\"icon\"\n                onClick={() => table.nextPage()}\n                disabled={!table.getCanNextPage()}\n              >\n                <span className=\"sr-only\">Go to next page</span>\n                <ChevronRightIcon />\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"hidden size-8 lg:flex\"\n                size=\"icon\"\n                onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n                disabled={!table.getCanNextPage()}\n              >\n                <span className=\"sr-only\">Go to last page</span>\n                <ChevronsRightIcon />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </TabsContent>\n      <TabsContent\n        value=\"past-performance\"\n        className=\"flex flex-col px-4 lg:px-6\"\n      >\n        <div className=\"aspect-video w-full flex-1 rounded-lg border border-dashed\"></div>\n      </TabsContent>\n      <TabsContent value=\"key-personnel\" className=\"flex flex-col px-4 lg:px-6\">\n        <div className=\"aspect-video w-full flex-1 rounded-lg border border-dashed\"></div>\n      </TabsContent>\n      <TabsContent\n        value=\"focus-documents\"\n        className=\"flex flex-col px-4 lg:px-6\"\n      >\n        <div className=\"aspect-video w-full flex-1 rounded-lg border border-dashed\"></div>\n      </TabsContent>\n    </Tabs>\n  )\n}\n\nconst chartData = [\n  { month: \"January\", desktop: 186, mobile: 80 },\n  { month: \"February\", desktop: 305, mobile: 200 },\n  { month: \"March\", desktop: 237, mobile: 120 },\n  { month: \"April\", desktop: 73, mobile: 190 },\n  { month: \"May\", desktop: 209, mobile: 130 },\n  { month: \"June\", desktop: 214, mobile: 140 },\n]\n\nconst chartConfig = {\n  desktop: {\n    label: \"Desktop\",\n    color: \"var(--primary)\",\n  },\n  mobile: {\n    label: \"Mobile\",\n    color: \"var(--primary)\",\n  },\n} satisfies ChartConfig\n\nfunction TableCellViewer({ item }: { item: z.infer<typeof schema> }) {\n  const isMobile = useIsMobile()\n\n  return (\n    <Sheet>\n      <SheetTrigger asChild>\n        <Button variant=\"link\" className=\"w-fit px-0 text-left text-foreground\">\n          {item.header}\n        </Button>\n      </SheetTrigger>\n      <SheetContent side=\"right\" className=\"flex flex-col\">\n        <SheetHeader className=\"gap-1\">\n          <SheetTitle>{item.header}</SheetTitle>\n          <SheetDescription>\n            Showing total visitors for the last 6 months\n          </SheetDescription>\n        </SheetHeader>\n        <div className=\"flex flex-1 flex-col gap-4 overflow-y-auto py-4 text-sm\">\n          {!isMobile && (\n            <>\n              <ChartContainer config={chartConfig}>\n                <AreaChart\n                  accessibilityLayer\n                  data={chartData}\n                  margin={{\n                    left: 0,\n                    right: 10,\n                  }}\n                >\n                  <CartesianGrid vertical={false} />\n                  <XAxis\n                    dataKey=\"month\"\n                    tickLine={false}\n                    axisLine={false}\n                    tickMargin={8}\n                    tickFormatter={(value) => value.slice(0, 3)}\n                    hide\n                  />\n                  <ChartTooltip\n                    cursor={false}\n                    content={<ChartTooltipContent indicator=\"dot\" />}\n                  />\n                  <Area\n                    dataKey=\"mobile\"\n                    type=\"natural\"\n                    fill=\"var(--color-mobile)\"\n                    fillOpacity={0.6}\n                    stroke=\"var(--color-mobile)\"\n                    stackId=\"a\"\n                  />\n                  <Area\n                    dataKey=\"desktop\"\n                    type=\"natural\"\n                    fill=\"var(--color-desktop)\"\n                    fillOpacity={0.4}\n                    stroke=\"var(--color-desktop)\"\n                    stackId=\"a\"\n                  />\n                </AreaChart>\n              </ChartContainer>\n              <Separator />\n              <div className=\"grid gap-2\">\n                <div className=\"flex gap-2 font-medium leading-none\">\n                  Trending up by 5.2% this month{\" \"}\n                  <TrendingUpIcon className=\"size-4\" />\n                </div>\n                <div className=\"text-muted-foreground\">\n                  Showing total visitors for the last 6 months. This is just\n                  some random text to test the layout. It spans multiple lines\n                  and should wrap around.\n                </div>\n              </div>\n              <Separator />\n            </>\n          )}\n          <form className=\"flex flex-col gap-4\">\n            <div className=\"flex flex-col gap-3\">\n              <Label htmlFor=\"header\">Header</Label>\n              <Input id=\"header\" defaultValue={item.header} />\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"flex flex-col gap-3\">\n                <Label htmlFor=\"type\">Type</Label>\n                <Select defaultValue={item.type}>\n                  <SelectTrigger id=\"type\" className=\"w-full\">\n                    <SelectValue placeholder=\"Select a type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"Table of Contents\">\n                      Table of Contents\n                    </SelectItem>\n                    <SelectItem value=\"Executive Summary\">\n                      Executive Summary\n                    </SelectItem>\n                    <SelectItem value=\"Technical Approach\">\n                      Technical Approach\n                    </SelectItem>\n                    <SelectItem value=\"Design\">Design</SelectItem>\n                    <SelectItem value=\"Capabilities\">Capabilities</SelectItem>\n                    <SelectItem value=\"Focus Documents\">\n                      Focus Documents\n                    </SelectItem>\n                    <SelectItem value=\"Narrative\">Narrative</SelectItem>\n                    <SelectItem value=\"Cover Page\">Cover Page</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"flex flex-col gap-3\">\n                <Label htmlFor=\"status\">Status</Label>\n                <Select defaultValue={item.status}>\n                  <SelectTrigger id=\"status\" className=\"w-full\">\n                    <SelectValue placeholder=\"Select a status\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem className=\"flex gap-2\" value=\"Done\">Done</SelectItem>\n                    <SelectItem value=\"In Progress\">In Progress</SelectItem>\n                    <SelectItem value=\"Not Started\">Not Started</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"flex flex-col gap-3\">\n                <Label htmlFor=\"target\">Target</Label>\n                <Input id=\"target\" defaultValue={item.target} />\n              </div>\n              <div className=\"flex flex-col gap-3\">\n                <Label htmlFor=\"limit\">Limit</Label>\n                <Input id=\"limit\" defaultValue={item.limit} />\n              </div>\n            </div>\n            <div className=\"flex flex-col gap-3\">\n              <Label htmlFor=\"reviewer\">Reviewer</Label>\n              <Select defaultValue={item.reviewer}>\n                <SelectTrigger id=\"reviewer\" className=\"w-full\">\n                  <SelectValue placeholder=\"Select a reviewer\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"Eddie Lake\">Eddie Lake</SelectItem>\n                  <SelectItem value=\"Jamik Tashpulatov\">\n                    Jamik Tashpulatov\n                  </SelectItem>\n                  <SelectItem value=\"Emily Whalen\">Emily Whalen</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </form>\n        </div>\n        <SheetFooter className=\"mt-auto flex gap-2 sm:flex-col sm:space-x-0\">\n          <Button className=\"w-full\">Submit</Button>\n          <SheetClose asChild>\n            <Button variant=\"outline\" className=\"w-full\">\n              Done\n            </Button>\n          </SheetClose>\n        </SheetFooter>\n      </SheetContent>\n    </Sheet>\n  )\n}\n",
      "@/registry/view/dashboard-3/components/nav-documents": "\"use client\"\n\nimport {\n  FolderIcon,\n  MoreHorizontalIcon,\n  ShareIcon,\n  type LucideIcon,\n} from \"lucide-react\"\n\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/library/dropdown-menu\"\nimport {\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\n\nexport function NavDocuments({\n  items,\n}: {\n  items: {\n    name: string\n    url: string\n    icon: LucideIcon\n  }[]\n}) {\n  const { isMobile } = useSidebar()\n\n  return (\n    <SidebarGroup className=\"group-data-[collapsible=icon]:hidden\">\n      <SidebarGroupLabel>Documents</SidebarGroupLabel>\n      <SidebarMenu>\n        {items.map((item) => (\n          <SidebarMenuItem key={item.name}>\n            <SidebarMenuButton asChild>\n              <a href={item.url}>\n                <item.icon />\n                <span>{item.name}</span>\n              </a>\n            </SidebarMenuButton>\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <SidebarMenuAction\n                  showOnHover\n                  className=\"rounded-sm data-[state=open]:bg-accent\"\n                >\n                  <MoreHorizontalIcon />\n                  <span className=\"sr-only\">More</span>\n                </SidebarMenuAction>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent\n                className=\"w-24 rounded-lg\"\n                side={isMobile ? \"bottom\" : \"right\"}\n                align={isMobile ? \"end\" : \"start\"}\n              >\n                <DropdownMenuItem>\n                  <FolderIcon />\n                  <span>Open</span>\n                </DropdownMenuItem>\n                <DropdownMenuItem>\n                  <ShareIcon />\n                  <span>Share</span>\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </SidebarMenuItem>\n        ))}\n        <SidebarMenuItem>\n          <SidebarMenuButton className=\"text-sidebar-foreground/70\">\n            <MoreHorizontalIcon className=\"text-sidebar-foreground/70\" />\n            <span>More</span>\n          </SidebarMenuButton>\n        </SidebarMenuItem>\n      </SidebarMenu>\n    </SidebarGroup>\n  )\n}\n",
      "@/registry/view/dashboard-3/components/nav-main": "\"use client\"\n\nimport { Button } from \"@/components/library/button\"\nimport {\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from \"@/components/ui/sidebar\"\nimport { MailIcon, PlusCircleIcon, type LucideIcon } from \"lucide-react\"\n\nexport function NavMain({\n  items,\n}: {\n  items: {\n    title: string\n    url: string\n    icon?: LucideIcon\n  }[]\n}) {\n  return (\n    <SidebarGroup>\n      <SidebarGroupContent className=\"flex flex-col gap-2\">\n        <SidebarMenu>\n          <SidebarMenuItem className=\"flex items-center gap-2\">\n            <SidebarMenuButton\n              tooltip=\"Quick Create\"\n              className=\"min-w-8 bg-primary text-primary-foreground duration-200 ease-linear hover:bg-primary/90 hover:text-primary-foreground active:bg-primary/90 active:text-primary-foreground\"\n            >\n              <PlusCircleIcon />\n              <span>Quick Create</span>\n            </SidebarMenuButton>\n            <Button\n              size=\"icon\"\n              className=\"h-9 w-9 shrink-0 group-data-[collapsible=icon]:opacity-0\"\n              variant=\"outline\"\n            >\n              <MailIcon />\n              <span className=\"sr-only\">Inbox</span>\n            </Button>\n          </SidebarMenuItem>\n        </SidebarMenu>\n        <SidebarMenu>\n          {items.map((item) => (\n            <SidebarMenuItem key={item.title}>\n              <SidebarMenuButton tooltip={item.title}>\n                {item.icon && <item.icon />}\n                <span>{item.title}</span>\n              </SidebarMenuButton>\n            </SidebarMenuItem>\n          ))}\n        </SidebarMenu>\n      </SidebarGroupContent>\n    </SidebarGroup>\n  )\n}\n",
      "@/registry/view/dashboard-3/components/nav-secondary": "\"use client\"\n\nimport * as React from \"react\"\nimport { LucideIcon } from \"lucide-react\"\n\nimport {\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from \"@/components/ui/sidebar\"\n\nexport function NavSecondary({\n  items,\n  ...props\n}: {\n  items: {\n    title: string\n    url: string\n    icon: LucideIcon\n  }[]\n} & React.ComponentPropsWithoutRef<typeof SidebarGroup>) {\n  return (\n    <SidebarGroup {...props}>\n      <SidebarGroupContent>\n        <SidebarMenu>\n          {items.map((item) => (\n            <SidebarMenuItem key={item.title}>\n              <SidebarMenuButton asChild>\n                <a href={item.url}>\n                  <item.icon />\n                  <span>{item.title}</span>\n                </a>\n              </SidebarMenuButton>\n            </SidebarMenuItem>\n          ))}\n        </SidebarMenu>\n      </SidebarGroupContent>\n    </SidebarGroup>\n  )\n}\n",
      "@/registry/view/dashboard-3/components/nav-user": "\"use client\"\n\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/components/library/avatar\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/library/dropdown-menu\"\nimport {\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\nimport {\n  BellIcon,\n  CreditCardIcon,\n  LogOutIcon,\n  MoreVerticalIcon,\n  UserCircleIcon,\n} from \"lucide-react\"\n\nexport function NavUser({\n  user,\n}: {\n  user: {\n    name: string\n    email: string\n    avatar: string\n  }\n}) {\n  const { isMobile } = useSidebar()\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton\n              size=\"lg\"\n              className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n            >\n              <Avatar className=\"h-8 w-8 rounded-lg grayscale\">\n                <AvatarImage src={user.avatar} alt={user.name} />\n                <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n              </Avatar>\n              <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                <span className=\"truncate font-medium\">{user.name}</span>\n                <span className=\"truncate text-xs text-muted-foreground\">\n                  {user.email}\n                </span>\n              </div>\n              <MoreVerticalIcon className=\"ml-auto size-4\" />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\n            side={isMobile ? \"bottom\" : \"right\"}\n            align=\"end\"\n            sideOffset={4}\n          >\n            <DropdownMenuLabel className=\"p-0 font-normal\">\n              <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n                <Avatar className=\"h-8 w-8 rounded-lg\">\n                  <AvatarImage src={user.avatar} alt={user.name} />\n                  <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n                </Avatar>\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                  <span className=\"truncate font-medium\">{user.name}</span>\n                  <span className=\"truncate text-xs text-muted-foreground\">\n                    {user.email}\n                  </span>\n                </div>\n              </div>\n            </DropdownMenuLabel>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem>\n                <UserCircleIcon />\n                Account\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <CreditCardIcon />\n                Billing\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <BellIcon />\n                Notifications\n              </DropdownMenuItem>\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>\n              <LogOutIcon />\n              Log out\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  )\n}\n",
      "@/registry/view/dashboard-3/components/section-cards": "import { Badge } from \"@/components/library/badge\"\nimport {\n  Card,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/library/card\"\nimport { TrendingDownIcon, TrendingUpIcon } from \"lucide-react\"\nimport { formatPrice } from \"../lib/utils\"\n\nexport function SectionCards() {\n  return (\n    <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4\">\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm \">\n        <CardHeader className=\"relative\">\n          <CardDescription>Total Revenue</CardDescription>\n          <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\n            {formatPrice(1250)}\n          </CardTitle>\n          <div className=\"absolute right-4 top-4\">\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\n              <TrendingUpIcon className=\"size-3\" />\n              +12.5%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-sm\">\n          <div className=\"line-clamp-1 flex gap-2 font-medium\">\n            Trending up this month <TrendingUpIcon className=\"size-4\" />\n          </div>\n          <div className=\"text-muted-foreground\">\n            Visitors for the last 6 months\n          </div>\n        </CardFooter>\n      </Card>\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm \">\n        <CardHeader className=\"relative\">\n          <CardDescription>New Customers</CardDescription>\n          <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\n            1,234\n          </CardTitle>\n          <div className=\"absolute right-4 top-4\">\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\n              <TrendingDownIcon className=\"size-3\" />\n              -20%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-sm\">\n          <div className=\"line-clamp-1 flex gap-2 font-medium\">\n            Down 20% this period <TrendingDownIcon className=\"size-4\" />\n          </div>\n          <div className=\"text-muted-foreground\">\n            Acquisition needs attention\n          </div>\n        </CardFooter>\n      </Card>\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm\">\n        <CardHeader className=\"relative\">\n          <CardDescription>Active Accounts</CardDescription>\n          <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\n            45,678\n          </CardTitle>\n          <div className=\"absolute right-4 top-4\">\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\n              <TrendingUpIcon className=\"size-3\" />\n              +12.5%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-sm\">\n          <div className=\"line-clamp-1 flex gap-2 font-medium\">\n            Strong user retention <TrendingUpIcon className=\"size-4\" />\n          </div>\n          <div className=\"text-muted-foreground\">Engagement exceed targets</div>\n        </CardFooter>\n      </Card>\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm\">\n        <CardHeader className=\"relative\">\n          <CardDescription>Growth Rate</CardDescription>\n          <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\n            4.5%\n          </CardTitle>\n          <div className=\"absolute right-4 top-4\">\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\n              <TrendingUpIcon className=\"size-3\" />\n              +4.5%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-sm\">\n          <div className=\"line-clamp-1 flex gap-2 font-medium\">\n            Steady performance <TrendingUpIcon className=\"size-4\" />\n          </div>\n          <div className=\"text-muted-foreground\">Meets growth projections</div>\n        </CardFooter>\n      </Card>\n    </div>\n  )\n}\n",
      "@/registry/view/dashboard-3/components/site-header": "import { Separator } from \"@/components/library/separator\";\nimport { SidebarTrigger } from \"@/components/ui/sidebar\";\n\nexport function SiteHeader() {\n  return (\n    <header className=\"group-has-data-[collapsible=icon]/sidebar-wrapper:h-12 flex h-12 shrink-0 items-center gap-2 border-b transition-[width,height] ease-linear\">\n      <div className=\"flex w-full items-center gap-1\">\n        <SidebarTrigger className=\"-ml-1\" />\n        <Separator\n          orientation=\"vertical\"\n          className=\"mx-2 data-[orientation=vertical]:h-4\"\n        />\n        <h1 className=\"text-base font-medium\">Documents</h1>\n      </div>\n    </header>\n  )\n}\n"
    },
    "constant": {
      "@/registry/view/dashboard-3/constant/data.json": "[\n  {\n    \"id\": 1,\n    \"header\": \"Cover page\",\n    \"type\": \"Cover page\",\n    \"status\": \"In Process\",\n    \"target\": \"18\",\n    \"limit\": \"5\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 2,\n    \"header\": \"Table of contents\",\n    \"type\": \"Table of contents\",\n    \"status\": \"Done\",\n    \"target\": \"29\",\n    \"limit\": \"24\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 3,\n    \"header\": \"Executive summary\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"10\",\n    \"limit\": \"13\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 4,\n    \"header\": \"Technical approach\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"27\",\n    \"limit\": \"23\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 5,\n    \"header\": \"Design\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"2\",\n    \"limit\": \"16\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 6,\n    \"header\": \"Capabilities\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"20\",\n    \"limit\": \"8\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 7,\n    \"header\": \"Integration with existing systems\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"19\",\n    \"limit\": \"21\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 8,\n    \"header\": \"Innovation and Advantages\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"25\",\n    \"limit\": \"26\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 9,\n    \"header\": \"Overview of EMR's Innovative Solutions\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"7\",\n    \"limit\": \"23\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 10,\n    \"header\": \"Advanced Algorithms and Machine Learning\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"30\",\n    \"limit\": \"28\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 11,\n    \"header\": \"Adaptive Communication Protocols\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"9\",\n    \"limit\": \"31\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 12,\n    \"header\": \"Advantages Over Current Technologies\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"12\",\n    \"limit\": \"0\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 13,\n    \"header\": \"Past Performance\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"22\",\n    \"limit\": \"33\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 14,\n    \"header\": \"Customer Feedback and Satisfaction Levels\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"15\",\n    \"limit\": \"34\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 15,\n    \"header\": \"Implementation Challenges and Solutions\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"3\",\n    \"limit\": \"35\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 16,\n    \"header\": \"Security Measures and Data Protection Policies\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"6\",\n    \"limit\": \"36\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 17,\n    \"header\": \"Scalability and Future Proofing\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"4\",\n    \"limit\": \"37\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 18,\n    \"header\": \"Cost-Benefit Analysis\",\n    \"type\": \"Plain language\",\n    \"status\": \"Done\",\n    \"target\": \"14\",\n    \"limit\": \"38\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 19,\n    \"header\": \"User Training and Onboarding Experience\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"17\",\n    \"limit\": \"39\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 20,\n    \"header\": \"Future Development Roadmap\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"11\",\n    \"limit\": \"40\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 21,\n    \"header\": \"System Architecture Overview\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"24\",\n    \"limit\": \"18\",\n    \"reviewer\": \"Maya Johnson\"\n  },\n  {\n    \"id\": 22,\n    \"header\": \"Risk Management Plan\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"15\",\n    \"limit\": \"22\",\n    \"reviewer\": \"Carlos Rodriguez\"\n  },\n  {\n    \"id\": 23,\n    \"header\": \"Compliance Documentation\",\n    \"type\": \"Legal\",\n    \"status\": \"In Process\",\n    \"target\": \"31\",\n    \"limit\": \"27\",\n    \"reviewer\": \"Sarah Chen\"\n  },\n  {\n    \"id\": 24,\n    \"header\": \"API Documentation\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"8\",\n    \"limit\": \"12\",\n    \"reviewer\": \"Raj Patel\"\n  },\n  {\n    \"id\": 25,\n    \"header\": \"User Interface Mockups\",\n    \"type\": \"Visual\",\n    \"status\": \"In Process\",\n    \"target\": \"19\",\n    \"limit\": \"25\",\n    \"reviewer\": \"Leila Ahmadi\"\n  },\n  {\n    \"id\": 26,\n    \"header\": \"Database Schema\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"22\",\n    \"limit\": \"20\",\n    \"reviewer\": \"Thomas Wilson\"\n  },\n  {\n    \"id\": 27,\n    \"header\": \"Testing Methodology\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"17\",\n    \"limit\": \"14\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 28,\n    \"header\": \"Deployment Strategy\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"26\",\n    \"limit\": \"30\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 29,\n    \"header\": \"Budget Breakdown\",\n    \"type\": \"Financial\",\n    \"status\": \"In Process\",\n    \"target\": \"13\",\n    \"limit\": \"16\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 30,\n    \"header\": \"Market Analysis\",\n    \"type\": \"Research\",\n    \"status\": \"Done\",\n    \"target\": \"29\",\n    \"limit\": \"32\",\n    \"reviewer\": \"Sophia Martinez\"\n  },\n  {\n    \"id\": 31,\n    \"header\": \"Competitor Comparison\",\n    \"type\": \"Research\",\n    \"status\": \"In Process\",\n    \"target\": \"21\",\n    \"limit\": \"19\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 32,\n    \"header\": \"Maintenance Plan\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"16\",\n    \"limit\": \"23\",\n    \"reviewer\": \"Alex Thompson\"\n  },\n  {\n    \"id\": 33,\n    \"header\": \"User Personas\",\n    \"type\": \"Research\",\n    \"status\": \"In Process\",\n    \"target\": \"27\",\n    \"limit\": \"24\",\n    \"reviewer\": \"Nina Patel\"\n  },\n  {\n    \"id\": 34,\n    \"header\": \"Accessibility Compliance\",\n    \"type\": \"Legal\",\n    \"status\": \"Done\",\n    \"target\": \"18\",\n    \"limit\": \"21\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 35,\n    \"header\": \"Performance Metrics\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"23\",\n    \"limit\": \"26\",\n    \"reviewer\": \"David Kim\"\n  },\n  {\n    \"id\": 36,\n    \"header\": \"Disaster Recovery Plan\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"14\",\n    \"limit\": \"17\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 37,\n    \"header\": \"Third-party Integrations\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"25\",\n    \"limit\": \"28\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 38,\n    \"header\": \"User Feedback Summary\",\n    \"type\": \"Research\",\n    \"status\": \"Done\",\n    \"target\": \"20\",\n    \"limit\": \"15\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 39,\n    \"header\": \"Localization Strategy\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"12\",\n    \"limit\": \"19\",\n    \"reviewer\": \"Maria Garcia\"\n  },\n  {\n    \"id\": 40,\n    \"header\": \"Mobile Compatibility\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"28\",\n    \"limit\": \"31\",\n    \"reviewer\": \"James Wilson\"\n  },\n  {\n    \"id\": 41,\n    \"header\": \"Data Migration Plan\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"19\",\n    \"limit\": \"22\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 42,\n    \"header\": \"Quality Assurance Protocols\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"30\",\n    \"limit\": \"33\",\n    \"reviewer\": \"Priya Singh\"\n  },\n  {\n    \"id\": 43,\n    \"header\": \"Stakeholder Analysis\",\n    \"type\": \"Research\",\n    \"status\": \"In Process\",\n    \"target\": \"11\",\n    \"limit\": \"14\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 44,\n    \"header\": \"Environmental Impact Assessment\",\n    \"type\": \"Research\",\n    \"status\": \"Done\",\n    \"target\": \"24\",\n    \"limit\": \"27\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 45,\n    \"header\": \"Intellectual Property Rights\",\n    \"type\": \"Legal\",\n    \"status\": \"In Process\",\n    \"target\": \"17\",\n    \"limit\": \"20\",\n    \"reviewer\": \"Sarah Johnson\"\n  },\n  {\n    \"id\": 46,\n    \"header\": \"Customer Support Framework\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"22\",\n    \"limit\": \"25\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 47,\n    \"header\": \"Version Control Strategy\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"15\",\n    \"limit\": \"18\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 48,\n    \"header\": \"Continuous Integration Pipeline\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"26\",\n    \"limit\": \"29\",\n    \"reviewer\": \"Michael Chen\"\n  },\n  {\n    \"id\": 49,\n    \"header\": \"Regulatory Compliance\",\n    \"type\": \"Legal\",\n    \"status\": \"In Process\",\n    \"target\": \"13\",\n    \"limit\": \"16\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 50,\n    \"header\": \"User Authentication System\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"28\",\n    \"limit\": \"31\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 51,\n    \"header\": \"Data Analytics Framework\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"21\",\n    \"limit\": \"24\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 52,\n    \"header\": \"Cloud Infrastructure\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"16\",\n    \"limit\": \"19\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 53,\n    \"header\": \"Network Security Measures\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"29\",\n    \"limit\": \"32\",\n    \"reviewer\": \"Lisa Wong\"\n  },\n  {\n    \"id\": 54,\n    \"header\": \"Project Timeline\",\n    \"type\": \"Planning\",\n    \"status\": \"Done\",\n    \"target\": \"14\",\n    \"limit\": \"17\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 55,\n    \"header\": \"Resource Allocation\",\n    \"type\": \"Planning\",\n    \"status\": \"In Process\",\n    \"target\": \"27\",\n    \"limit\": \"30\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 56,\n    \"header\": \"Team Structure and Roles\",\n    \"type\": \"Planning\",\n    \"status\": \"Done\",\n    \"target\": \"20\",\n    \"limit\": \"23\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 57,\n    \"header\": \"Communication Protocols\",\n    \"type\": \"Planning\",\n    \"status\": \"In Process\",\n    \"target\": \"15\",\n    \"limit\": \"18\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 58,\n    \"header\": \"Success Metrics\",\n    \"type\": \"Planning\",\n    \"status\": \"Done\",\n    \"target\": \"30\",\n    \"limit\": \"33\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 59,\n    \"header\": \"Internationalization Support\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"23\",\n    \"limit\": \"26\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 60,\n    \"header\": \"Backup and Recovery Procedures\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"18\",\n    \"limit\": \"21\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 61,\n    \"header\": \"Monitoring and Alerting System\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"25\",\n    \"limit\": \"28\",\n    \"reviewer\": \"Daniel Park\"\n  },\n  {\n    \"id\": 62,\n    \"header\": \"Code Review Guidelines\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"12\",\n    \"limit\": \"15\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 63,\n    \"header\": \"Documentation Standards\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"27\",\n    \"limit\": \"30\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 64,\n    \"header\": \"Release Management Process\",\n    \"type\": \"Planning\",\n    \"status\": \"Done\",\n    \"target\": \"22\",\n    \"limit\": \"25\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 65,\n    \"header\": \"Feature Prioritization Matrix\",\n    \"type\": \"Planning\",\n    \"status\": \"In Process\",\n    \"target\": \"19\",\n    \"limit\": \"22\",\n    \"reviewer\": \"Emma Davis\"\n  },\n  {\n    \"id\": 66,\n    \"header\": \"Technical Debt Assessment\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"24\",\n    \"limit\": \"27\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 67,\n    \"header\": \"Capacity Planning\",\n    \"type\": \"Planning\",\n    \"status\": \"In Process\",\n    \"target\": \"21\",\n    \"limit\": \"24\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 68,\n    \"header\": \"Service Level Agreements\",\n    \"type\": \"Legal\",\n    \"status\": \"Done\",\n    \"target\": \"26\",\n    \"limit\": \"29\",\n    \"reviewer\": \"Assign reviewer\"\n  }\n]\n"
    },
    "lib": {
      "@/registry/view/dashboard-3/lib/utils.ts": "// this for formatting the price in the product overview page for your country currency \r\nexport const formatPrice = (price: number) => {\r\n    const formatter = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"EGP\",\r\n        useGrouping: false,\r\n    });\r\n    return formatter.format(price);\r\n};\r\n"
    },
    "context": {},
    "hooks": {},
    "@/registry/view/dashboard-3/page": "\nimport { SidebarInset, SidebarProvider } from \"@/components/ui/sidebar\"\nimport { AppSidebar } from \"./components/app-sidebar\"\nimport { ChartAreaInteractive } from \"./components/chart-area-interactive\"\nimport { DataTable } from \"./components/data-table\"\nimport { SectionCards } from \"./components/section-cards\"\nimport { SiteHeader } from \"./components/site-header\"\nimport data from \"./constant/data.json\"\n\nexport default function DashboardPage() {\n  return (\n    <SidebarProvider>\n      <AppSidebar variant=\"inset\" />\n      <SidebarInset className=\"container\">\n        <SiteHeader />\n        <div className=\"flex flex-1 flex-col\">\n          <div className=\"flex flex-1 flex-col gap-2\">\n            <div className=\"flex flex-col gap-4 py-4 md:gap-6 md:py-6\">\n              <SectionCards />\n              <div className=\"px-4 lg:px-6\">\n                <ChartAreaInteractive />\n              </div>\n              <DataTable data={data} />\n            </div>\n          </div>\n        </div>\n      </SidebarInset>\n    </SidebarProvider>\n  )\n}\n"
  },
  "expanded-gallery-1": {
    "components": {
      "@/registry/view/expanded-gallery-1/components/expanded-gallery": "\"use client\"\r\n\r\nimport { useIsMobile } from \"@/hooks/use-mobile\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { AnimatePresence, motion } from \"framer-motion\"\r\nimport Image from \"next/image\"\r\nimport type React from \"react\"\r\n\r\ninterface ExpandableGalleryProps {\r\n    id: string\r\n    imgUrl: string\r\n    title: string\r\n    index: number\r\n    active: string\r\n    handleActive: (id: string) => void\r\n    description?: string\r\n}\r\n\r\nconst ExpandableGallery: React.FC<ExpandableGalleryProps> = ({\r\n    id,\r\n    imgUrl,\r\n    title,\r\n    index,\r\n    active,\r\n    handleActive,\r\n    description = \"\",\r\n}) => {\r\n    const isMobile = useIsMobile()\r\n    const isActive = active === id\r\n\r\n    const itemVariants = {\r\n        initial: {\r\n            opacity: 0,\r\n            y: 20,\r\n        },\r\n        animate: {\r\n            opacity: 1,\r\n            y: 0,\r\n            transition: {\r\n                duration: 0.7,\r\n                ease: [0.16, 1, 0.3, 1], \r\n                delay: isMobile ? index * 0.08 : index * 0.12,\r\n            },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            variants={itemVariants}\r\n            className={cn(\r\n                \"relative flex items-center justify-center min-w-[120px] xs:min-w-[150px]\",\r\n                \"transition-all duration-500 ease-out cursor-pointer overflow-hidden\",\r\n                \"h-[280px] xs:h-[320px] sm:h-[420px] md:h-[520px] lg:h-[580px]\", \r\n                isActive\r\n                    ? \"flex-[10] sm:flex-[8] md:flex-[6] lg:flex-[3.5]\"\r\n                    : \"flex-[1.2] sm:flex-[1.3] md:flex-[1.4] lg:flex-[0.2]\",\r\n                \"rounded-xl md:rounded-2xl\", \r\n                \"shadow-[0_2px_10px_rgba(0,0,0,0.08)]\",\r\n                \"hover:shadow-[0_4px_20px_rgba(0,0,0,0.12)]\", \r\n            )}\r\n            onClick={() => handleActive(id)}\r\n            layout\r\n        >\r\n            <motion.div\r\n                className=\"absolute inset-0 z-10\"\r\n                initial={false}\r\n                animate={{\r\n                    background: isActive\r\n                        ? \"linear-gradient(to top, rgba(0,0,0,0.45) 0%, rgba(0,0,0,0.15) 35%, rgba(0,0,0,0) 65%)\"\r\n                        : \"linear-gradient(to top, rgba(0,0,0,0.35) 0%, rgba(0,0,0,0.08) 50%, rgba(0,0,0,0) 100%)\",\r\n                }}\r\n                transition={{ duration: 0.6, ease: [0.16, 1, 0.3, 1] }}\r\n            />\r\n            <motion.div\r\n                className=\"absolute inset-0\"\r\n                transition={{ duration: 0.7, ease: [0.16, 1, 0.3, 1] }}\r\n            >\r\n                <Image\r\n                    fill\r\n                    src={imgUrl || \"/placeholder.svg\"}\r\n                    alt={title}\r\n                    className={cn(\r\n                        \"object-cover\"\r\n                    )}\r\n                    sizes=\"(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw\"\r\n                    priority={index < 2}\r\n                />\r\n            </motion.div>\r\n            <AnimatePresence>\r\n                {!isActive ? (\r\n                    <motion.div\r\n                        key={`title-${id}`}\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        exit={{ opacity: 0 }}\r\n                        transition={{ duration: 0.4 }}\r\n                        className={cn(\r\n                            \"absolute z-20\",\r\n                            \"bottom-5 left-5 text-[16px] xs:text-[17px] sm:text-[18px]\",\r\n                            \"lg:text-[20px] lg:bottom-20 lg:rotate-[-90deg] lg:origin-[0,0]\",\r\n                            \"font-medium tracking-tight text-white\",\r\n                            \"drop-shadow-sm\",\r\n                        )}\r\n                    >\r\n                        {title}\r\n                    </motion.div>\r\n                ) : (\r\n                    <motion.div\r\n                        key={`content-${id}`}\r\n                        initial={{ opacity: 0, y: 20 }}\r\n                        animate={{ opacity: 1, y: 0 }}\r\n                        exit={{ opacity: 0, y: 10 }}\r\n                        transition={{ duration: 0.5, ease: [0.16, 1, 0.3, 1] }}\r\n                        className={cn(\r\n                            \"absolute bottom-0 w-full z-20\",\r\n                            \"p-5 xs:p-6 sm:p-6\", \r\n                            \"flex justify-start flex-col\",\r\n                            \"backdrop-blur-[8px] bg-black/30\",\r\n                        )}\r\n                    >\r\n                        <h2\r\n                            className={cn(\r\n                                \"font-medium text-[20px] xs:text-[22px] sm:text-[24px] md:text-[28px]\",\r\n                                \"text-white mb-2 tracking-tight leading-tight\",\r\n                            )}\r\n                        >\r\n                            {title}\r\n                        </h2>\r\n                        {description && (\r\n                            <p\r\n                                className={cn(\r\n                                    \"text-white/90 text-sm sm:text-base\",\r\n                                    \"max-w-md font-light leading-relaxed\",\r\n                                    \"line-clamp-3 sm:line-clamp-none\",\r\n                                )}\r\n                            >\r\n                                {description}\r\n                            </p>\r\n                        )}\r\n                    </motion.div>\r\n                )}\r\n            </AnimatePresence>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default ExpandableGallery\r\n"
    },
    "constant": {
      "@/registry/view/expanded-gallery-1/constant/index.ts": "export const galleryItems = [\r\n    {\r\n        id: \"shadcn\",\r\n        imgUrl: \"/blocks/case-studies-1/image-1.jpg\",\r\n        title: \"Modern Component Library\",\r\n        description: \"Explore how shadcn/ui revolutionized React component development\",\r\n    },\r\n    {\r\n        id: \"tailwind\",\r\n        imgUrl: \"/blocks/case-studies-1/image-2.jpg\",\r\n        title: \"The Utility-First Revolution\",\r\n        description: \"A traditional spread of delicious dishes prepared for the evening meal during Ramadan.\"\r\n    },\r\n    {\r\n        id: \"astro\",\r\n        imgUrl: \"/blocks/case-studies-1/image-3.jpg\",\r\n        title: \"The All-in-One Web Framework\",\r\n        description: \"Learn how Astro's innovative 'Islands Architecture' and zero-JS approach\",\r\n    },\r\n    {\r\n        id: \"react\",\r\n        imgUrl: \"/blocks/case-studies-1/image-4.jpg\",\r\n        title: \"Pioneering Component-Based UI\",\r\n        description: \"See how React continues to shape modern web development with its component model\",\r\n    },\r\n    {\r\n        id: \"nextjs\",\r\n        imgUrl: \"/blocks/case-studies-1/image-5.jpg\",\r\n        title: \"The React Framework\",\r\n        description: \"Explore how Next.js has become the go-to framework for React applications\",\r\n    },\r\n];"
    },
    "lib": {
      "@/registry/view/expanded-gallery-1/lib/motion.ts": "export const fadeIn = (delay = 0, duration = 0.5) => ({\r\n    hidden: {\r\n        opacity: 0\r\n    },\r\n    show: {\r\n        opacity: 1,\r\n        transition: {\r\n            delay,\r\n            duration,\r\n            ease: \"easeOut\",\r\n        },\r\n    },\r\n});"
    },
    "context": {},
    "hooks": {},
    "@/registry/view/expanded-gallery-1/page": "\"use client\"\r\n\r\nimport Container from \"@/components/Container\"\r\nimport { useIsMobile } from \"@/hooks/use-mobile\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { motion } from \"framer-motion\"\r\nimport { useState } from \"react\"\r\nimport ExpandableGallery from \"./components/expanded-gallery\"\r\nimport { galleryItems } from \"./constant\"\r\n\r\nexport default function GalleryPage() {\r\n    const [active, setActive] = useState(\"shadcn\")\r\n    const isMobile = useIsMobile()\r\n\r\n    const containerVariants = {\r\n        initial: { opacity: 0 },\r\n        animate: {\r\n            opacity: 1,\r\n            transition: {\r\n                duration: 0.8,\r\n                ease: [0.16, 1, 0.3, 1],\r\n                staggerChildren: 0.08,\r\n            },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen py-8 sm:py-12 md:py-16 bg-[#f5f5f7]\">\r\n            <Container className=\"max-w-[1200px] px-4 sm:px-6 md:px-8\">\r\n                {\" \"}\r\n                <motion.div\r\n                    initial=\"initial\"\r\n                    animate=\"animate\"\r\n                    variants={containerVariants}\r\n                    className={cn(\r\n                        \"transition-all duration-700 ease-out\",\r\n                        isMobile\r\n                            ? \"grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-5\" // Reduced gap for better spacing\r\n                            : \"flex flex-row items-center justify-center gap-3 sm:gap-4 md:gap-5\", // Reduced gap for better spacing\r\n                    )}\r\n                >\r\n                    {galleryItems.map((item, index) => (\r\n                        <ExpandableGallery key={item.id} {...item} index={index} active={active} handleActive={setActive} />\r\n                    ))}\r\n                </motion.div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "feature-showcase-1": {
    "components": {
      "@/registry/view/feature-showcase-1/components/feature-showcase": "import { ArrowRight, Box, LayoutGrid, Library } from \"lucide-react\"\r\n\r\nexport default function FeatureShowcase() {\r\n    return (\r\n        <div className=\"py-16 px-4 md:px-8\">\r\n            <div className=\"max-w-7xl mx-auto\">\r\n                <div className=\"mb-8\">\r\n                    <p className=\"text-pink-500 mb-2\">Key highlights</p>\r\n                    <h2 className=\"text-5xl font-bold\">Why Alphabyte only?</h2>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                    <div className=\"border border-zinc-800 p-8 rounded-md\">\r\n                        <div className=\"text-pink-500 mb-4\">\r\n                            <LayoutGrid size={24} />\r\n                        </div>\r\n                        <h3 className=\"text-xl font-semibold mb-3\">Pixel Perfect Layout</h3>\r\n                        <p className=\"text-zinc-400 mb-8\">\r\n                            All the sections are perfectly designed with pixel perfect grids and layouts. Everything you see is\r\n                            responsive for all devices.\r\n                        </p>\r\n                        <div className=\"flex items-center text-zinc-400 hover:text-pink-500 transition-colors cursor-pointer group\">\r\n                            <span className=\"mr-2\">Learn more</span>\r\n                            <ArrowRight size={16} className=\"group-hover:translate-x-1 transition-transform\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"border border-zinc-800 p-8 rounded-md\">\r\n                        <div className=\"text-pink-500 mb-4\">\r\n                            <Box size={24} />\r\n                        </div>\r\n                        <h3 className=\"text-xl font-semibold mb-3\">Editable Components</h3>\r\n                        <p className=\"text-zinc-400 mb-8\">\r\n                            With the help of Framer variables, everything is under you control. Just click the component and start\r\n                            changing everything but not anything.\r\n                        </p>\r\n                        <div className=\"flex items-center text-pink-500 hover:text-pink-400 transition-colors cursor-pointer group\">\r\n                            <span className=\"mr-2\">Learn more</span>\r\n                            <ArrowRight size={16} className=\"group-hover:translate-x-1 transition-transform\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"border border-zinc-800 p-8 rounded-md\">\r\n                        <div className=\"text-pink-500 mb-4\">\r\n                            <Library size={24} />\r\n                        </div>\r\n                        <h3 className=\"text-xl font-semibold mb-3\">Scalable Library</h3>\r\n                        <p className=\"text-zinc-400 mb-8\">\r\n                            Since each component is custom made, you can easily scale you library with new components, icons, colors,\r\n                            etc.\r\n                        </p>\r\n                        <div className=\"flex items-center text-zinc-400 hover:text-pink-500 transition-colors cursor-pointer group\">\r\n                            <span className=\"mr-2\">Learn more</span>\r\n                            <ArrowRight size={16} className=\"group-hover:translate-x-1 transition-transform\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/feature-showcase-1/page": "import FeatureShowcase from \"./components/feature-showcase\";\r\n\r\n\r\nexport default function Page() {\r\n    return (\r\n        <div className=\"h-screen  py-10 md:py-16 lg:py-20\">\r\n            <FeatureShowcase />\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "login-1": {
    "components": {
      "@/registry/view/login-1/components/login-form": "\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { Button } from \"@/components/library/button\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/library/card\"\r\nimport { Input } from \"@/components/library/input\"\r\nimport { Label } from \"@/components/library/label\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport Link from \"next/link\"\r\nimport { useState } from \"react\"\r\nimport { FcGoogle } from \"react-icons/fc\"\r\nimport { FiEye, FiEyeOff } from \"react-icons/fi\"\r\n\r\nexport function LoginForm({ className, ...props }: React.ComponentPropsWithoutRef<\"div\">) {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword)\r\n    }\r\n\r\n    return (\r\n        <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle className=\"text-2xl\">Login</CardTitle>\r\n                    <CardDescription>Enter your email below to login to your account</CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <form>\r\n                        <div className=\"flex flex-col gap-6\">\r\n                            <div className=\"grid gap-2\">\r\n                                <Label htmlFor=\"email\">Email</Label>\r\n                                <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\r\n                            </div>\r\n                            <div className=\"grid gap-2\">\r\n                                <div className=\"flex items-center\">\r\n                                    <Label htmlFor=\"password\">Password</Label>\r\n                                    <a href=\"#\" className=\"ml-auto inline-block text-sm underline-offset-4 hover:underline\">\r\n                                        Forgot your password?\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"relative\">\r\n                                    <Input id=\"password\" type={showPassword ? \"text\" : \"password\"} required />\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        variant=\"ghost\"\r\n                                        size=\"sm\"\r\n                                        className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                        onClick={togglePasswordVisibility}\r\n                                        aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                                    >\r\n                                        {showPassword ? (\r\n                                            <FiEyeOff className=\"h-4 w-4 text-gray-500\" />\r\n                                        ) : (\r\n                                            <FiEye className=\"h-4 w-4 text-gray-500\" />\r\n                                        )}\r\n                                        <span className=\"sr-only\">{showPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <Button type=\"submit\" className=\"w-full\">\r\n                                Login\r\n                            </Button>\r\n                            <Button variant=\"outline\" className=\"w-full\">\r\n                                <FcGoogle className=\"inline-block text-lg \" />Login with Google\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"mt-4 text-center text-sm\">\r\n                            Don&apos;t have an account?{\" \"}\r\n                            <Link href=\"/view/signup-1\" className=\"underline underline-offset-4\">\r\n                                Sign up\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/login-1/page": "import Container from \"@/components/Container\";\r\nimport { LoginForm } from \"./components/login-form\";\r\n\r\nexport default function LogInPage() {\r\n    return (\r\n        <div className=\"flex min-h-svh w-full items-center justify-center p-6 md:p-10\">\r\n            <Container className=\"w-full max-w-sm\">\r\n                <LoginForm />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "login-2": {
    "components": {
      "@/registry/view/login-2/components/login-form": "import { useState } from \"react\";\r\nimport { Button } from \"@/components/library/button\";\r\nimport { Card, CardContent } from \"@/components/library/card\";\r\nimport { Input } from \"@/components/library/input\";\r\nimport { Label } from \"@/components/library/label\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { ArrowLeft, Eye, EyeOff } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\n\r\nexport function LoginForm({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"div\">) {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const togglePasswordVisibility = () => setShowPassword(prev => !prev);\r\n\r\n  return (\r\n    <div className={cn(\"flex flex-col gap-6 py-12\", className)} {...props}>\r\n      <Link\r\n        href=\"/\"\r\n        className=\"absolute top-4 left-4 text-foreground hover:text-primary transition-colors\"\r\n      >\r\n        <span className=\"flex items-center\">\r\n          <ArrowLeft className=\"mr-2 w-5 h-5\" />\r\n          Back to Home\r\n        </span>\r\n      </Link>\r\n      <Card className=\"overflow-hidden\">\r\n        <CardContent className=\"grid p-0 md:grid-cols-2\">\r\n          <form className=\"p-6 md:p-8\">\r\n            <div className=\"flex flex-col gap-6\">\r\n              <div className=\"flex flex-col items-center text-center\">\r\n                <h1 className=\"text-2xl font-bold\">Welcome back</h1>\r\n                <p className=\"text-balance text-muted-foreground\">\r\n                  Login to your Acme Inc account\r\n                </p>\r\n              </div>\r\n              <div className=\"grid gap-2\">\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                <Input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"m@example.com\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"grid gap-2\">\r\n                <div className=\"flex items-center\">\r\n                  <Label htmlFor=\"password\">Password</Label>\r\n                  <Link\r\n                    href=\"#\"\r\n                    className=\"ml-auto text-sm underline-offset-2 hover:underline\"\r\n                  >\r\n                    Forgot your password?\r\n                  </Link>\r\n                </div>\r\n                <div className=\"relative\">\r\n                  <Input\r\n                    id=\"password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    required\r\n                  />\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                    onClick={togglePasswordVisibility}\r\n                    aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                  >\r\n                    {showPassword ? (\r\n                      <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                    ) : (\r\n                      <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                    )}\r\n                    <span className=\"sr-only\">\r\n                      {showPassword ? \"Hide password\" : \"Show password\"}\r\n                    </span>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              <Button type=\"submit\" className=\"w-full\">\r\n                Login\r\n              </Button>\r\n              <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\r\n                <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\r\n                  Or continue with\r\n                </span>\r\n              </div>\r\n              <div className=\"grid grid-cols-3 gap-4\">\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                    <path\r\n                      d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\r\n                      fill=\"currentColor\"\r\n                    />\r\n                  </svg>\r\n                  <span className=\"sr-only\">Login with Apple</span>\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                    <path\r\n                      d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\r\n                      fill=\"currentColor\"\r\n                    />\r\n                  </svg>\r\n                  <span className=\"sr-only\">Login with Google</span>\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={30} height={30}>\r\n                    <path\r\n                      d=\"M6.915 4.03c-1.968 0-3.683 1.28-4.871 3.113C.704 9.208 0 11.883 0 14.449c0 .706.07 1.369.21 1.973a6.624 6.624 0 0 0 .265.86 5.297 5.297 0 0 0 .371.761c.696 1.159 1.818 1.927 3.593 1.927 1.497 0 2.633-.671 3.965-2.444.76-1.012 1.144-1.626 2.663-4.32l.756-1.339.186-.325c.061.1.121.196.183.3l2.152 3.595c.724 1.21 1.665 2.556 2.47 3.314 1.046.987 1.992 1.22 3.06 1.22 1.075 0 1.876-.355 2.455-.843a3.743 3.743 0 0 0 .81-.973c.542-.939.861-2.127.861-3.745 0-2.72-.681-5.357-2.084-7.45-1.282-1.912-2.957-2.93-4.716-2.93-1.047 0-2.088.467-3.053 1.308-.652.57-1.257 1.29-1.82 2.05-.69-.875-1.335-1.547-1.958-2.056-1.182-.966-2.315-1.303-3.454-1.303zm10.16 2.053c1.147 0 2.188.758 2.992 1.999 1.132 1.748 1.647 4.195 1.647 6.4 0 1.548-.368 2.9-1.839 2.9-.58 0-1.027-.23-1.664-1.004-.496-.601-1.343-1.878-2.832-4.358l-.617-1.028a44.908 44.908 0 0 0-1.255-1.98c.07-.109.141-.224.211-.327 1.12-1.667 2.118-2.602 3.358-2.602zm-10.201.553c1.265 0 2.058.791 2.675 1.446.307.327.737.871 1.234 1.579l-1.02 1.566c-.757 1.163-1.882 3.017-2.837 4.338-1.191 1.649-1.81 1.817-2.486 1.817-.524 0-1.038-.237-1.383-.794-.263-.426-.464-1.13-.464-2.046 0-2.221.63-4.535 1.66-6.088.454-.687.964-1.226 1.533-1.533a2.264 2.264 0 0 1 1.088-.285z\"\r\n                      fill=\"currentColor\"\r\n                    />\r\n                  </svg>\r\n                  <span className=\"sr-only\">Login with Meta</span>\r\n                </Button>\r\n              </div>\r\n              <div className=\"text-center text-sm\">\r\n                Don&apos;t have an account?{' '}\r\n                <Link href=\"#\" className=\"underline underline-offset-4\">\r\n                  Sign up\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <div className=\"flex-1 hidden md:block relative\">\r\n            <img\r\n              src=\"/blocks/case-studies-1/image-1.jpg\"\r\n              alt=\"Art Lighting Showcase\"\r\n              className=\"absolute inset-0 h-full w-full object-cover\"\r\n            />\r\n            <div className=\"absolute inset-0 bg-background/60 backdrop-blur-sm flex flex-col justify-end p-8 text-foreground\">\r\n              <h2 className=\"text-3xl font-bold mb-2\">Join Art Lighting</h2>\r\n              <p className=\"text-sm\">\r\n                Create your account and start illuminating your space\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n      <div className=\"text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:text-primary\">\r\n        By clicking continue, you agree to our <Link href=\"#\">Terms of Service</Link>{' '}\r\n        and <Link href=\"#\">Privacy Policy</Link>.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/login-2/page": "import Container from \"@/components/Container\";\r\nimport { LoginForm } from \"./components/login-form\";\r\n\r\nexport default function LogInPage() {\r\n    return (\r\n        <div className=\"flex min-h-svh flex-col items-center justify-center p-6 md:p-10 bg-gradient-to-br from-primary/20 via-background to-secondary/20\">\r\n            <Container className=\"w-full max-w-sm md:max-w-3xl\">\r\n                <LoginForm />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "login-3": {
    "components": {
      "@/registry/view/login-3/components/login-form": "\"use client\"\r\nimport { Button } from \"@/components/library/button\";\r\nimport { Input } from \"@/components/library/input\";\r\nimport { Label } from \"@/components/library/label\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Eye, EyeOff } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { useState } from \"react\";\r\n\r\nexport function LoginForm({\r\n    className,\r\n    ...props\r\n}: React.ComponentPropsWithoutRef<\"form\">) {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const togglePasswordVisibility = () => setShowPassword(prev => !prev);\r\n\r\n    return (\r\n        <form className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n            <div className=\"flex flex-col items-center gap-2 text-center\">\r\n                <h1 className=\"text-2xl font-bold\">Login to your account</h1>\r\n                <p className=\"text-balance text-sm text-muted-foreground\">\r\n                    Enter your email below to login to your account\r\n                </p>\r\n            </div>\r\n            <div className=\"grid gap-6\">\r\n                <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"email\">Email</Label>\r\n                    <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                    <div className=\"flex items-center\">\r\n                        <Label htmlFor=\"password\">Password</Label>\r\n                        <Link\r\n                            href=\"#\"\r\n                            className=\"ml-auto text-sm underline-offset-2 hover:underline\"\r\n                        >\r\n                            Forgot your password?\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"relative\">\r\n                        <Input\r\n                            id=\"password\"\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            required\r\n                        />\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                            onClick={togglePasswordVisibility}\r\n                            aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                        >\r\n                            {showPassword ? (\r\n                                <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                            ) : (\r\n                                <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                            )}\r\n                            <span className=\"sr-only\">\r\n                                {showPassword ? \"Hide password\" : \"Show password\"}\r\n                            </span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Button type=\"submit\" className=\"w-full\">\r\n                    Login\r\n                </Button>\r\n                <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\r\n                    <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\r\n                        Or continue with\r\n                    </span>\r\n                </div>\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                        <path\r\n                            d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\r\n                            fill=\"currentColor\"\r\n                        />\r\n                    </svg>\r\n                    Login with GitHub\r\n                </Button>\r\n            </div>\r\n            <div className=\"text-center text-sm\">\r\n                Don&apos;t have an account?{\" \"}\r\n                <a href=\"#\" className=\"underline underline-offset-4\">\r\n                    Sign up\r\n                </a>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/login-3/page": "import { GalleryVerticalEnd } from \"lucide-react\"\r\nimport { LoginForm } from \"./components/login-form\"\r\nimport Link from \"next/link\"\r\nexport default function LoginPage() {\r\n    return (\r\n        <div className=\"grid min-h-svh lg:grid-cols-2\">\r\n            <div className=\"flex flex-col gap-4 p-6 md:p-10\">\r\n                <div className=\"flex justify-center gap-2 md:justify-start\">\r\n                    <Link href=\"#\" className=\"flex items-center gap-2 font-medium\">\r\n                        <div className=\"flex h-6 w-6 items-center justify-center rounded-md bg-primary text-primary-foreground\">\r\n                            <GalleryVerticalEnd className=\"size-4\" />\r\n                        </div>\r\n                        UniqueBrand.\r\n                    </Link>\r\n                </div>\r\n                <div className=\"flex flex-1 items-center justify-center\">\r\n                    <div className=\"w-full max-w-xs\">\r\n                        <LoginForm />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"relative hidden bg-muted lg:block\">\r\n                <img\r\n                    src=\"/blocks/case-studies-1/image-1.jpg\"\r\n                    alt=\"Image\"\r\n                    className=\"absolute inset-0 h-full w-full object-cover dark:brightness-[0.2] dark:grayscale\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "login-4": {
    "components": {
      "@/registry/view/login-4/components/login-form": "\"use client\"\r\nimport { Button } from \"@/components/library/button\"\r\nimport { Input } from \"@/components/library/input\"\r\nimport { Label } from \"@/components/library/label\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Eye, EyeOff, GalleryVerticalEnd } from \"lucide-react\"\r\nimport Link from \"next/link\"\r\nimport { useState } from \"react\"\r\n\r\nexport function LoginForm({\r\n    className,\r\n    ...props\r\n}: React.ComponentPropsWithoutRef<\"div\">) {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const togglePasswordVisibility = () => setShowPassword(prev => !prev);\r\n\r\n    return (\r\n        <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n            <form>\r\n                <div className=\"flex flex-col gap-6\">\r\n                    <div className=\"flex flex-col items-center gap-2\">\r\n                        <a\r\n                            href=\"#\"\r\n                            className=\"flex flex-col items-center gap-2 font-medium\"\r\n                        >\r\n                            <div className=\"flex h-8 w-8 items-center justify-center rounded-md\">\r\n                                <GalleryVerticalEnd className=\"size-6\" />\r\n                            </div>\r\n                            <span className=\"sr-only\">Acme Inc.</span>\r\n                        </a>\r\n                        <h1 className=\"text-xl font-bold\">Welcome to Acme Inc.</h1>\r\n                        <div className=\"text-center text-sm\">\r\n                            Don&apos;t have an account?{\" \"}\r\n                            <a href=\"#\" className=\"underline underline-offset-4\">\r\n                                Sign up\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-col gap-6\">\r\n                        <div className=\"grid gap-2\">\r\n                            <Label htmlFor=\"email\">Email</Label>\r\n                            <Input\r\n                                id=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"m@example.com\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"grid gap-2\">\r\n                            <div className=\"flex items-center\">\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Link\r\n                                    href=\"#\"\r\n                                    className=\"ml-auto text-sm underline-offset-2 hover:underline\"\r\n                                >\r\n                                    Forgot your password?\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"relative\">\r\n                                <Input\r\n                                    id=\"password\"\r\n                                    type={showPassword ? \"text\" : \"password\"}\r\n                                    required\r\n                                />\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"ghost\"\r\n                                    size=\"sm\"\r\n                                    className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                    onClick={togglePasswordVisibility}\r\n                                    aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                                >\r\n                                    {showPassword ? (\r\n                                        <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                                    ) : (\r\n                                        <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                                    )}\r\n                                    <span className=\"sr-only\">\r\n                                        {showPassword ? \"Hide password\" : \"Show password\"}\r\n                                    </span>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <Button type=\"submit\" className=\"w-full\">\r\n                            Login\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\r\n                        <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\r\n                            Or\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"grid gap-4 sm:grid-cols-2\">\r\n                        <Button variant=\"outline\" className=\"w-full\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                                <path\r\n                                    d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\r\n                                    fill=\"currentColor\"\r\n                                />\r\n                            </svg>\r\n                            Continue with Apple\r\n                        </Button>\r\n                        <Button variant=\"outline\" className=\"w-full\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                                <path\r\n                                    d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\r\n                                    fill=\"currentColor\"\r\n                                />\r\n                            </svg>\r\n                            Continue with Google\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className=\"text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:text-primary  \">\r\n                By clicking continue, you agree to our <a href=\"#\">Terms of Service</a>{\" \"}\r\n                and <a href=\"#\">Privacy Policy</a>.\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/login-4/page": "import { LoginForm } from \"./components/login-form\";\r\n\r\nexport default function LoginPage() {\r\n    return (\r\n        <div className=\"flex min-h-svh flex-col items-center justify-center gap-6 bg-background p-6 md:p-10\">\r\n            <div className=\"w-full max-w-sm\">\r\n                <LoginForm />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "navbar-1": {
    "components": {
      "@/registry/view/navbar-1/components/navbar": "import Link from \"next/link\"\nimport { Menu } from \"lucide-react\"\n\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n} from \"@/components/ui/navigation-menu\"\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/library/accordion\"\nimport { Button } from \"@/components/library/button\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/library/sheet\"\n\nimport {\n  defaultAuth,\n  defaultLogo,\n  defaultMenu,\n  defaultMobileExtraLinks,\n  MenuItem,\n} from \"../constant\"\n\ninterface NavbarProps {\n  logo?: {\n    url: string\n    alt: string\n    title: string\n  }\n  menu?: MenuItem[]\n  mobileExtraLinks?: {\n    name: string\n    url: string\n  }[]\n  auth?: {\n    login: {\n      text: string\n      url: string\n    }\n    signup: {\n      text: string\n      url: string\n    }\n  }\n}\n\nconst Navbar = ({\n  logo = defaultLogo,\n  menu = defaultMenu,\n  mobileExtraLinks = defaultMobileExtraLinks,\n  auth = defaultAuth,\n}: NavbarProps) => {\n  return (\n    <section className=\"py-4 border-b\">\n      <div className=\"container\">\n        {/* Desktop Navigation */}\n        <nav className=\"hidden justify-between lg:flex\">\n          <div className=\"flex items-center gap-6\">\n            <Link href={logo.url} className=\"flex items-center gap-2\">\n              <span className=\"text-lg font-semibold\">{logo.title}</span>\n            </Link>\n            <NavigationMenu>\n              <NavigationMenuList>\n                {menu.map((item) => renderMenuItem(item))}\n              </NavigationMenuList>\n            </NavigationMenu>\n          </div>\n          <div className=\"flex gap-2\">\n            <Button variant=\"outline\">{auth.login.text}</Button>\n            <Button>{auth.signup.text}</Button>\n          </div>\n        </nav>\n\n        {/* Mobile Navigation */}\n        <div className=\"block lg:hidden\">\n          <div className=\"flex items-center justify-between\">\n            <Link href={logo.url} className=\"flex items-center gap-2\">\n              <span className=\"text-lg font-semibold\">{logo.title}</span>\n            </Link>\n            <Sheet>\n              <SheetTrigger asChild>\n                <Button variant=\"outline\" size=\"icon\">\n                  <Menu className=\"h-5 w-5\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent className=\"overflow-y-auto\">\n                <SheetHeader>\n                  <SheetTitle>\n                    <Link href={logo.url} className=\"flex items-center gap-2\">\n                      <span className=\"text-lg font-semibold\">\n                        {logo.title}\n                      </span>\n                    </Link>\n                  </SheetTitle>\n                </SheetHeader>\n                <div className=\"my-6 flex flex-col gap-6\">\n                  <Accordion type=\"single\" collapsible className=\"w-full\">\n                    {menu.map((item) => renderMobileMenuItem(item))}\n                  </Accordion>\n                  <div className=\"border-t py-4\">\n                    <div className=\"grid grid-cols-2 gap-2\">\n                      {mobileExtraLinks.map((link, idx) => (\n                        <Link\n                          key={idx}\n                          className=\"inline-flex items-center justify-center rounded-md px-4 py-2 text-sm font-medium text-muted-foreground transition-colors hover:bg-muted hover:text-accent-foreground\"\n                          href={link.url}\n                        >\n                          {link.name}\n                        </Link>\n                      ))}\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col gap-3\">\n                    <Button variant=\"outline\">{auth.login.text}</Button>\n                    <Button>{auth.signup.text}</Button>\n                  </div>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nconst renderMenuItem = (item: MenuItem) => {\n  if (item.items) {\n    return (\n      <NavigationMenuItem key={item.title}>\n        <NavigationMenuTrigger>{item.title}</NavigationMenuTrigger>\n        <NavigationMenuContent>\n          <ul className=\"w-80 p-3\">\n            {item.items.map((subItem) => (\n              <li key={subItem.title}>\n                <NavigationMenuLink asChild>\n                  <Link\n                    className=\"flex items-center gap-4 rounded-md p-3 transition-colors hover:bg-muted hover:text-accent-foreground\"\n                    href={subItem.url}\n                  >\n                    {subItem.icon}\n                    <div>\n                      <div className=\"text-sm font-semibold\">\n                        {subItem.title}\n                      </div>\n                      {subItem.description && (\n                        <p className=\"text-sm text-muted-foreground\">\n                          {subItem.description}\n                        </p>\n                      )}\n                    </div>\n                  </Link>\n                </NavigationMenuLink>\n              </li>\n            ))}\n          </ul>\n        </NavigationMenuContent>\n      </NavigationMenuItem>\n    )\n  }\n\n  return (\n    <NavigationMenuItem key={item.title}>\n      <NavigationMenuLink asChild>\n        <Link\n          className=\"group inline-flex items-center rounded-md px-4 py-2 text-sm font-medium transition-colors hover:bg-muted hover:text-accent-foreground\"\n          href={item.url}\n        >\n          {item.title}\n        </Link>\n      </NavigationMenuLink>\n    </NavigationMenuItem>\n  )\n}\n\nconst renderMobileMenuItem = (item: MenuItem) => {\n  if (item.items) {\n    return (\n      <AccordionItem key={item.title} value={item.title} className=\"border-b-0\">\n        <AccordionTrigger className=\"py-2 font-semibold\">\n          {item.title}\n        </AccordionTrigger>\n        <AccordionContent className=\"mt-2 flex flex-col gap-2\">\n          {item.items.map((subItem) => (\n            <Link\n              key={subItem.title}\n              className=\"flex items-center gap-4 rounded-md p-3 transition-colors hover:bg-muted hover:text-accent-foreground\"\n              href={subItem.url}\n            >\n              {subItem.icon}\n              <div>\n                <div className=\"text-sm font-semibold\">{subItem.title}</div>\n                {subItem.description && (\n                  <p className=\"text-sm text-muted-foreground\">\n                    {subItem.description}\n                  </p>\n                )}\n              </div>\n            </Link>\n          ))}\n        </AccordionContent>\n      </AccordionItem>\n    )\n  }\n\n  return (\n    <div key={item.title} className=\"py-2\">\n      <Link className=\"font-semibold\" href={item.url}>\n        {item.title}\n      </Link>\n    </div>\n  )\n}\n\nexport default Navbar\n"
    },
    "constant": {
      "@/registry/view/navbar-1/constant/index": "import { Book, Sunset, Trees, Zap } from \"lucide-react\"\n\nexport interface MenuItem {\n  title: string\n  url: string\n  description?: string\n  icon?: React.ReactNode\n  items?: MenuItem[]\n}\n\nexport const defaultLogo = {\n  url: \"https://uniquebrand.com\",\n  alt: \"UniqueBrand Logo\",\n  title: \"UniqueBrand\",\n}\n\nexport const defaultMenu: MenuItem[] = [\n  { title: \"Dashboard\", url: \"/\" },\n  {\n    title: \"Services\",\n    url: \"#\",\n    items: [\n      {\n        title: \"Web Development\",\n        description: \"Responsive and modern websites\",\n        icon: <Zap className=\"h-5 w-5 shrink-0\" />,\n        url: \"/services/web-development\",\n      },\n      {\n        title: \"Mobile Apps\",\n        description: \"Innovative mobile solutions\",\n        icon: <Sunset className=\"h-5 w-5 shrink-0\" />,\n        url: \"/services/mobile-apps\",\n      },\n      {\n        title: \"UI/UX Design\",\n        description: \"User-centered design experiences\",\n        icon: <Book className=\"h-5 w-5 shrink-0\" />,\n        url: \"/services/library-ux-design\",\n      },\n      {\n        title: \"Consulting\",\n        description: \"Expert advice to grow your business\",\n        icon: <Trees className=\"h-5 w-5 shrink-0\" />,\n        url: \"/services/consulting\",\n      },\n    ],\n  },\n  {\n    title: \"About Us\",\n    url: \"/about\",\n  },\n  {\n    title: \"Contact\",\n    url: \"/contact\",\n  },\n  {\n    title: \"Blog\",\n    url: \"/blog\",\n  },\n]\n\nexport const defaultMobileExtraLinks = [\n  { name: \"Privacy Policy\", url: \"/privacy\" },\n  { name: \"Terms of Use\", url: \"/terms\" },\n  { name: \"Support\", url: \"/support\" },\n  { name: \"Careers\", url: \"/careers\" },\n]\n\nexport const defaultAuth = {\n  login: { text: \"Sign In\", url: \"/login\" },\n  signup: { text: \"Register\", url: \"/register\" },\n}\n"
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/navbar-1/page": "import Navbar from \"./components/navbar\"\n\nconst page = () => {\n  return <Navbar />\n}\n\nexport default page\n"
  },
  "new-collection-1": {
    "components": {
      "@/registry/view/new-collection-1/components/new-collection": "\"use client\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport Link from \"next/link\";\nimport React, { useEffect, useRef } from \"react\";\nimport Container from \"@/components/Container\";\n\ngsap.registerPlugin(ScrollTrigger);\nconst NewCollection = () => {\n  const sectionRef = useRef(null);\n  useEffect(() => {\n    const boxes = sectionRef.current.querySelectorAll(\".animate-box\");\n    boxes.forEach((box) => {\n      const button = box.querySelector(\".animate-button\");\n      const image = box.querySelector(\".animate-image\");\n      const text = box.querySelector(\".animate-text\");\n      const tl = gsap.timeline({\n        scrollTrigger: {\n          trigger: box,\n          start: \"top 80%\",\n          end: \"top 60%\",\n        },\n      });\n      tl.fromTo(\n        button,\n        {\n          opacity: 0,\n          scale: 0.5,\n        },\n        {\n          opacity: 1,\n          scale: 1,\n          duration: 0.5,\n          ease: \"power1.inOut\",\n        },\n      )\n        .fromTo(\n          image,\n          {\n            opacity: 0,\n            y: 20,\n          },\n          {\n            opacity: 1,\n            y: 0,\n            duration: 1,\n          },\n          \"-=0.2\",\n        )\n        .fromTo(\n          text,\n          {\n            opacity: 0,\n            y: 20,\n          },\n          {\n            opacity: 1,\n            y: 0,\n            duration: 1,\n          },\n          \"-=0.5\",\n        );\n    });\n  }, []);\n  return (\n    <section ref={sectionRef} className=\"py-12 md:py-24 lg:py-32 \">\n      <Container>\n        <div className=\"flex md:flex-row flex-col  items-start\">\n          <div className=\"w-full flex justify-between flex-col md:mb-0 mb-20 space-y-3\">\n            <Link className=\"animate-box\" href=\"Collection/spot\">\n              <div className=\"relative\">\n                <img\n                  alt=\"Line Up/Down LED Suspended Lamp\"\n                  className=\"object-cover w-full h-54 md:h-[500px] rounded-lg animate-image\"\n                  src=\"/blocks/new-collection/new-collection-3.jpg\"\n                />\n                <div\n                  className={`py-2 px-4 select-none bg-[linear-gradient(90deg,_transparent_0%,_#ffb96914_90%)] inline-flex w-fit items-center whitespace-nowrap rounded-full border text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent text-secondary dark:text-secondary-foreground absolute top-0 right-0 mt-4 mr-4 shadow-lg backdrop-blur-[6px] overflow-hidden  `}\n                >\n                  <p className=\"overflow-hidden\">NEW</p>\n                </div>\n              </div>\n              <div className=\"my-4 animate-text\">\n                <h2 className=\"text-sm sm:text-lg md:text-xl lg:text-2xl xl:text-3xl text-muted-foreground font-bold uppercase\">\n                  Halo — LED Ring Suspended Lamp\n                </h2>\n                <p className=\"block mt-2 text-sm sm:text-base md:text-lg hover:underline font-medium\">\n                  Discover more\n                </p>\n              </div>\n            </Link>\n            <Link className=\"animate-box\" href=\"Collection/hallo\">\n              <div className=\"relative\">\n                <img\n                  alt=\"Line Up/Down LED Suspended Lamp\"\n                  className=\"object-cover w-full h-55 md:h-[500px] rounded-lg animate-image\"\n                  src=\"/blocks/new-collection/new-collection-2.jpg\"\n                />\n                <div\n                  className={`py-2 px-4 select-none backdrop-blur-sm inline-flex text-[#fff] dark:text-secondary-foreground w-fit items-center whitespace-nowrap rounded-full border text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent text-secondary absolute top-0 right-0 mt-4 mr-4 shadow-lg overflow-hidden`}\n                >\n                  <p className=\"overflow-hidden\">NEW</p>\n                </div>\n              </div>\n              <div className=\"mt-4 animate-text absolute\">\n                <h2 className=\"text-muted-foreground text-sm sm:text-lg md:text-xl lg:text-2xl xl:text-3xl  font-bold uppercase\">\n                  Halo — LED Ring Suspended Lamp\n                </h2>\n                <p className=\"block mt-2 text-sm sm:text-base md:text-lg hover:underline  font-medium\">\n                  Discover more\n                </p>\n              </div>\n            </Link>\n          </div>\n          <Link\n            className=\"w-full animate-box  md:mt-0 md:ml-10\"\n            href=\"Collection/track\"\n          >\n            <div className=\"relative\">\n              <img\n                alt=\"Line Up/Down LED Suspended Lamp\"\n                className=\"object-cover w-full h-auto md:h-[500px] lg:h-[750px] rounded-lg animate-image\"\n                src=\"/blocks/new-collection/new-collection-1.jpg\"\n              />\n              <div\n                className={`py-2 px-4 select-none  bg-[linear-gradient(90deg,_transparent_0%,_#ffb96914_90%)] inline-flex text-[#FFF] dark:text-secondary-foreground w-fit items-center whitespace-nowrap rounded-full border text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent text-secondary absolute top-0 right-0 mt-4 mr-4 shadow-lg backdrop-blur-[6px] overflow-hidden  `}\n              >\n                <p className=\"overflow-hidden\">NEW</p>\n              </div>\n            </div>\n            <div className=\"mt-4 animate-text\">\n              <h2 className=\"text-sm sm:text-lg md:text-xl text-muted-foreground lg:text-2xl xl:text-3xl  font-bold uppercase\">\n                Line — Up/Down LED Suspended Lamp\n              </h2>\n              <p className=\"block mt-2 text-sm sm:text-base md:text-lg hover:underline  font-medium\">\n                Discover more\n              </p>\n            </div>\n          </Link>\n        </div>\n      </Container>\n    </section>\n  );\n};\n\nexport default NewCollection;\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/new-collection-1/page": "import Container from \"@/components/Container\"\nimport NewCollection from \"./components/new-collection\"\n\nconst page = () => {\n  return (\n    <Container>\n      <NewCollection />\n    </Container>\n  )\n}\n\nexport default page\n"
  },
  "product-overview-1": {
    "components": {
      "@/registry/view/product-overview-1/components/discounted-price": "import React from \"react\";\r\nimport { formatPrice } from \"../lib/utils\";\r\n\r\ninterface DiscountPriceProps {\r\n    price: number;\r\n    discount: number;\r\n    quantity?: number;\r\n}\r\nconst DiscountPrice: React.FC<DiscountPriceProps> = ({\r\n    price,\r\n    discount,\r\n    quantity = 1,\r\n}) => {\r\n    // here we are using Math.ceil to round up the price to the nearest integer\r\n    // this is because the price is in EGP and we want to avoid decimal values\r\n    let priceIncreasing = Math.ceil(price);\r\n    const discountedPrice = Math.ceil(priceIncreasing * (1 - discount));\r\n    // When using the quantity parameter, please ensure that the shipping price is updated accordingly, as shipping costs depend on the quantity of products ordered.\r\n        // const PriceAfterTimesQuantity = discountedPrice * quantity + shippingPrice + taxPrice * (discountedPrice * quantity);\r\n    const formattedPrice = formatPrice(\r\n        discountedPrice * quantity,\r\n    );\r\n    return (\r\n        <div>\r\n            <p className=\"text-destructive font-semibold\">{formattedPrice}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiscountPrice;\r\n",
      "@/registry/view/product-overview-1/components/normal-price": "import { formatPrice } from \"../lib/utils\";\r\nimport React from \"react\";\r\n\r\ntype ProductPrices = {\r\n    price: number;\r\n    quantity?: number;\r\n};\r\n\r\nconst NormalPrice: React.FC<ProductPrices> = ({\r\n    price,\r\n    quantity = 1,\r\n}) => {\r\n    // here we are using Math.ceil to round up the price to the nearest integer\r\n    // this is because the price is in EGP and we want to avoid decimal values\r\n    const PriceAfterTimesQuantity = price * quantity;\r\n    let normalPrice = Math.ceil(PriceAfterTimesQuantity);\r\n    // If you want to add more parameters to the price like: shippingPrice, taxPrice, etc. \r\n    // you can add it like this: \r\n    // When using the quantity parameter, please ensure that the shipping price is updated accordingly, as shipping costs depend on the quantity of products ordered.\r\n    // const PriceAfterTimesQuantity = normalPrice * quantity + shippingPrice + taxPrice * (normalPrice * quantity);\r\n    const formattedTotalPrice = formatPrice(normalPrice);\r\n    return (\r\n        <div>\r\n            <p>{formattedTotalPrice}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NormalPrice;\r\n",
      "@/registry/view/product-overview-1/components/product-color-temp-button": "\"use client\";\r\n\r\nimport { Button } from \"@/components/library/button\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nexport type ProductColorTemp = \"warm\" | \"cool\" | \"white\";\r\n\r\nexport interface ColorTemperatureOption {\r\n    value: ProductColorTemp;\r\n    label: string;\r\n    icon?: React.ReactNode;\r\n}\r\n\r\nconst DEFAULT_OPTIONS: ColorTemperatureOption[] = [\r\n    { value: \"warm\", label: \"Warm\" },\r\n    { value: \"cool\", label: \"Cool\" },\r\n    { value: \"white\", label: \"White\" },\r\n];\r\n\r\ninterface ColorTemperatureSelectorProps {\r\n    value: ProductColorTemp;\r\n    onValueChange: (newValue: ProductColorTemp) => void;\r\n    options?: ColorTemperatureOption[];\r\n    title?: string;\r\n    disabled?: boolean;\r\n    className?: string;\r\n    buttonClassName?: string;\r\n}\r\n\r\nexport function ColorTemperatureSelector({\r\n    value,\r\n    onValueChange,\r\n    options = DEFAULT_OPTIONS,\r\n    title = \"Color Temperature\",\r\n    disabled = false,\r\n    className,\r\n    buttonClassName,\r\n}: ColorTemperatureSelectorProps) {\r\n    const [selectedValue, setSelectedValue] = useState<ProductColorTemp>(value);\r\n\r\n    useEffect(() => {\r\n        setSelectedValue(value);\r\n    }, [value]);\r\n\r\n    const handleSelectionChange = (newValue: ProductColorTemp) => {\r\n        if (disabled || newValue === selectedValue) return;\r\n\r\n        setSelectedValue(newValue);\r\n        onValueChange(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={cn(\"space-y-2\", className)}>\r\n            {title && <h3 className=\"text-lg font-semibold mb-2\">{title}</h3>}\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n                {options.map((option) => (\r\n                    <Button\r\n                        key={option.value}\r\n                        onClick={() => handleSelectionChange(option.value)}\r\n                        variant={selectedValue === option.value ? \"default\" : \"outline\"}\r\n                        disabled={disabled}\r\n                        className={cn(\r\n                            \"flex items-center justify-center p-0 m-0 rounded-full transition-all duration-200\",\r\n                            selectedValue === option.value\r\n                                ? \"bg-primary text-primary-foreground shadow-lg\"\r\n                                : \"bg-background hover:bg-secondary\",\r\n                            disabled && \"opacity-50 cursor-not-allowed\",\r\n                            buttonClassName\r\n                        )}\r\n                    >\r\n                        {option.label}\r\n                    </Button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n",
      "@/registry/view/product-overview-1/components/product-image-carousel": "\"use client\";\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport Image from \"next/image\";\r\nimport React from \"react\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\ntype ProductImagesProps = {\r\n    productImages: string[];\r\n};\r\n\r\nconst ProductImages: React.FC<ProductImagesProps> = ({ productImages }) => {\r\n    const [currentIndex, setCurrentIndex] = React.useState(0);\r\n    const handleSlideChange = (index: number) => {\r\n        setCurrentIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"relative\">\r\n            <Carousel\r\n                showThumbs={true}\r\n                showStatus={false}\r\n                useKeyboardArrows={true}\r\n                infiniteLoop={false}\r\n                autoPlay={false}\r\n                selectedItem={currentIndex}\r\n                onChange={handleSlideChange}\r\n                className=\"product-carousel\"\r\n                thumbWidth={60}\r\n                renderThumbs={() =>\r\n                    productImages.map((img, index) => (\r\n                        <div key={index} className=\"thumbnail-wrapper h-12 sm:h-14 md:h-16\">\r\n                            <Image\r\n                                src={img}\r\n                                alt={`Thumbnail ${index + 1}`}\r\n                                width={80}\r\n                                height={80}\r\n                                className=\"object-cover rounded-sm thumbnail-image\"\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n                renderArrowPrev={(onClickHandler, hasPrev, label) =>\r\n                    hasPrev && (\r\n                        <button\r\n                            onClick={onClickHandler}\r\n                            title={label}\r\n                            className=\"absolute z-[2] w-8 h-8 sm:w-10 sm:h-10 left-1 sm:left-2 rounded-full bg-gray-50 dark:bg-gray-950 cursor-pointer border-none shadow-md flex items-center justify-center\"\r\n                            style={{\r\n                                top: \"calc(50% - 20px)\",\r\n                            }}\r\n                        >\r\n                            <ChevronLeft className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n                        </button>\r\n                    )\r\n                }\r\n                renderArrowNext={(onClickHandler, hasNext, label) =>\r\n                    hasNext && (\r\n                        <button\r\n                            onClick={onClickHandler}\r\n                            title={label}\r\n                            className=\"absolute z-[2] w-8 h-8 sm:w-10 sm:h-10 right-1 sm:right-2 rounded-full bg-gray-50 dark:bg-gray-950 cursor-pointer border-none shadow-md flex items-center justify-center\"\r\n                            style={{\r\n                                top: \"calc(50% - 20px)\",\r\n                            }}\r\n                        >\r\n                            <ChevronRight className=\"w-4 h-4 sm:w-5 sm:h-5\" />\r\n                        </button>\r\n                    )\r\n                }\r\n            >\r\n                {productImages.map((img, index) => (\r\n                    <div key={index} className=\"w-full aspect-square flex items-center justify-center\">\r\n                        <Image\r\n                            src={img}\r\n                            alt={`Product image ${index + 1}`}\r\n                            width={800}\r\n                            height={800}\r\n                            priority={index === 0}\r\n                            quality={90}\r\n                            className=\"max-h-[60vh] mx-auto rounded-lg\"\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </Carousel>\r\n            <style jsx global>{`\r\n                .carousel .thumbs-wrapper {\r\n                    margin: 10px 0 !important;\r\n                    overflow: hidden;\r\n                }\r\n                \r\n                .carousel .thumbs {\r\n                    padding: 0 !important;\r\n                    display: flex;\r\n                    justify-content: center;\r\n                    gap: 8px;\r\n                }\r\n                \r\n                /* Better spacing on mobile */\r\n                @media (max-width: 640px) {\r\n                    .carousel .thumbs {\r\n                        gap: 4px;\r\n                    }\r\n                    \r\n                    .carousel .thumb {\r\n                        margin-right: 0 !important;\r\n                    }\r\n                }\r\n                \r\n                /* Make sure main image container is responsive */\r\n                .carousel .slide img {\r\n                    max-width: 100%;\r\n                    max-height: 100%;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductImages;",
      "@/registry/view/product-overview-1/components/product-info": "\"use client\";\r\n\r\nimport { Button } from \"@/components/library/button\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { ArrowRight, Minus, Plus, ShoppingCart } from \"lucide-react\";\r\nimport DiscountPrice from \"./discounted-price\";\r\nimport NormalPrice from \"./normal-price\";\r\nimport { ColorTemperatureSelector, ProductColorTemp } from \"./product-color-temp-button\";\r\nimport { ProductIP, ProductIPSelector } from \"./product-ip-buttons\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\ninterface ProductConfigurationPanelProps {\r\n    productName: string;\r\n    productCode?: string;\r\n    description: string;\r\n    displayPrice: number;\r\n    discountPercentage?: number;\r\n    quantity: number;\r\n    onIncreaseQuantity: () => void;\r\n    onDecreaseQuantity: () => void;\r\n    canDecreaseQuantity: boolean;\r\n    showIpSelector: boolean;\r\n    selectedIp: ProductIP;\r\n    onIpChange: (newIp: ProductIP) => void;\r\n    isIpSelectorDisabled?: boolean;\r\n    showColorTempSelector?: boolean;\r\n    selectedColorTemp: ProductColorTemp;\r\n    onColorTempChange: (newColorTemp: ProductColorTemp) => void;\r\n    isColorTempSelectorDisabled?: boolean;\r\n    showLampSelector: boolean;\r\n    isLampSelectorDisabled?: boolean;\r\n    basePriceForLamp?: number;\r\n    hNumberForLamp?: number;\r\n    onAddToCart: () => void;\r\n    isAddToCartLoading: boolean;\r\n    addToCartLabel?: string;\r\n    onOrderNow: () => void;\r\n    isOrderNowLoading: boolean;\r\n    orderNowLabel?: string;\r\n    stockStatus: \"inStock\" | \"outOfStock\" | \"checkAvailability\";\r\n    stockStatusText?: string;\r\n    availabilityCheckCta?: string\r\n}\r\n\r\nexport function ProductConfigurationPanel({\r\n    productName,\r\n    productCode = \"PRODUCT-CODE\",\r\n    description,\r\n    displayPrice,\r\n    discountPercentage,\r\n    quantity,\r\n    onIncreaseQuantity,\r\n    onDecreaseQuantity,\r\n    canDecreaseQuantity,\r\n    showIpSelector,\r\n    selectedIp,\r\n    onIpChange,\r\n    isIpSelectorDisabled,\r\n    showColorTempSelector = true,\r\n    selectedColorTemp,\r\n    onColorTempChange,\r\n    isColorTempSelectorDisabled,\r\n    onAddToCart,\r\n    isAddToCartLoading,\r\n    addToCartLabel = \"Add to Cart\",\r\n    onOrderNow,\r\n    isOrderNowLoading,\r\n    orderNowLabel = \"Order Now\",\r\n    stockStatus,\r\n    stockStatusText = \"In Stock\",\r\n    availabilityCheckCta = \"Check Stores Availability\",\r\n}: ProductConfigurationPanelProps) {\r\n    // State to track IP-related price changes\r\n    const [currentPrice, setCurrentPrice] = useState(displayPrice);\r\n    const [additionalIpCost, setAdditionalIpCost] = useState(0);\r\n\r\n    // Update price when displayPrice or additionalIpCost changes\r\n    useEffect(() => {\r\n        setCurrentPrice(displayPrice + additionalIpCost);\r\n    }, [displayPrice, additionalIpCost]);\r\n\r\n    // Handle IP change with price updates\r\n    const handleIpChange = (newIp: ProductIP, newAdditionalPrice?: number) => {\r\n        onIpChange(newIp);\r\n        if (newAdditionalPrice !== undefined) {\r\n            setAdditionalIpCost(newAdditionalPrice);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full px-2 sm:px-4 lg:ml-0 xl:ml-8 2xl:ml-16\">\r\n            <h1 className=\"text-xl sm:text-2xl md:text-[24px] lg:text-3xl mt-3 lg:mt-5 mb-2 font-bold uppercase\">\r\n                {productCode}\r\n            </h1>\r\n            <p className=\"text-muted-foreground text-sm md:text-base lg:text-lg mb-3\">\r\n                {description}\r\n            </p>\r\n            <div className=\"flex flex-col mb-2 sm:mb-4\">\r\n                <div className={cn(\r\n                    \"grid gap-4 space-x-0 gap-y-4 grid-cols-1 md:grid-cols-2 \",\r\n                )}>\r\n                    {showColorTempSelector && (\r\n                        <ColorTemperatureSelector\r\n                            value={selectedColorTemp}\r\n                            onValueChange={onColorTempChange}\r\n                            disabled={isColorTempSelectorDisabled || isOrderNowLoading || isAddToCartLoading}\r\n                        />\r\n                    )}\r\n                    {showIpSelector && (\r\n                        <ProductIPSelector\r\n                            value={selectedIp}\r\n                            onValueChange={handleIpChange}\r\n                            disabled={isIpSelectorDisabled || isOrderNowLoading || isAddToCartLoading}\r\n                            title=\"Water Resistance (IP)\"\r\n                            basePrice={displayPrice}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className=\"my-3 sm:my-4 flex flex-wrap items-center gap-2 sm:gap-3\">\r\n                {discountPercentage && discountPercentage > 0 ? (\r\n                    <>\r\n                        <span className=\"text-base sm:text-lg font-semibold\">\r\n                            <DiscountPrice\r\n                                price={currentPrice}\r\n                                discount={discountPercentage}\r\n                                quantity={quantity}\r\n                            />\r\n                        </span>\r\n                        <s className=\"text-gray-500 italic text-sm sm:text-base\">\r\n                            <NormalPrice price={currentPrice} quantity={quantity} />\r\n                        </s>\r\n                        <span className=\"text-green-500 font-semibold text-sm sm:text-base\">\r\n                            {discountPercentage * 100}% OFF\r\n                        </span>\r\n                    </>\r\n                ) : (\r\n                    <span className=\"text-base sm:text-lg font-semibold\">\r\n                        <NormalPrice price={currentPrice} quantity={quantity} />\r\n                    </span>\r\n                )}\r\n            </div>\r\n            <div className=\"flex flex-row justify-between items-center w-full mb-3 sm:mb-4 gap-2 sm:gap-0\">\r\n                <button\r\n                    className=\"text-primary text-sm sm:text-base md:text-lg flex items-center hover:underline disabled:text-muted-foreground disabled:no-underline disabled:cursor-not-allowed\"\r\n                    disabled={stockStatus !== 'checkAvailability'}\r\n                >\r\n                    {availabilityCheckCta}\r\n                    <ArrowRight className=\"w-4 h-4 sm:w-5 sm:h-5 ml-1 sm:ml-2\" />\r\n                </button>\r\n                <p className={cn(\r\n                    \"text-sm sm:text-base md:text-lg\",\r\n                    stockStatus === 'inStock' ? \"text-green-400\" : \"text-red-500\"\r\n                )}>\r\n                    {stockStatusText}\r\n                </p>\r\n            </div>\r\n            <div className=\"mt-4 sm:mt-6\">\r\n                <div className=\"flex flex-row items-center gap-3 sm:gap-4 w-full\">\r\n                    <div className=\"flex items-center justify-center w-auto\">\r\n                        <Button\r\n                            size=\"icon\"\r\n                            onClick={onDecreaseQuantity}\r\n                            disabled={!canDecreaseQuantity || isOrderNowLoading || isAddToCartLoading}\r\n                            className=\"w-10 h-10 sm:w-12 sm:h-12 shadow-md hover:shadow-lg transition-shadow bg-gray-950 hover:bg-black dark:bg-gray-100 dark:hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        >\r\n                            <Minus className=\"h-4 w-4 sm:w-5 sm:h-5\" />\r\n                        </Button>\r\n                        <span className=\"text-base sm:text-lg mx-3 sm:mx-4 w-0 sm:w-6 md:w-8 text-center\">{quantity}</span>\r\n                        <Button\r\n                            size=\"icon\"\r\n                            onClick={onIncreaseQuantity}\r\n                            disabled={isOrderNowLoading || isAddToCartLoading}\r\n                            className=\"w-10 h-10 sm:w-12 sm:h-12 shadow-md hover:shadow-lg transition-shadow bg-gray-950 hover:bg-black dark:bg-gray-100 dark:hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        >\r\n                            <Plus className=\"h-4 w-4 sm:w-5 sm:h-5\" />\r\n                        </Button>\r\n                    </div>\r\n                    <Button\r\n                        onClick={onAddToCart}\r\n                        disabled={isAddToCartLoading || isOrderNowLoading || stockStatus !== 'inStock'}\r\n                        className=\"bg-primary text-white px-3 py-2.5 sm:px-4 sm:py-3 text-sm sm:text-base w-full rounded uppercase flex items-center justify-center disabled:opacity-70 disabled:cursor-not-allowed\"\r\n                    >\r\n                        {isAddToCartLoading ? \"Adding...\" : addToCartLabel}\r\n                        {!isAddToCartLoading && (\r\n                            <ShoppingCart className=\"ml-2 w-4 h-4 sm:w-5 sm:h-5\" />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n                <div className=\"mt-3 sm:mt-4\">\r\n                    <button\r\n                        onClick={onOrderNow}\r\n                        disabled={isOrderNowLoading || isAddToCartLoading || stockStatus !== 'inStock'}\r\n                        className={cn(\r\n                            \"border-gray-950 dark:border-gray-50 transition-colors duration-300 bg-gray-50 dark:bg-transparent border-[1.5px] px-3 py-2.5 sm:px-4 sm:py-3 text-sm sm:text-base w-full rounded\",\r\n                            \"hover:bg-black hover:text-white dark:hover:bg-gray-100 dark:hover:text-gray-950 dark:text-gray-100 dark:bg-background\",\r\n                            \"disabled:opacity-70 disabled:cursor-not-allowed disabled:bg-gray-200 disabled:text-gray-500 disabled:hover:bg-gray-200 disabled:hover:text-gray-500\"\r\n                        )}\r\n                    >\r\n                        {isOrderNowLoading ? \"Processing...\" : orderNowLabel}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}",
      "@/registry/view/product-overview-1/components/product-ip-buttons": "\"use client\"\r\n\r\nimport { Button } from \"@/components/library/button\";\r\nimport {\r\n    Tooltip,\r\n    TooltipContent,\r\n    TooltipProvider,\r\n    TooltipTrigger,\r\n} from \"@/components/library/tooltip\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { Droplets } from \"lucide-react\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport type ProductIP = \"IP20\" | \"IP44\" | \"IP54\" | \"IP65\" | \"IP68\";\r\n\r\nconst PRODUCT_IP_OPTIONS_MAP: Record<\r\n    ProductIP,\r\n    { label: string; description: string, increaseOnPricePercent: number }\r\n> = {\r\n    IP20: {\r\n        label: \"IP 20\",\r\n        description: \"Protected against solid objects over 12mm\",\r\n        increaseOnPricePercent: 0\r\n    },\r\n    IP44: {\r\n        label: \"IP 44\",\r\n        description: \"Protected against water splashes from all directions\",\r\n        increaseOnPricePercent: 0.04\r\n    },\r\n    IP54: {\r\n        label: \"IP 54\",\r\n        description: \"Protected against dust and water splashes\",\r\n        increaseOnPricePercent: 0.06\r\n    },\r\n    IP65: {\r\n        label: \"IP 65\",\r\n        description: \"Dust tight and protected against water jets\",\r\n        increaseOnPricePercent: 0.08\r\n    },\r\n    IP68: {\r\n        label: \"IP 68\",\r\n        description: \"Dust tight and protected against long periods of immersion\",\r\n        increaseOnPricePercent: 0.10\r\n    },\r\n};\r\n\r\ninterface ProductIPSelectorProps {\r\n    value: ProductIP;\r\n    onValueChange: (newValue: ProductIP, newPrice?: number) => void;\r\n    title?: string;\r\n    basePrice: number;\r\n    disabled?: boolean;\r\n}\r\n\r\nexport function ProductIPSelector({\r\n    value,\r\n    onValueChange,\r\n    title = \"Water Resistance (IP Rating)\",\r\n    disabled = false,\r\n    basePrice\r\n}: ProductIPSelectorProps) {\r\n    const [selectedIp, setSelectedIp] = useState<ProductIP>(value);\r\n\r\n    useEffect(() => {\r\n        setSelectedIp(value);\r\n    }, [value]);\r\n\r\n    const handleIpChange = (newIp: ProductIP) => {\r\n        if (disabled) return;\r\n        setSelectedIp(newIp);\r\n\r\n        const { increaseOnPricePercent } = PRODUCT_IP_OPTIONS_MAP[newIp];\r\n        const additionalPrice = basePrice * increaseOnPricePercent;\r\n        onValueChange(newIp, additionalPrice);\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-2\">\r\n            {title && (\r\n                <h3 className=\"text-lg font-semibold mb-2\">{title}</h3>\r\n            )}\r\n            <div className=\"grid sm:grid-cols-3 grid-cols-1 gap-2\">\r\n                {Object.entries(PRODUCT_IP_OPTIONS_MAP).map(\r\n                    ([ip, { label, description }]) => (\r\n                        <TooltipProvider key={ip}>\r\n                            <Tooltip>\r\n                                <TooltipTrigger asChild>\r\n                                    <Button\r\n                                        onClick={() => handleIpChange(ip as ProductIP)}\r\n                                        variant={selectedIp === ip ? \"default\" : \"outline\"}\r\n                                        disabled={disabled}\r\n                                        className={cn(\r\n                                            \"flex items-center justify-center w-full rounded-full\",\r\n                                            \"transition-colors duration-150 ease-in-out\",\r\n                                            selectedIp === ip\r\n                                                ? \"bg-primary text-primary-foreground\"\r\n                                                : \"bg-background hover:bg-secondary text-secondary-foreground\",\r\n                                            disabled && \"opacity-50 cursor-not-allowed\"\r\n                                        )}\r\n                                    >\r\n                                        <Droplets className=\"w-4 h-4 mr-1 flex-shrink-0\" />\r\n                                        <span className=\"ml-1 truncate\">{label}</span>\r\n                                    </Button>\r\n                                </TooltipTrigger>\r\n                                <TooltipContent className=\"sm:block hidden font-medium\">\r\n                                    {description}\r\n                                </TooltipContent>\r\n                            </Tooltip>\r\n                        </TooltipProvider>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}"
    },
    "constant": {},
    "lib": {
      "@/registry/view/product-overview-1/lib/utils.ts": "// this for formatting the price in the product overview page for your country currency \r\nexport const formatPrice = (price: number) => {\r\n    const formatter = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"EGP\",\r\n        useGrouping: false,\r\n    });\r\n    return formatter.format(price);\r\n};\r\n"
    },
    "context": {},
    "hooks": {},
    "@/registry/view/product-overview-1/page": "\"use client\";\r\n\r\nimport Container from \"@/components/Container\";\r\nimport { ProductColorTemp } from \"@/registry/view/product-overview-1/components/product-color-temp-button\";\r\nimport ProductImages from \"@/registry/view/product-overview-1/components/product-image-carousel\";\r\nimport { ProductConfigurationPanel } from \"@/registry/view/product-overview-1/components/product-info\";\r\nimport { ProductIP } from \"@/registry/view/product-overview-1/components/product-ip-buttons\";\r\nimport { useState } from \"react\";\r\n\r\ninterface ProductOverviewProps {\r\n    productName: string;\r\n    productCode?: string;\r\n    description: string;\r\n    price: number;\r\n    originalPrice?: number;\r\n    discountPercentage?: number;\r\n    images: string[];\r\n    initialIp?: ProductIP;\r\n    initialColorTemp?: ProductColorTemp;\r\n    stockStatus?: \"inStock\" | \"outOfStock\" | \"checkAvailability\";\r\n    stockStatusText?: string;\r\n    specifications?: { [key: string]: string };\r\n}\r\n\r\nexport default function ProductOverviewPage({\r\n    productName = \"Product Name\",\r\n    productCode = \"PRODUCT-CODE\",\r\n    description = \"Product description goes here. This is a sample product overview page.\",\r\n    price = 99.99,\r\n    discountPercentage = 0.10,\r\n    images = [\r\n        \"/components/product-card-1.png\",\r\n        \"/components/product-card-1.png\",\r\n        \"/components/product-card-1.png\",\r\n    ],\r\n    initialIp = \"IP44\",\r\n    initialColorTemp = \"warm\",\r\n    stockStatus = \"inStock\",\r\n    stockStatusText = \"In Stock\",\r\n    specifications,\r\n}: ProductOverviewProps) {\r\n    const [quantity, setQuantity] = useState<number>(1);\r\n    const [selectedIp, setSelectedIp] = useState<ProductIP>(initialIp);\r\n    const [selectedColorTemp, setSelectedColorTemp] = useState<ProductColorTemp>(initialColorTemp);\r\n    const [isAddingToCart, setIsAddingToCart] = useState<boolean>(false);\r\n    const [isOrdering, setIsOrdering] = useState<boolean>(false);\r\n    const [currentPrice, setCurrentPrice] = useState<number>(price);\r\n\r\n    const handleIncreaseQuantity = () => {\r\n        setQuantity((prev) => prev + 1);\r\n    };\r\n\r\n    const handleDecreaseQuantity = () => {\r\n        if (quantity > 1) {\r\n            setQuantity((prev) => prev - 1);\r\n        }\r\n    };\r\n\r\n    const handleIpChange = (newIp: ProductIP) => {\r\n        setSelectedIp(newIp);\r\n    };\r\n\r\n    const handleAddToCart = () => {\r\n        setIsAddingToCart(true);\r\n        setTimeout(() => {\r\n            console.log(\"Added to cart:\", {\r\n                productName,\r\n                productCode,\r\n                quantity,\r\n                selectedIp,\r\n                selectedColorTemp,\r\n                price: currentPrice,\r\n            });\r\n            setIsAddingToCart(false);\r\n        }, 1000);\r\n    };\r\n\r\n    const handleOrderNow = () => {\r\n        setIsOrdering(true);\r\n        setTimeout(() => {\r\n            console.log(\"Ordered:\", {\r\n                productName,\r\n                productCode,\r\n                quantity,\r\n                selectedIp,\r\n                selectedColorTemp,\r\n                price: currentPrice,\r\n            });\r\n            setIsOrdering(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <div className=\"py-10 md:py-16 lg:py-20 w-full h-full\">\r\n            <Container>\r\n                <div className=\"flex flex-col sm:flex-row gap-4 sm:gap-6 lg:gap-8\">\r\n                    <div className=\"w-full md:w-1/2 lg:w-4/12 mx-auto md:mx-0\">\r\n                        <ProductImages productImages={images} />\r\n                    </div>\r\n                    <div className=\"w-full lg:w-7/12\">\r\n                        <ProductConfigurationPanel\r\n                            productName={productName}\r\n                            productCode={productCode}\r\n                            description={description}\r\n                            displayPrice={price}\r\n                            discountPercentage={discountPercentage}\r\n                            quantity={quantity}\r\n                            onIncreaseQuantity={handleIncreaseQuantity}\r\n                            onDecreaseQuantity={handleDecreaseQuantity}\r\n                            canDecreaseQuantity={quantity > 1}\r\n                            showIpSelector={true}\r\n                            selectedIp={selectedIp}\r\n                            onIpChange={handleIpChange}\r\n                            isIpSelectorDisabled={false}\r\n                            showColorTempSelector={true}\r\n                            selectedColorTemp={selectedColorTemp}\r\n                            onColorTempChange={(newTemp) => setSelectedColorTemp(newTemp)}\r\n                            isColorTempSelectorDisabled={false}\r\n                            showLampSelector={false}\r\n                            onAddToCart={handleAddToCart}\r\n                            isAddToCartLoading={isAddingToCart}\r\n                            onOrderNow={handleOrderNow}\r\n                            isOrderNowLoading={isOrdering}\r\n                            stockStatus={stockStatus}\r\n                            stockStatusText={stockStatusText}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}"
  },
  "products-carousel-1": {
    "components": {
      "@/registry/view/products-carousel-1/components/product-card": "\"use client\"\r\nimport React, { useState } from \"react\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport DiscountPrice from \"@/components/blocks/product-overview-1/discounted-price\";\r\nimport NormalPrice from \"@/components/blocks/product-overview-1/normal-price\";\r\nimport { Badge } from \"@/components/library/badge\";\r\nimport { Truck } from \"lucide-react\";\r\n\r\ninterface Product {\r\n    productId: string;\r\n    productName: string;\r\n    brand?: string;\r\n    price: number;\r\n    productImages: string[];\r\n    productDiscount: number;\r\n    detailsUrl?: string;\r\n    productDescription?: string;\r\n}\r\n\r\ninterface ProductCardProps {\r\n    product: Product;\r\n    showBadge?: boolean;\r\n    showShipping?: boolean;\r\n    onAddToCart?: (productId: string) => void;\r\n    className?: string;\r\n    cardWidth?: string;\r\n    isSignedIn?: boolean;\r\n    onAuthRequired?: () => void;\r\n}\r\n\r\nconst ProductCard: React.FC<ProductCardProps> = ({\r\n    product,\r\n    showBadge = true,\r\n    showShipping = true,\r\n    onAddToCart,\r\n    className = \"\",\r\n    cardWidth = \"max-w-[300px]\",\r\n    isSignedIn = true,\r\n    onAuthRequired,\r\n}) => {\r\n    const [currentIndex, setCurrentIndex] = useState<number>(0);\r\n    const [isClicked, setIsClicked] = useState(false);\r\n\r\n    const handleSlideChange = (index: number) => setCurrentIndex(index);\r\n    const handleDetailsClick = () => setIsClicked(true);\r\n\r\n    const handleAddToCart = () => {\r\n        if (!isSignedIn && onAuthRequired) {\r\n            onAuthRequired();\r\n            return;\r\n        }\r\n        onAddToCart?.(product.productId);\r\n    };\r\n\r\n    return (\r\n        <div className={cn(\"relative select-none\", cardWidth, className)}>\r\n            <div className=\"absolute top-2 left-2 z-10 px-2 py-1 flex items-center gap-2 text-xs text-white bg-[#676769] rounded-tr-md rounded-br-md\">\r\n                <Truck className=\"w-4 h-4\" />\r\n                <span>Fast Shipping</span>\r\n            </div>\r\n            <div className=\"absolute top-0 right-0 z-10\">\r\n                <Badge className=\"rounded-none text-sm bg-red-500 text-white\">\r\n                    {Math.round(product.productDiscount * 100)}% OFF\r\n                </Badge>\r\n            </div>\r\n            <div className=\"flex flex-col overflow-hidden\">\r\n                <div className=\"w-full h-52 relative overflow-hidden\">\r\n                    {product.productImages.length > 0 && (\r\n                        <Carousel\r\n                            showThumbs={false}\r\n                            showStatus={false}\r\n                            useKeyboardArrows\r\n                            infiniteLoop={false}\r\n                            autoPlay={false}\r\n                            selectedItem={currentIndex}\r\n                            onChange={handleSlideChange}\r\n                            renderArrowPrev={(onClick, hasPrev) =>\r\n                                hasPrev && (\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={onClick}\r\n                                        className=\"absolute left-2 top-1/2 -translate-y-1/2 z-10 p-1 bg-white/80 dark:bg-black/30 rounded-full\"\r\n                                    >\r\n                                        <svg\r\n                                            className=\"w-5 h-5 text-gray-800 dark:text-white\"\r\n                                            aria-hidden=\"true\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            fill=\"none\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                        >\r\n                                            <path stroke=\"currentColor\" d=\"m15 19-7-7 7-7\" />\r\n                                        </svg>\r\n                                    </button>\r\n                                )\r\n                            }\r\n                            renderArrowNext={(onClick, hasNext) =>\r\n                                hasNext && (\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        onClick={onClick}\r\n                                        className=\"absolute right-0 top-1/2 -translate-y-1/2 z-10 p-1 bg-white/80 dark:bg-black/30 rounded-full\"\r\n                                    >\r\n                                        <svg\r\n                                            className=\"w-5 h-5 text-gray-800 dark:text-white\"\r\n                                            aria-hidden=\"true\"\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            fill=\"none\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                        >\r\n                                            <path stroke=\"currentColor\" d=\"m9 5 7 7-7 7\" />\r\n                                        </svg>\r\n                                    </button>\r\n                                )\r\n                            }\r\n                        >\r\n                            {product.productImages.map((image, idx) => (\r\n                                <div key={idx} className=\"w-full h-full\">\r\n                                    <Image\r\n                                        src={image}\r\n                                        alt={product.productName}\r\n                                        width={500}\r\n                                        height={300}\r\n                                        quality={90}\r\n                                        className=\"w-full h-full object-cover\"\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </Carousel>\r\n                    )}\r\n                </div>\r\n                <div className=\"mt-1 space-y-2\">\r\n                    <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n                        {product.productName}\r\n                    </h2>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-300 line-clamp-2\">\r\n                        {product.productDescription}\r\n                    </p>\r\n                    <div>\r\n                        {product.productDiscount > 0 ? (\r\n                            <div className=\"flex items-center gap-2\">\r\n                                <span className=\"text-lg text-red-600 font-semibold\">\r\n                                    <DiscountPrice price={product.price} discount={product.productDiscount} />\r\n                                </span>\r\n                                <s className=\"text-gray-500 text-sm\">\r\n                                    <NormalPrice price={product.price} />\r\n                                </s>\r\n                            </div>\r\n                        ) : (\r\n                            <span className=\"text-lg font-medium text-gray-900 dark:text-white\">\r\n                                <NormalPrice price={product.price} />\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"flex gap-2 mt-4\">\r\n                        <Link\r\n                            href={product.detailsUrl || '#'}\r\n                            className={cn(\r\n                                \"flex-1 text-center px-4 py-2 text-sm font-medium border border-gray-800 rounded hover:bg-gray-800 hover:text-white dark:border-gray-200 dark:hover:bg-gray-200 dark:hover:text-gray-800 transition-colors\",\r\n                                isClicked\r\n                                    ? \"bg-gray-800 text-white dark:bg-gray-200 dark:text-gray-800\"\r\n                                    : ''\r\n                            )}\r\n                            onClick={handleDetailsClick}\r\n                        >\r\n                            More Details\r\n                        </Link>\r\n\r\n                        <button\r\n                            onClick={handleAddToCart}\r\n                            className=\"bg-black rounded py-1 px-2 flex items-center justify-center\"\r\n                        >\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                viewBox=\"0 0 576 512\"\r\n                                width={20}\r\n                                height={20}\r\n                                fill=\"white\"\r\n                            >\r\n                                <path d=\"M0 24C0 10.7 10.7 0 24 0H69.5c22 0 41.5 12.8 50.6 32h411c26.3 0 45.5 25 38.6 50.4l-41 152.3c-8.5 31.4-37 53.3-69.5 53.3H170.7l5.4 28.5c2.2 11.3 12.1 19.5 23.6 19.5H488c13.3 0 24 10.7 24 24s-10.7 24-24 24H199.7c-34.6 0-64.3-24.6-70.7-58.5L77.4 54.5c-.7-3.8-4-6.5-7.9-6.5H24C10.7 48 0 37.3 0 24zM128 464a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm336-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCard;",
      "@/registry/view/products-carousel-1/components/product-carousel": "import { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from '@/components/library/carousel'\r\nimport ProductCard from './product-card'\r\nimport { products } from '../constant'\r\n\r\nconst ProductCarousel = () => {\r\n    return (\r\n        <Carousel className=\"w-full\">\r\n            <CarouselContent>\r\n                {products.map((product, index) => (\r\n                    <CarouselItem\r\n                        key={index}\r\n                        className=\"sm:basis-1/2 md:basis-1/3 lg:basis-1/4 xl:basis-1/5\"\r\n                    >\r\n                        <ProductCard\r\n                            product={product}\r\n                            showBadge={true}\r\n                            showShipping={true}\r\n                        />\r\n                    </CarouselItem>\r\n                ))}\r\n            </CarouselContent>\r\n            <CarouselPrevious className=\"ml-9 h-10 w-10 bg-slate-50 text-gray-950\" />\r\n            <CarouselNext className=\"mr-9 h-10 w-10 bg-slate-50 text-gray-950\" />\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel"
    },
    "constant": {
      "@/registry/view/products-carousel-1/constant/index": "export const products = [\r\n    {\r\n        productId: \"product-jy-535-5w\",\r\n        productName: \"Product-JY-535-5W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-535-5w/JY-535-5W (1).png\",\r\n            \"/blocks/product-carousel/jy-535-5w/JY-535-5W (2).png\",\r\n        ],\r\n        productDescription: \"Product-JY-535-5W is a high-quality indoor product with advanced features.\",\r\n        price: 500,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-535-5w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-539-7w\",\r\n        productName: \"Product-JY-539-7W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-539-7w/JY-539-7W (1).png\",\r\n            \"/blocks/product-carousel/jy-539-7w/JY-539-7W (2).png\",\r\n        ],\r\n        productDescription: \"High-performance lighting solution for modern interiors.\",\r\n        price: 750,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-539-7w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-540-7w\",\r\n        productName: \"Product-JY-540-7W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-540-7w/JY-540-7W (1).png\",\r\n            \"/blocks/product-carousel/jy-540-7w/JY-540-7W (2).png\",\r\n        ],\r\n        productDescription: \"Energy efficient lighting with sleek design.\",\r\n        price: 750,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-540-7w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-595-44w\",\r\n        productName: \"Product-JY-595-44W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-595-44w/JY-595-44W (1).png\",\r\n            \"/blocks/product-carousel/jy-595-44w/JY-595-44W (2).png\",\r\n        ],\r\n        productDescription: \"Product-JY-595-44W is a high-quality indoor product with advanced features.\",\r\n        price: 900,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-595-44w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-595-48w\",\r\n        productName: \"Product-JY-595-48W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\"\r\n        ],\r\n        productDescription: \"Product-JY-595-48W is a high-quality indoor product with advanced features.\",\r\n        price: 1100,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-595-48w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-595-48w\",\r\n        productName: \"Product-JY-595-48W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\"\r\n        ],\r\n        productDescription: \"Product-JY-595-48W is a high-quality indoor product with advanced features.\",\r\n        price: 1100,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-595-48w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-595-48w\",\r\n        productName: \"Product-JY-595-48W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\"\r\n        ],\r\n        productDescription: \"Product-JY-595-48W is a high-quality indoor product with advanced features.\",\r\n        price: 1100,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-595-48w\",\r\n    },\r\n    {\r\n        productId: \"product-jy-595-48w\",\r\n        productName: \"Product-JY-595-48W\",\r\n        productImages: [\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\r\n            \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\"\r\n        ],\r\n        productDescription: \"Product-JY-595-48W is a high-quality indoor product with advanced features.\",\r\n        price: 1100,\r\n        productDiscount: 0.1,\r\n        detailsUrl: \"/products/jy-595-48w\",\r\n    },\r\n]"
    },
    "lib": {
      "@/registry/view/products-carousel-1/lib/utils.ts": "// this for formatting the price in the product overview page for your country currency \r\nexport const formatPrice = (price: number) => {\r\n    const formatter = new Intl.NumberFormat(\"en-US\", {\r\n        style: \"currency\",\r\n        currency: \"EGP\",\r\n        useGrouping: false,\r\n    });\r\n    return formatter.format(price);\r\n};\r\n"
    },
    "context": {},
    "hooks": {},
    "@/registry/view/products-carousel-1/page": "import Container from '@/components/Container'\r\nimport ProductCarousel from './components/product-carousel'\r\n\r\nconst page = () => {\r\n    return (\r\n        <div className=\"py-10 md:py-16 lg:py-20\">\r\n            <Container>\r\n                <ProductCarousel />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default page"
  },
  "products-list-1": {
    "components": {
      "@/registry/view/products-list-1/components/product-list": "import { products } from \"@/registry/view/products-list-1/constant\"\r\nimport { MoveLeft, MoveRight } from \"lucide-react\"\r\nimport Image from \"next/image\"\r\nimport Link from \"next/link\"\r\nimport { Sidebar } from \"./sidebar\"\r\nimport Container from \"@/components/Container\"\r\n\r\nexport default function ProductsList() {\r\n    return (\r\n        <Container>\r\n            <div className=\"flex items-center justify-between mb-8 max-w-xl  \">\r\n                <div className=\"space-y-2 \">\r\n                    <h1 className=\"text-3xl font-normal text-neutral-800\">Our Product</h1>\r\n                    <p className=\"text-lg font-light text-muted-foreground \">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Totam ut sequi vitae beatae? Commodi, omnis. Incidunt dolore.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex h-screen border border-border p-2 rounded-lg\">\r\n                <Sidebar />\r\n                <main className=\"flex-1  lg:p-8 p-4 overflow-y-auto hide-scrollbar\">\r\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-6\">\r\n                        {products.map((product) => (\r\n                            <Link\r\n                                href={`/products/${product.id}`}\r\n                                key={product.id}\r\n                                className=\"group rounded-md overflow-hidden transition-all duration-300 hover:opacity-90\">\r\n                                <div className=\"aspect-square relative\">\r\n                                    <Image\r\n                                        src={product.image}\r\n                                        alt={product.name}\r\n                                        fill\r\n                                        className=\"object-cover\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"flex justify-between items-center mt-3 mb-1 px-3\">\r\n                                    <p className=\"lg:text-lg md:text-base sm:text-sm text-neutral-700\">{product.name}</p>\r\n                                    <p className=\"lg:text-lg md:text-base sm:text-sm font-medium text-neutral-700\">\r\n                                        ${product.price}\r\n                                    </p>\r\n                                </div>\r\n                            </Link>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between gap-4 mt-16\">\r\n                        <button className=\"py-3 px-8  rounded-md hover:bg-gray-200 transition-colors\">\r\n                            <MoveLeft size={20} />\r\n                        </button>\r\n                        <div className=\"flex space-x-2\">\r\n                            <span className=\"w-8 h-2 bg-gray-950 rounded-full cursor-pointer\" />\r\n                            <span className=\"w-2 h-2 bg-gray-300 rounded-full cursor-pointer\" />\r\n                            <span className=\"w-2 h-2 bg-gray-300 rounded-full cursor-pointer\" />\r\n                            <span className=\"w-2 h-2 bg-gray-300 rounded-full cursor-pointer\" />\r\n                        </div>\r\n                        <button className=\"py-3 px-8 rounded-md hover:bg-gray-200 transition-colors\">\r\n                            <MoveRight size={20} />\r\n                        </button>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </Container>\r\n    )\r\n}",
      "@/registry/view/products-list-1/components/sidebar": "\"use client\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Armchair, Bath, Bed, Crown, Facebook, Instagram, Layers, Mail, PanelLeftOpen, PanelRightOpen, Sparkles, Star, SwatchBook, TreePine, UtensilsCrossed } from 'lucide-react'\r\nimport Link from \"next/link\"\r\nimport type React from \"react\"\r\nimport { useState, useRef, useCallback } from \"react\"\r\n\r\ninterface SidebarItemProps {\r\n    icon: React.ReactNode\r\n    label: string\r\n    isActive?: boolean\r\n    href: string\r\n}\r\n\r\nconst SidebarItem = ({\r\n    icon,\r\n    label,\r\n    isActive = false,\r\n    href,\r\n}: SidebarItemProps) => {\r\n    return (\r\n        <Link\r\n            href={href}\r\n            className={cn(\r\n                \"flex items-center gap-3 px-4 py-2 rounded-md transition-colors\",\r\n                isActive ? \"bg-primary text-primary-foreground\" : \"hover:bg-accent text-muted-foreground\"\r\n            )}\r\n        >\r\n            <span className=\"w-5 h-5 text-current\">{icon}</span>\r\n            <span className=\"text-sm font-medium\">{label}</span>\r\n        </Link>\r\n    )\r\n}\r\n\r\ninterface SidebarSectionProps {\r\n    title: string\r\n    children: React.ReactNode\r\n}\r\n\r\nconst SidebarSection = ({ title, children }: SidebarSectionProps) => {\r\n    return (\r\n        <div className=\"mt-6 px-4\">\r\n            <h3 className=\"text-xs font-semibold tracking-wider text-gray-300 dark:text-gray-500 mb-2\">\r\n                {title}\r\n            </h3>\r\n            <div className=\"space-y-1\">{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport function Sidebar() {\r\n    const [isOpenSidebar, setIsOpenSidebar] = useState(true);\r\n    const toggleSidebar = useCallback(() => {\r\n        setIsOpenSidebar((prevState) => !prevState)\r\n    }, [])\r\n\r\n    const sidebarVariants = {\r\n        open: {\r\n            width: 280,\r\n            opacity: 1,\r\n            transition: { duration: 0.3 },\r\n        },\r\n        closed: {\r\n            width: 0,\r\n            opacity: 0,\r\n            transition: { duration: 0.3 },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isOpenSidebar && (\r\n                <button\r\n                    onClick={toggleSidebar}\r\n                    aria-label=\"Open sidebar\"\r\n                    className=\"relative top-2 left-0 z-20 p-2 border-r border-border bg-background hover:bg-accent transition-colors flex items-center justify-center\"\r\n                >\r\n                    <PanelLeftOpen className=\"w-5 h-5 text-foreground\" />\r\n                </button>\r\n            )}\r\n            <motion.aside\r\n                initial={isOpenSidebar ? \"open\" : \"closed\"}\r\n                animate={isOpenSidebar ? \"open\" : \"closed\"}\r\n                variants={sidebarVariants}\r\n                className={cn(\"w-64 h-full border-r border-border sticky top-0 flex flex-col\", isOpenSidebar ? \"open\" : \"closed\")}>\r\n                <div className=\"px-6 py-8 flex justify-between items-center border-b border-border\">\r\n                    <h1 className=\"text-xl font-semibold uppercase\">UniqueBrand</h1>\r\n                    {isOpenSidebar && (\r\n                        <button\r\n                            onClick={toggleSidebar}\r\n                            aria-label=\"Close sidebar\"\r\n                            className=\"p-1.5 rounded-md hover:bg-accent transition-colors\"\r\n                        >\r\n                            <PanelRightOpen className=\"w-5 h-5 text-foreground\" />\r\n                        </button>\r\n                    )}\r\n                </div>\r\n                <nav className=\"flex-1 overflow-y-auto hide-scrollbar\">\r\n                    <SidebarSection title=\"\">\r\n                        <SidebarItem\r\n                            icon={<Star size={18} />}\r\n                            label=\"Popular\"\r\n                            isActive\r\n                            href=\"#\"\r\n                        />\r\n                        <SidebarItem\r\n                            icon={<Sparkles size={18} />}\r\n                            label=\"New Collection\"\r\n                            href=\"#\"\r\n                        />\r\n                        <SidebarItem\r\n                            icon={<Armchair size={18} />}\r\n                            label=\"Custom Furniture\"\r\n                            href=\"#\"\r\n                        />\r\n                    </SidebarSection>\r\n                    <SidebarSection title=\"MATERIAL\">\r\n                        <SidebarItem icon={<TreePine size={18} />} label=\"Wood\" href=\"#\" />\r\n                        <SidebarItem icon={<Layers size={18} />} label=\"Glass\" href=\"#\" />\r\n                        <SidebarItem icon={<SwatchBook size={18} />} label=\"Fabric\" href=\"#\" />\r\n                    </SidebarSection>\r\n                    <SidebarSection title=\"PACKAGE\">\r\n                        <SidebarItem icon={<Crown size={18} />} label=\"Brand\" href=\"#\" />\r\n                        <SidebarItem icon={<Bed size={18} />} label=\"Bedroom\" href=\"#\" />\r\n                        <SidebarItem icon={<Bath size={18} />} label=\"Bathroom\" href=\"#\" />\r\n                        <SidebarItem\r\n                            icon={<UtensilsCrossed size={18} />}\r\n                            label=\"Kitchen Sets\"\r\n                            href=\"#\"\r\n                        />\r\n                    </SidebarSection>\r\n                    <SidebarSection title=\"CONTACT\">\r\n                        <SidebarItem\r\n                            icon={<Facebook size={18} />}\r\n                            label=\"Facebook\"\r\n                            href=\"#\"\r\n                        />\r\n                        <SidebarItem\r\n                            icon={<Instagram size={18} />}\r\n                            label=\"Instagram\"\r\n                            href=\"#\"\r\n                        />\r\n                        <SidebarItem icon={<Mail size={18} />} label=\"Email\" href=\"#\" />\r\n                    </SidebarSection>\r\n                </nav>\r\n            </motion.aside>\r\n        </>\r\n    )\r\n}\r\n"
    },
    "constant": {
      "@/registry/view/products-list-1/constant/index": "interface Product {\r\n    id: string\r\n    name: string\r\n    price: number\r\n    image: string\r\n}\r\n\r\n\r\nexport const products: Product[] = [\r\n    {\r\n        id: \"1\",\r\n        name: \"Radiant Glow Lamp\",\r\n        price: 30,\r\n        image: \"/blocks/products-list-1/image-1.jpg\",\r\n    },\r\n    {\r\n        id: \"2\",\r\n        name: \"Breeze Recliner\",\r\n        price: 59,\r\n        image: \"/blocks/products-list-1/image-2.jpg\",\r\n    },\r\n    {\r\n        id: \"3\",\r\n        name: \"Vista Armchair\",\r\n        price: 40,\r\n        image: \"/blocks/products-list-1/image-3.jpg\",\r\n    },\r\n    {\r\n        id: \"4\",\r\n        name: \"Eden Comfort Seat\",\r\n        price: 60,\r\n        image: \"/blocks/products-list-1/image-4.jpg\",\r\n    },\r\n    {\r\n        id: \"5\",\r\n        name: \"Crestwood Chair\",\r\n        price: 59,\r\n        image: \"/blocks/products-list-1/image-5.jpg\",\r\n    },\r\n    {\r\n        id: \"6\",\r\n        name: \"Dining Chair With Arms\",\r\n        price: 45,\r\n        image: \"/blocks/products-list-1/image-6.jpg\",\r\n    },\r\n    {\r\n        id: \"7\",\r\n        name: \"Floor Lamp\",\r\n        price: 50,\r\n        image: \"/blocks/products-list-1/image-7.jpg\",\r\n    },\r\n    {\r\n        id: \"8\",\r\n        name: \"Luxe Lounger\",\r\n        price: 48,\r\n        image: \"/blocks/products-list-1/image-8.jpg\",\r\n    },\r\n    {\r\n        id: \"9\",\r\n        name: \"Outdoor Armchair\",\r\n        price: 47,\r\n        image: \"/blocks/products-list-1/image-9.jpg\",\r\n    },\r\n]"
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/products-list-1/page": "import Container from '@/components/Container'\r\nimport ProductsList from './components/product-list'\r\nconst page = () => {\r\n    return (\r\n        <div className=\"py-10 md:py-16 lg:py-20\">\r\n            <Container>\r\n                <ProductsList />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default page"
  },
  "service-1": {
    "components": {
      "@/registry/view/service-1/components/service": "\"use client\"\n\nimport { useEffect, useRef, useState } from \"react\"\nimport Link from \"next/link\"\nimport gsap from \"gsap\"\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\"\nimport { MoveRight } from \"lucide-react\"\n\nimport Container from \"@/components/Container\"\n\nimport { services } from \"../constant\"\n\ngsap.registerPlugin(ScrollTrigger)\nexport default function Services() {\n  const [activeService, setActiveService] = useState<number>(2)\n  const sectionRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    const ctx = gsap.context(() => {\n      gsap.fromTo(\n        \".service-card\",\n        { y: 50, opacity: 0 },\n        {\n          y: 0,\n          opacity: 1,\n          duration: 0.8,\n          stagger: 0.3,\n          ease: \"power4.out\",\n          scrollTrigger: {\n            trigger: sectionRef.current,\n            start: \"top 80%\",\n            end: \"top 30%\",\n            toggleActions: \"play none none none\",\n          },\n        }\n      )\n    }, sectionRef)\n    return () => ctx.revert()\n  }, [])\n\n  return (\n    <section\n      className=\"bg-background text-foreground py-20 relative overflow-hidden\"\n      ref={sectionRef}\n    >\n      <Container>\n        <span className=\"text-sm uppercase tracking-wider text-muted-foreground\">\n          OUR SERVICES\n        </span>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mt-6\">\n          <div>\n            <h2 className=\"text-4xl md:text-5xl lg:text-6xl font-bold leading-tight\">\n              What <span className=\"text-primary\">Services</span>\n              <br />\n              We&apos;re Offering\n            </h2>\n          </div>\n          <div className=\"hidden lg:block relative\">\n            <p className=\"text-muted-foreground mt-6 max-w-xl leading-6\">\n              We empower businesses to thrive online. Our services enhance\n              online visibility, expand market reach, and boost revenue through\n              effective digital strategies.\n            </p>\n          </div>\n        </div>\n        <div className=\"mt-16 space-y-4 md:space-y-6\">\n          {services.map((service, index) => (\n            <div\n              key={service.title}\n              className={`service-card border-b border-border pb-4 md:pb-6`}\n              onMouseEnter={() => setActiveService(index)}\n            >\n              <div className=\"group flex items-center justify-between cursor-pointer\">\n                <Link href={service.link} className=\"space-y-2 flex-1\">\n                  <h3\n                    className={`text-xl md:text-2xl lg:text-3xl font-medium transition-colors duration-300 ${\n                      activeService === index\n                        ? \"text-foreground\"\n                        : \"text-muted-foreground group-hover:text-foreground\"\n                    }`}\n                  >\n                    {service.title}\n                  </h3>\n                  <p\n                    className={`text-base md:text-lg leading-5 font-normal lg:leading-[1.4] transition-all duration-500 md:max-w-xl max-w-xs overflow-hidden ${\n                      activeService === index\n                        ? \"text-muted-foreground h-auto opacity-100\"\n                        : \"h-0 opacity-0\"\n                    }`}\n                  >\n                    {service.description}\n                  </p>\n                </Link>\n                <MoveRight\n                  className={`w-6 h-6 transition-transform duration-500 ${\n                    activeService === index\n                      ? \"opacity-100 translate-x-0\"\n                      : \"opacity-0 -translate-x-6\"\n                  }`}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </Container>\n    </section>\n  )\n}\n"
    },
    "constant": {
      "@/registry/view/service-1/constant/index": "export const services: Service[] = [\n  {\n    id: \"uiux-design\",\n    link: \"/services/uiux-design\",\n    title: \"UI&UX Design\",\n    subtitle: \"Creating seamless user experiences\",\n    description:\n      \"We specialize in crafting intuitive and visually appealing digital experiences that align with user needs and business goals. Our design process ensures your product stands out while delivering exceptional usability.\",\n    showTags: true,\n    iconColor: \"text-teal-500\",\n  },\n  {\n    id: \"web-development\",\n    link: \"/services/web-development\",\n    title: \"Web Development\",\n    subtitle: \"Building modern, high-performing websites\",\n    description:\n      \"Our team develops high-performance and scalable websites and web applications tailored to meet your business requirements, utilizing the latest technologies and best practices.\",\n    showTags: true,\n    iconColor: \"text-blue-500\",\n  },\n  {\n    id: \"hosting-and-domain\",\n    link: \"/services/hosting-and-domain\",\n    title: \"Hosting & Domain\",\n    subtitle: \"Reliable hosting and domain services\",\n    description:\n      \"Our hosting and domain registration services guarantee reliability, scalability, and security, providing the foundation your online presence needs to thrive.\",\n    showTags: false,\n    iconColor: \"text-yellow-500\",\n  },\n  {\n    id: \"mvp-development\",\n    link: \"/services/mvp\",\n    title: \"MVP Development\",\n    subtitle: \"Bring your ideas to life quickly\",\n    description:\n      \"Our MVP development service enables you to rapidly test market assumptions and gather user feedback with functional, prototype-level solutions designed to scale.\",\n    showTags: true,\n    iconColor: \"text-green-500\",\n  },\n]\n"
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/service-1/page": "import Services from \"./components/service\"\n\nconst page = () => {\n  return <Services />\n}\n\nexport default page\n"
  },
  "signup-1": {
    "components": {
      "@/registry/view/signup-1/components/signup-form": "\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport type React from \"react\"\r\nimport { Button } from \"@/components/library/button\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/library/card\"\r\nimport { Input } from \"@/components/library/input\"\r\nimport { Label } from \"@/components/library/label\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Progress } from \"@/components/library/progress\"\r\nimport Link from \"next/link\"\r\nimport { FcGoogle } from \"react-icons/fc\";\r\nimport { Eye, EyeOff } from \"lucide-react\"\r\nimport Container from \"@/components/Container\"\r\n\r\nexport function SignUpForm({ className, ...props }: React.ComponentPropsWithoutRef<\"div\">) {\r\n    const [password, setPassword] = useState(\"\")\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n    const [passwordStrength, setPasswordStrength] = useState({\r\n        score: 0,\r\n        message: \"Enter a password\",\r\n        color: \"bg-gray-200\",\r\n    })\r\n\r\n    const checkPasswordStrength = (password: string) => {\r\n        // Initialize score\r\n        let score = 0\r\n        let message = \"\"\r\n        let color = \"bg-gray-200\"\r\n\r\n        // Check if password is empty\r\n        if (password.length === 0) {\r\n            return { score: 0, message: \"Enter a password\", color: \"bg-gray-200\" }\r\n        }\r\n\r\n        // Check length\r\n        if (password.length < 8) {\r\n            score += 1\r\n            message = \"Weak - Too short\"\r\n            color = \"bg-red-500\"\r\n        } else {\r\n            score += 2\r\n        }\r\n\r\n        // Check for numbers\r\n        if (/\\d/.test(password)) {\r\n            score += 1\r\n        }\r\n\r\n        // Check for lowercase letters\r\n        if (/[a-z]/.test(password)) {\r\n            score += 1\r\n        }\r\n\r\n        // Check for uppercase letters\r\n        if (/[A-Z]/.test(password)) {\r\n            score += 1\r\n        }\r\n\r\n        // Check for special characters\r\n        if (/[^A-Za-z0-9]/.test(password)) {\r\n            score += 1\r\n        }\r\n\r\n        // Determine strength message and color based on score\r\n        if (score < 3) {\r\n            message = \"Weak\"\r\n            color = \"bg-red-500\"\r\n        } else if (score < 5) {\r\n            message = \"Medium\"\r\n            color = \"bg-yellow-500\"\r\n        } else {\r\n            message = \"Strong\"\r\n            color = \"bg-green-500\"\r\n        }\r\n\r\n        // Normalize score to percentage for progress bar (max score is 6)\r\n        const normalizedScore = Math.min(Math.floor((score / 6) * 100), 100)\r\n\r\n        return { score: normalizedScore, message, color }\r\n    }\r\n\r\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newPassword = e.target.value\r\n        setPassword(newPassword)\r\n        setPasswordStrength(checkPasswordStrength(newPassword))\r\n    }\r\n\r\n    const togglePasswordVisibility = () => {\r\n        setShowPassword(!showPassword)\r\n    }\r\n\r\n    const toggleConfirmPasswordVisibility = () => {\r\n        setShowConfirmPassword(!showConfirmPassword)\r\n    }\r\n\r\n    return (\r\n        <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n            <Container>\r\n                <Card>\r\n                    <CardHeader>\r\n                        <CardTitle className=\"text-2xl\">Sign Up</CardTitle>\r\n                        <CardDescription>Create an account to get started</CardDescription>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <form>\r\n                            <div className=\"flex flex-col gap-6\">\r\n                                <div className=\"grid gap-2\">\r\n                                    <Label htmlFor=\"name\">Full Name</Label>\r\n                                    <Input id=\"name\" type=\"text\" placeholder=\"John Doe\" required />\r\n                                </div>\r\n                                <div className=\"grid gap-2\">\r\n                                    <Label htmlFor=\"email\">Email</Label>\r\n                                    <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\r\n                                </div>\r\n                                <div className=\"grid gap-2\">\r\n                                    <Label htmlFor=\"password\">Password</Label>\r\n                                    <div className=\"relative\">\r\n                                        <Input\r\n                                            id=\"password\"\r\n                                            type={showPassword ? \"text\" : \"password\"}\r\n                                            value={password}\r\n                                            onChange={handlePasswordChange}\r\n                                            required\r\n                                        />\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            variant=\"ghost\"\r\n                                            size=\"icon\"\r\n                                            className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                            onClick={togglePasswordVisibility}\r\n                                            aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                                        >\r\n                                            {showPassword ? (\r\n                                                <EyeOff className=\"h-4 w-4 text-gray-500\" />\r\n                                            ) : (\r\n                                                <Eye className=\"h-4 w-4 text-gray-500\" />\r\n                                            )}\r\n                                            <span className=\"sr-only\">{showPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div className=\"mt-2\">\r\n                                        <div className=\"flex items-center justify-between mb-1\">\r\n                                            <span className=\"text-sm\">Password strength:</span>\r\n                                            <span\r\n                                                className={`text-sm font-medium ${passwordStrength.message === \"Weak\"\r\n                                                    ? \"text-red-500\"\r\n                                                    : passwordStrength.message === \"Medium\"\r\n                                                        ? \"text-yellow-500\"\r\n                                                        : passwordStrength.message === \"Strong\"\r\n                                                            ? \"text-green-500\"\r\n                                                            : \"text-gray-500\"\r\n                                                    }`}\r\n                                            >\r\n                                                {passwordStrength.message}\r\n                                            </span>\r\n                                        </div>\r\n                                        <Progress\r\n                                            value={passwordStrength.score}\r\n                                            className=\"h-2\"\r\n                                            indicatorClassName={passwordStrength.color}\r\n                                        />\r\n                                        <p className=\"mt-1 text-xs text-gray-500\">\r\n                                            Use 8+ characters with a mix of letters, numbers & symbols\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"grid gap-2\">\r\n                                    <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\r\n                                    <div className=\"relative\">\r\n                                        <Input id=\"confirmPassword\" type={showConfirmPassword ? \"text\" : \"password\"} required />\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            variant=\"ghost\"\r\n                                            size=\"icon\"\r\n                                            className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                            onClick={toggleConfirmPasswordVisibility}\r\n                                            aria-label={showConfirmPassword ? \"Hide confirm password\" : \"Show confirm password\"}\r\n                                        >\r\n                                            {showConfirmPassword ? (\r\n                                                <EyeOff className=\"h-4 w-4 text-gray-500\" />\r\n                                            ) : (\r\n                                                <Eye className=\"h-4 w-4 text-gray-500\" />\r\n                                            )}\r\n                                            <span className=\"sr-only\">\r\n                                                {showConfirmPassword ? \"Hide confirm password\" : \"Show confirm password\"}\r\n                                            </span>\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                                <Button type=\"submit\" className=\"w-full\">\r\n                                    Sign Up\r\n                                </Button>\r\n                                <Button variant=\"outline\" className=\"w-full\">\r\n                                    <FcGoogle className=\"inline-block \" />Sign Up with Google\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"mt-4 text-center text-sm\">\r\n                                Already have an account?{\" \"}\r\n                                <Link href=\"/ui-blocks/login-1\" className=\"underline underline-offset-4\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </form>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/signup-1/page": "import { SignUpForm } from \"./components/signup-form\";\r\n\r\nexport default function SignUpPage() {\r\n    return (\r\n        <div className=\"flex min-h-svh flex-col items-center justify-center py-10 md:py-16 lg:py-20\">\r\n                <SignUpForm className=\"w-full max-w-md\" />\r\n        </div>\r\n    )\r\n} \r\n"
  },
  "signup-2": {
    "components": {
      "@/registry/view/signup-2/components/signup-1": "\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { useState } from \"react\"\r\nimport { Button } from \"@/components/library/button\"\r\nimport { Card, CardContent } from \"@/components/library/card\"\r\nimport { Input } from \"@/components/library/input\"\r\nimport { Label } from \"@/components/library/label\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { ArrowLeft, Eye, EyeOff } from \"lucide-react\"\r\nimport Link from \"next/link\"\r\n\r\nexport function SignUpForm({ className, ...props }: React.ComponentProps<\"div\">) {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n\r\n    const togglePasswordVisibility = () => setShowPassword((prev) => !prev)\r\n    const toggleConfirmPasswordVisibility = () => setShowConfirmPassword((prev) => !prev)\r\n\r\n    return (\r\n        <div className={cn(\"flex flex-col gap-6 py-12\", className)} {...props}>\r\n            <Link href=\"/\" className=\"absolute top-4 left-4 text-foreground hover:text-primary transition-colors\">\r\n                <span className=\"flex items-center\">\r\n                    <ArrowLeft className=\"mr-2 w-5 h-5\" />\r\n                    Back to Home\r\n                </span>\r\n            </Link>\r\n            <Card className=\"overflow-hidden\">\r\n                <CardContent className=\"grid p-0 md:grid-cols-2\">\r\n                    <form className=\"p-6 md:p-8\">\r\n                        <div className=\"flex flex-col gap-6\">\r\n                            <div className=\"flex flex-col items-center text-center\">\r\n                                <h1 className=\"text-2xl font-bold\">Create an account</h1>\r\n                                <p className=\"text-balance text-muted-foreground\">Sign up for your Acme Inc account</p>\r\n                            </div>\r\n                            <div className=\"grid grid-cols-2 gap-4\">\r\n                                <div className=\"grid gap-2\">\r\n                                    <Label htmlFor=\"firstName\">First Name</Label>\r\n                                    <Input id=\"firstName\" type=\"text\" placeholder=\"John\" required />\r\n                                </div>\r\n                                <div className=\"grid gap-2\">\r\n                                    <Label htmlFor=\"lastName\">Last Name</Label>\r\n                                    <Input id=\"lastName\" type=\"text\" placeholder=\"Doe\" required />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grid gap-2\">\r\n                                <Label htmlFor=\"email\">Email</Label>\r\n                                <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\r\n                            </div>\r\n                            <div className=\"grid gap-2\">\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <div className=\"relative\">\r\n                                    <Input id=\"password\" type={showPassword ? \"text\" : \"password\"} required />\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        variant=\"ghost\"\r\n                                        size=\"sm\"\r\n                                        className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                        onClick={togglePasswordVisibility}\r\n                                        aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                                    >\r\n                                        {showPassword ? (\r\n                                            <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                                        ) : (\r\n                                            <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                                        )}\r\n                                        <span className=\"sr-only\">{showPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"grid gap-2\">\r\n                                <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\r\n                                <div className=\"relative\">\r\n                                    <Input id=\"confirmPassword\" type={showConfirmPassword ? \"text\" : \"password\"} required />\r\n                                    <Button\r\n                                        type=\"button\"\r\n                                        variant=\"ghost\"\r\n                                        size=\"sm\"\r\n                                        className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                        onClick={toggleConfirmPasswordVisibility}\r\n                                        aria-label={showConfirmPassword ? \"Hide password\" : \"Show password\"}\r\n                                    >\r\n                                        {showConfirmPassword ? (\r\n                                            <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                                        ) : (\r\n                                            <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                                        )}\r\n                                        <span className=\"sr-only\">{showConfirmPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <Button type=\"submit\" className=\"w-full\">\r\n                                Sign Up\r\n                            </Button>\r\n                            <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\r\n                                <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">Or continue with</span>\r\n                            </div>\r\n                            <div className=\"grid grid-cols-3 gap-4\">\r\n                                <Button variant=\"outline\" className=\"w-full\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                                        <path\r\n                                            d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\r\n                                            fill=\"currentColor\"\r\n                                        />\r\n                                    </svg>\r\n                                    <span className=\"sr-only\">Sign up with Apple</span>\r\n                                </Button>\r\n                                <Button variant=\"outline\" className=\"w-full\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                                        <path\r\n                                            d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\r\n                                            fill=\"currentColor\"\r\n                                        />\r\n                                    </svg>\r\n                                    <span className=\"sr-only\">Sign up with Google</span>\r\n                                </Button>\r\n                                <Button variant=\"outline\" className=\"w-full\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={30} height={30}>\r\n                                        <path\r\n                                            d=\"M6.915 4.03c-1.968 0-3.683 1.28-4.871 3.113C.704 9.208 0 11.883 0 14.449c0 .706.07 1.369.21 1.973a6.624 6.624 0 0 0 .265.86 5.297 5.297 0 0 0 .371.761c.696 1.159 1.818 1.927 3.593 1.927 1.497 0 2.633-.671 3.965-2.444.76-1.012 1.144-1.626 2.663-4.32l.756-1.339.186-.325c.061.1.121.196.183.3l2.152 3.595c.724 1.21 1.665 2.556 2.47 3.314 1.046.987 1.992 1.22 3.06 1.22 1.075 0 1.876-.355 2.455-.843a3.743 3.743 0 0 0 .81-.973c.542-.939.861-2.127.861-3.745 0-2.72-.681-5.357-2.084-7.45-1.282-1.912-2.957-2.93-4.716-2.93-1.047 0-2.088.467-3.053 1.308-.652.57-1.257 1.29-1.82 2.05-.69-.875-1.335-1.547-1.958-2.056-1.182-.966-2.315-1.303-3.454-1.303zm10.16 2.053c1.147 0 2.188.758 2.992 1.999 1.132 1.748 1.647 4.195 1.647 6.4 0 1.548-.368 2.9-1.839 2.9-.58 0-1.027-.23-1.664-1.004-.496-.601-1.343-1.878-2.832-4.358l-.617-1.028a44.908 44.908 0 0 0-1.255-1.98c.07-.109.141-.224.211-.327 1.12-1.667 2.118-2.602 3.358-2.602zm-10.201.553c1.265 0 2.058.791 2.675 1.446.307.327.737.871 1.234 1.579l-1.02 1.566c-.757 1.163-1.882 3.017-2.837 4.338-1.191 1.649-1.81 1.817-2.486 1.817-.524 0-1.038-.237-1.383-.794-.263-.426-.464-1.13-.464-2.046 0-2.221.63-4.535 1.66-6.088.454-.687.964-1.226 1.533-1.533a2.264 2.264 0 0 1 1.088-.285z\"\r\n                                            fill=\"currentColor\"\r\n                                        />\r\n                                    </svg>\r\n                                    <span className=\"sr-only\">Sign up with Meta</span>\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"text-center text-sm\">\r\n                                Already have an account?{\" \"}\r\n                                <Link href=\"#\" className=\"underline underline-offset-4\">\r\n                                    Login\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"flex-1 hidden md:block relative\">\r\n                        <img\r\n                            src=\"/blocks/case-studies-1/image-1.jpg\"\r\n                            alt=\"Art Lighting Showcase\"\r\n                            className=\"absolute inset-0 h-full w-full object-cover\"\r\n                        />\r\n                        <div className=\"absolute inset-0 bg-background/60 backdrop-blur-sm flex flex-col justify-end p-8 text-foreground\">\r\n                            <h2 className=\"text-3xl font-bold mb-2\">Create Your Art Lighting Account</h2>\r\n                            <p className=\"text-sm\">Sign up today and start exploring our curated collection of lighting solutions</p>\r\n                        </div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <div className=\"text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:text-primary\">\r\n                By clicking sign up, you agree to our <Link href=\"#\">Terms of Service</Link> and{\" \"}\r\n                <Link href=\"#\">Privacy Policy</Link>.\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/signup-2/page": "import Container from '@/components/Container'\r\nimport { SignUpForm } from './components/signup-1'\r\n\r\nconst page = () => {\r\n    return (\r\n        <div className=\"flex min-h-svh flex-col items-center justify-center p-6 md:p-10 bg-gradient-to-br from-primary/20 via-background to-secondary/20\">\r\n            <Container className=\"w-full max-w-sm md:max-w-3xl\">\r\n                <SignUpForm />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default page"
  },
  "signup-3": {
    "components": {
      "@/registry/view/signup-3/components/signup-form": "\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { Button } from \"@/components/library/button\"\r\nimport { Input } from \"@/components/library/input\"\r\nimport { Label } from \"@/components/library/label\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Eye, EyeOff } from \"lucide-react\"\r\nimport Link from \"next/link\"\r\nimport { useState } from \"react\"\r\n\r\nexport function SignupForm({ className, ...props }: React.ComponentPropsWithoutRef<\"form\">) {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n\r\n    const togglePasswordVisibility = () => setShowPassword((prev) => !prev)\r\n    const toggleConfirmPasswordVisibility = () => setShowConfirmPassword((prev) => !prev)\r\n\r\n    return (\r\n        <form className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n            <div className=\"flex flex-col items-center gap-2 text-center\">\r\n                <h1 className=\"text-2xl font-bold\">Create an account</h1>\r\n                <p className=\"text-balance text-sm text-muted-foreground\">Enter your details below to create your account</p>\r\n            </div>\r\n            <div className=\"grid gap-6\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div className=\"grid gap-2\">\r\n                        <Label htmlFor=\"firstName\">First name</Label>\r\n                        <Input id=\"firstName\" type=\"text\" required />\r\n                    </div>\r\n                    <div className=\"grid gap-2\">\r\n                        <Label htmlFor=\"lastName\">Last name</Label>\r\n                        <Input id=\"lastName\" type=\"text\" required />\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"email\">Email</Label>\r\n                    <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"password\">Password</Label>\r\n                    <div className=\"relative\">\r\n                        <Input id=\"password\" type={showPassword ? \"text\" : \"password\"} required />\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                            onClick={togglePasswordVisibility}\r\n                            aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                        >\r\n                            {showPassword ? (\r\n                                <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                            ) : (\r\n                                <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                            )}\r\n                            <span className=\"sr-only\">{showPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid gap-2\">\r\n                    <Label htmlFor=\"confirmPassword\">Confirm password</Label>\r\n                    <div className=\"relative\">\r\n                        <Input id=\"confirmPassword\" type={showConfirmPassword ? \"text\" : \"password\"} required />\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                            onClick={toggleConfirmPasswordVisibility}\r\n                            aria-label={showConfirmPassword ? \"Hide password\" : \"Show password\"}\r\n                        >\r\n                            {showConfirmPassword ? (\r\n                                <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                            ) : (\r\n                                <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                            )}\r\n                            <span className=\"sr-only\">{showConfirmPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Button type=\"submit\" className=\"w-full\">\r\n                    Sign up\r\n                </Button>\r\n                <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\r\n                    <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">Or continue with</span>\r\n                </div>\r\n                <Button variant=\"outline\" className=\"w-full\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                        <path\r\n                            d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\r\n                            fill=\"currentColor\"\r\n                        />\r\n                    </svg>\r\n                    Sign up with GitHub\r\n                </Button>\r\n            </div>\r\n            <div className=\"text-center text-sm\">\r\n                Already have an account?{\" \"}\r\n                <Link href=\"/login\" className=\"underline underline-offset-4\">\r\n                    Login\r\n                </Link>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/signup-3/page": "import { GalleryVerticalEnd } from \"lucide-react\"\r\nimport { SignupForm } from \"./components/signup-form\"\r\nimport Link from \"next/link\"\r\n\r\nexport default function SignupPage() {\r\n    return (\r\n        <div className=\"grid min-h-svh lg:grid-cols-2\">\r\n            <div className=\"flex flex-col gap-4 p-6 md:p-10\">\r\n                <div className=\"flex justify-center gap-2 md:justify-start\">\r\n                    <Link href=\"#\" className=\"flex items-center gap-2 font-medium\">\r\n                        <div className=\"flex h-6 w-6 items-center justify-center rounded-md bg-primary text-primary-foreground\">\r\n                            <GalleryVerticalEnd className=\"size-4\" />\r\n                        </div>\r\n                        UniqueBrand.\r\n                    </Link>\r\n                </div>\r\n                <div className=\"flex flex-1 items-center justify-center\">\r\n                    <div className=\"w-full max-w-xs\">\r\n                        <SignupForm />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"relative hidden bg-muted lg:block\">\r\n                <img\r\n                    src=\"/blocks/case-studies-1/image-1.jpg\"\r\n                    alt=\"Image\"\r\n                    className=\"absolute inset-0 h-full w-full object-cover dark:brightness-[0.2] dark:grayscale\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "signup-4": {
    "components": {
      "@/registry/view/signup-4/components/signup-form": "\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { Button } from \"@/components/library/button\"\r\nimport { Input } from \"@/components/library/input\"\r\nimport { Label } from \"@/components/library/label\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Eye, EyeOff, GalleryVerticalEnd } from \"lucide-react\"\r\nimport { useState } from \"react\"\r\n\r\nexport function SignupForm({ className, ...props }: React.ComponentPropsWithoutRef<\"div\">) {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n\r\n    const togglePasswordVisibility = () => setShowPassword((prev) => !prev)\r\n    const toggleConfirmPasswordVisibility = () => setShowConfirmPassword((prev) => !prev)\r\n\r\n    return (\r\n        <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n            <form>\r\n                <div className=\"flex flex-col gap-6\">\r\n                    <div className=\"flex flex-col items-center gap-2\">\r\n                        <a href=\"#\" className=\"flex flex-col items-center gap-2 font-medium\">\r\n                            <div className=\"flex h-8 w-8 items-center justify-center rounded-md\">\r\n                                <GalleryVerticalEnd className=\"size-6\" />\r\n                            </div>\r\n                            <span className=\"sr-only\">Acme Inc.</span>\r\n                        </a>\r\n                        <h1 className=\"text-xl font-bold\">Create your Acme Inc. account</h1>\r\n                        <div className=\"text-center text-sm\">\r\n                            Already have an account?{\" \"}\r\n                            <a href=\"/login\" className=\"underline underline-offset-4\">\r\n                                Login\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex flex-col gap-6\">\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                            <div className=\"grid gap-2\">\r\n                                <Label htmlFor=\"firstName\">First name</Label>\r\n                                <Input id=\"firstName\" type=\"text\" required />\r\n                            </div>\r\n                            <div className=\"grid gap-2\">\r\n                                <Label htmlFor=\"lastName\">Last name</Label>\r\n                                <Input id=\"lastName\" type=\"text\" required />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid gap-2\">\r\n                            <Label htmlFor=\"email\">Email</Label>\r\n                            <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\r\n                        </div>\r\n                        <div className=\"grid gap-2\">\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <div className=\"relative\">\r\n                                <Input id=\"password\" type={showPassword ? \"text\" : \"password\"} required />\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"ghost\"\r\n                                    size=\"sm\"\r\n                                    className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                    onClick={togglePasswordVisibility}\r\n                                    aria-label={showPassword ? \"Hide password\" : \"Show password\"}\r\n                                >\r\n                                    {showPassword ? (\r\n                                        <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                                    ) : (\r\n                                        <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                                    )}\r\n                                    <span className=\"sr-only\">{showPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"grid gap-2\">\r\n                            <Label htmlFor=\"confirmPassword\">Confirm password</Label>\r\n                            <div className=\"relative\">\r\n                                <Input id=\"confirmPassword\" type={showConfirmPassword ? \"text\" : \"password\"} required />\r\n                                <Button\r\n                                    type=\"button\"\r\n                                    variant=\"ghost\"\r\n                                    size=\"sm\"\r\n                                    className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\r\n                                    onClick={toggleConfirmPasswordVisibility}\r\n                                    aria-label={showConfirmPassword ? \"Hide password\" : \"Show password\"}\r\n                                >\r\n                                    {showConfirmPassword ? (\r\n                                        <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\r\n                                    ) : (\r\n                                        <Eye className=\"h-5 w-5 text-muted-foreground\" />\r\n                                    )}\r\n                                    <span className=\"sr-only\">{showConfirmPassword ? \"Hide password\" : \"Show password\"}</span>\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <Button type=\"submit\" className=\"w-full\">\r\n                            Sign up\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\r\n                        <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">Or</span>\r\n                    </div>\r\n                    <div className=\"grid gap-4 sm:grid-cols-2\">\r\n                        <Button variant=\"outline\" className=\"w-full\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                                <path\r\n                                    d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\r\n                                    fill=\"currentColor\"\r\n                                />\r\n                            </svg>\r\n                            Continue with Apple\r\n                        </Button>\r\n                        <Button variant=\"outline\" className=\"w-full\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                                <path\r\n                                    d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\r\n                                    fill=\"currentColor\"\r\n                                />\r\n                            </svg>\r\n                            Continue with Google\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div className=\"text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:text-primary\">\r\n                By clicking continue, you agree to our <a href=\"#\">Terms of Service</a> and <a href=\"#\">Privacy Policy</a>.\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/signup-4/page": "import { SignupForm } from \"./components/signup-form\";\r\n\r\nexport default function SignUpPage() {\r\n    return (\r\n        <div className=\"flex min-h-svh flex-col items-center justify-center gap-6 bg-background p-6 md:p-10\">\r\n            <div className=\"w-full max-w-sm\">\r\n                <SignupForm />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"
  },
  "timeline-1": {
    "components": {
      "@/registry/view/timeline-1/components/timeline-container": "import { TimeLineData } from \"@/registry/view/timeline-1/constant\";\r\nimport Timeline from \"./timeline\";\r\n\r\nconst TimelineContainer = () => {\r\n    return <Timeline data={TimeLineData} />;\r\n};\r\n\r\nexport default TimelineContainer;\r\n",
      "@/registry/view/timeline-1/components/timeline": "\"use client\";\r\nimport Container from \"@/components/Container\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { motion, useScroll, useTransform, Variants } from \"framer-motion\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nconst cardVariants: Variants = {\r\n    offscreen: {\r\n        y: 75,\r\n        opacity: 0,\r\n    },\r\n    onscreen: {\r\n        y: 0,\r\n        opacity: 1,\r\n        transition: {\r\n            duration: 0.4,\r\n        },\r\n    },\r\n};\r\n\r\nconst pointVariants: Variants = {\r\n    offscreen: {\r\n        scale: 0,\r\n        opacity: 0,\r\n    },\r\n    onscreen: {\r\n        scale: 1.1,\r\n        opacity: 1,\r\n        transition: {\r\n            duration: 0.3,\r\n        },\r\n    },\r\n};\r\n\r\nconst Timeline = ({ data }: { data: TimeLineProps[] }) => {\r\n    const ref = useRef<HTMLDivElement>(null);\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [height, setHeight] = useState(0);\r\n    useEffect(() => {\r\n        const updateHeight = () => {\r\n            if (ref.current) {\r\n                const rect = ref.current.getBoundingClientRect();\r\n                setHeight(rect.height);\r\n            }\r\n        };\r\n        updateHeight();\r\n        window.addEventListener(\"resize\", updateHeight);\r\n        return () => window.removeEventListener(\"resize\", updateHeight);\r\n    }, []);\r\n\r\n    const { scrollYProgress } = useScroll({\r\n        target: containerRef,\r\n        offset: [\"start 0%\", \"end 50%\"],\r\n    });\r\n    const heightTransform = useTransform(scrollYProgress, [0, 1], [0, height]);\r\n    const opacityTransform = useTransform(scrollYProgress, [0, 0.1], [0, 1]);\r\n\r\n    return (\r\n        <div className=\"w-full my-24\" ref={containerRef}>\r\n            <Container>\r\n                <div className=\"mb-10 lg:mb-14\">\r\n                    <h2 className=\"text-3xl md:text-4xl mb-4 text-center font-bold\">\r\n                        How it works?\r\n                    </h2>\r\n                    <p className=\"text-muted-foreground text-center text-base md:text-lg\">\r\n                        We work in a structured way. Here is how you will be onboard:\r\n                    </p>\r\n                </div>\r\n                <div ref={ref} className=\"relative\">\r\n                    <div className=\"absolute my-4 left-4 md:left-1/2 top-0 h-full w-[3px] bg-neutral-200 md:-translate-x-1/2\">\r\n                        <motion.div\r\n                            style={{\r\n                                height: heightTransform,\r\n                                opacity: opacityTransform,\r\n                            }}\r\n                            className=\"absolute inset-x-0 top-0 w-full bg-primary rounded-full\"\r\n                        />\r\n                    </div>\r\n                    {data.map((item, index) => {\r\n                        const isEven = index % 2 !== 0;\r\n                        return (\r\n                            <motion.div\r\n                                key={index}\r\n                                initial=\"offscreen\"\r\n                                whileInView=\"onscreen\"\r\n                                viewport={{ once: true, amount: 0.6 }}\r\n                                className={cn(\r\n                                    \"flex flex-col md:flex-row items-start mb-16 md:mb-24\",\r\n                                    isEven ? \"md:flex-row-reverse\" : \"\",\r\n                                )}\r\n                            >\r\n                                <motion.div\r\n                                    variants={pointVariants}\r\n                                    viewport={{ once: true }}\r\n                                    className=\"absolute my-4 left-1.5 ml-[3px] lg:-ml-[8.5px] md:left-1/2 w-4 h-4 bg-primary rounded-full md:-translate-x-1/2\"\r\n                                />\r\n                                <motion.div\r\n                                    variants={cardVariants}\r\n                                    className={cn(\r\n                                        \"w-full md:w-5/12 pl-12 md:pl-0 md:h-[70vh] h-[50vh]\",\r\n                                        isEven ? \"md:pl-8\" : \"md:pr-8\",\r\n                                    )}\r\n                                >\r\n                                    <h3 className=\"text-sm font-semibold text-primary\">\r\n                                        {item.title}\r\n                                    </h3>\r\n                                    <div>{item.content}</div>\r\n                                </motion.div>\r\n                            </motion.div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\nexport default Timeline;\r\n"
    },
    "constant": {
      "@/registry/view/timeline-1/constant/index": "// Timeline block's data\nexport const TimeLineData: TimeLineProps[] = [\n  {\n    title: \"STEP 1: Discovery & Consultation\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Deep Dive & Alignment\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            We initiate with a thorough consultation to understand your unique\n            business needs, project goals, and desired outcomes for your\n            web/mobile app, MVP, or ERP system.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"STEP 2: Planning & Strategy\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Blueprint for Success\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            Our expert team meticulously plans the project roadmap, defining\n            scope, timelines, budget, and key deliverables for your web/mobile\n            app, MVP, or ERP system development.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"STEP 3: Design & Development\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Crafting Your Solution\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            Our skilled developers and designers bring your vision to life. We\n            focus on user-centered design, robust development, and seamless\n            integration for your web/mobile app, MVP, or ERP system.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"STEP 4: Testing & Quality Assurance\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Ensuring Excellence\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            Rigorous testing is conducted at every stage to identify and address\n            any issues, ensuring the highest quality and performance for your\n            web/mobile app, MVP, or ERP system.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"STEP 5: Launch & Beyond\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Go-Live & Continuous Support\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            We seamlessly launch your web/mobile app, MVP, or ERP system and\n            provide ongoing support, maintenance, and updates to ensure its\n            continued success and meet your evolving business needs.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n]\n"
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "@/registry/view/timeline-1/page": "import TimelineContainer from \"./components/timeline-container\"\r\n\r\nconst page = () => {\r\n    return (\r\n        <TimelineContainer />\r\n    )\r\n}\r\n\r\nexport default page"
  }
}
