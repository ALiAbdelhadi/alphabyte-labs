{
  "about-1": {
    "components": {
      "@/registry/view/about-1/components/about": {
        "content": "\"use client\"\n\nimport { useEffect, useRef } from \"react\"\nimport { gsap } from \"gsap\"\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\"\nimport Container from \"@/components/Container\"\n\ngsap.registerPlugin(ScrollTrigger)\n\nconst About = () => {\n  const sectionRef = useRef(null)\n  useEffect(() => {\n    const elements = sectionRef.current.querySelectorAll(\".animate-element\")\n    const timelineElements =\n      sectionRef.current.querySelectorAll(\".animate-timeline\")\n    elements.forEach((element) => {\n      gsap.fromTo(\n        element,\n        {\n          opacity: 0,\n          y: 20,\n        },\n        {\n          opacity: 1,\n          y: 0,\n          duration: 1,\n          scrollTrigger: {\n            trigger: element,\n            start: \"top 80%\",\n            end: \"top 60%\",\n            scrub: true,\n            once: true,\n          },\n        }\n      )\n    })\n    timelineElements.forEach((element) => {\n      gsap.fromTo(\n        element,\n        {\n          opacity: 0,\n          x: -50,\n        },\n        {\n          opacity: 1,\n          x: 0,\n          duration: 1,\n          scrollTrigger: {\n            trigger: element,\n            start: \"top 90%\",\n            end: \"top 70%\",\n            scrub: true,\n            once: true,\n          },\n        }\n      )\n    })\n  }, [])\n\n  return (\n    <section ref={sectionRef}>\n      <Container>\n        <div className=\"grid gap-10 lg:grid-cols-[1fr_500px]\">\n          <div className=\"grid gap-4\">\n            <div className=\"space-y-4 animate-element\">\n              <h2 className=\"font-bold tracking-tighter text-3xl sm:text-4xl md:text-5xl\">\n                About Our Company\n              </h2>\n              <p className=\"max-w-[600px] text-muted-foreground md:text-xl/relaxed lg:text-base/relaxed xl:text-xl/relaxed\">\n                At Art Lighting Inc. we are a team of passionate innovators\n                dedicated to pushing the boundaries of what&apos;s possible.\n                Since our founding in 2010, we&apos;ve been on a mission to\n                create cutting-edge products and services that transform the way\n                people live and work.\n              </p>\n            </div>\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              <div className=\"bg-gray-100 dark:bg-neutral-900 rounded-lg p-6 animate-element\">\n                <h3 className=\"text-lg font-semibold text-primary\">\n                  Our Mission\n                </h3>\n                <p className=\"text-muted-foreground mt-2\">\n                  To revolutionize the tech industry and empower people with\n                  innovative solutions.\n                </p>\n              </div>\n              <div className=\"bg-gray-100 dark:bg-neutral-900 rounded-lg p-6 animate-element\">\n                <h3 className=\"text-lg font-semibold text-primary\">\n                  Our Values\n                </h3>\n                <p className=\"text-muted-foreground mt-2\">\n                  Integrity, Collaboration, Creativity, and Continuous\n                  Improvement.\n                </p>\n              </div>\n              <div className=\"bg-gray-100 dark:bg-neutral-900 rounded-lg p-6 animate-element\">\n                <h3 className=\"text-lg font-semibold text-primary\">Our Team</h3>\n                <p className=\"text-muted-foreground mt-2\">\n                  A diverse group of talented individuals who are passionate\n                  about making a difference.\n                </p>\n              </div>\n              <div className=\"bg-gray-100 dark:bg-neutral-900 rounded-lg p-6 animate-element\">\n                <h3 className=\"text-lg font-semibold text-primary\">\n                  Our Commitment\n                </h3>\n                <p className=\"text-muted-foreground mt-2\">\n                  To deliver exceptional products and services that exceed our\n                  customers&apos; expectations.\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"relative animate-element\">\n            <div className=\"after:absolute after:inset-y-0 after:w-px after:bg-gray-500/20 relative pl-6 after:left-0 grid gap-10\">\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2010 - Founding of Art Lighting Inc.\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2010 - Launch of First Product\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2012 - Expansion into New Markets\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2013 - Breakthrough Innovation\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2014 - Local Expansion and Acquisition\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2015 - Sustainability Initiatives\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2016 - Art Lighting Inc. Goes Public\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2016 - Art Lighting Working with Military{\" \"}\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2020 - Pandemic Response and Resilience\n                </div>\n              </div>\n              <div className=\"grid grid-cols-[auto_1fr] gap-1 text-sm relative animate-timeline\">\n                <div className=\"mt-[3px] aspect-square w-3 bg-primary rounded-full z-10 \" />\n                <div className=\"font-medium mt-[-1px]\">\n                  2023 - Our Factory completed\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </section>\n  )\n}\n\nexport default About\n",
        "language": "jsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/about-1/page": {
      "content": "import About_1 from \"./components/about\"\n\nconst page = () => {\n  return (\n    <div className=\"py-10 md:py-16 lg:py-20\">\n      <About_1 />\n    </div>\n  )\n}\n\nexport default page\n",
      "language": "tsx"
    }
  },
  "banner-1": {
    "components": {
      "@/registry/view/banner-1/components/banner": {
        "content": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { X } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { useState } from \"react\"\n\ninterface Banner1Props {\n  title: string\n  description: string\n  linkText: string\n  linkUrl: string\n  defaultVisible?: boolean\n}\n\nexport const Banner = ({\n  title = \"Version 2.0 is now available!\",\n  description = \"Check out all the\",\n  linkText = \"new features\",\n  linkUrl = \"#\",\n  defaultVisible = true,\n}: Banner1Props) => {\n  const [isVisible, setIsVisible] = useState(defaultVisible)\n\n  const handleClose = () => {\n    setIsVisible(false)\n  }\n\n  if (!isVisible) return null\n\n  return (\n    <section className=\"w-full border-b px-4 py-3 shadow-sm\">\n      <div className=\"flex items-center justify-between gap-2\">\n        <div className=\"flex-1 text-center\">\n          <span className=\"text-sm\">\n            <span className=\"font-medium\">{title}</span>{\" \"}\n            <span className=\"text-muted-foreground\">\n              {description}{\" \"}\n              <Link\n                href={linkUrl}\n                className=\"underline underline-offset-4 hover:text-foreground\"\n                target=\"_blank\"\n              >\n                {linkText}\n              </Link>\n              .\n            </span>\n          </span>\n        </div>\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          className=\"-mr-2 h-8 w-8 flex-none\"\n          onClick={handleClose}\n        >\n          <X className=\"h-4 w-4\" />\n        </Button>\n      </div>\n    </section>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/banner-1/page": {
      "content": "import React from \"react\"\n\nimport { Banner } from \"./components/banner\"\n\nconst page = () => {\n  return (\n    <div>\n      <Banner />\n    </div>\n  )\n}\n\nexport default page\n",
      "language": "tsx"
    }
  },
  "carousel-1": {
    "components": {
      "@/registry/view/carousel-1/components/Carousel-Container": {
        "content": "import Link from \"next/link\"\n\nimport { CarouselBigDataForBlock } from \"../constant/index\"\nimport { Card, Carousel } from \"./carousel\"\n\nconst CarouselContainer = () => {\n  const projectCards = CarouselBigDataForBlock.map((project, index) => (\n    <Link href={project.link} key={project.id} className=\"not-prose\">\n      <Card project={project} index={index} />\n    </Link>\n  ))\n  return <Carousel items={projectCards} />\n}\n\nexport default CarouselContainer\n",
        "language": "tsx"
      },
      "@/registry/view/carousel-1/components/carousel": {
        "content": "\"use client\"\n\nimport { useOutsideClick } from \"@/hooks/out-side-click\"\nimport { cn } from \"@/lib/utils\"\nimport { IconArrowNarrowLeft, IconArrowNarrowRight } from \"@tabler/icons-react\"\nimport { motion } from \"framer-motion\"\nimport Image, { ImageProps } from \"next/image\"\nimport {\n  createContext,\n  Fragment,\n  JSX,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\n\ninterface CarouselProps {\n  items: JSX.Element[]\n  initialScroll?: number\n  cardGap?: number\n  scrollOffset?: number\n  initialActiveIndex?: number\n}\n\ninterface Project {\n  id: number\n  title: string\n  description: string\n  image: string\n  link: string\n}\n\nconst CarouselContext = createContext<{\n  onCardClick: (index: number) => void\n  currentIndex: number\n}>({\n  onCardClick: () => { },\n  currentIndex: 0,\n})\n\nexport const Carousel = ({\n  items,\n  initialScroll = 0,\n  cardGap = 16,\n  scrollOffset: initialScrollOffset,\n  initialActiveIndex = 1,\n}: CarouselProps) => {\n  const [scrollOffset, setScrollOffset] = useState(950)\n  useEffect(() => {\n    const WidthWindow = window.innerWidth\n    if (WidthWindow < 789) {\n      setScrollOffset(260)\n    } else {\n      setScrollOffset(950)\n    }\n  }, [])\n  const carouselRef = useRef<HTMLDivElement>(null)\n  const [canScrollLeft, setCanScrollLeft] = useState(false)\n  const [canScrollRight, setCanScrollRight] = useState(true)\n  const [currentIndex, setCurrentIndex] = useState(initialActiveIndex)\n  const checkScrollAbility = () => {\n    if (carouselRef.current) {\n      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current\n      setCanScrollLeft(scrollLeft > 0)\n      setCanScrollRight(scrollLeft < scrollWidth - clientWidth)\n    }\n  }\n  useEffect(() => {\n    if (carouselRef.current && initialActiveIndex !== undefined) {\n      const itemWidth = carouselRef.current.offsetWidth - 500\n      const scrollTo = itemWidth * initialActiveIndex\n      carouselRef.current.scrollTo({\n        left: scrollTo,\n        behavior: \"smooth\",\n      })\n    }\n  }, [initialActiveIndex])\n\n  const scroll = (direction: \"left\" | \"right\") => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollBy({\n        left: direction === \"left\" ? -scrollOffset : scrollOffset,\n        behavior: \"smooth\",\n      })\n    }\n  }\n  const handleCarouselClick = (index: number) => {\n    setCurrentIndex(index)\n  }\n\n  return (\n    <CarouselContext.Provider\n      value={{ onCardClick: handleCarouselClick, currentIndex }}\n    >\n      <div className=\"relative w-full py-0 !my-12 \">\n        <div className=\"flex justify-end space-x-2\">\n          <button\n            className=\"relative z-40 h-12 w-12 rounded-full bg-gray-100 dark:bg-neutral-800 hover:bg-gray-300 hover:dark:bg-gray-700 flex items-center justify-center disabled:opacity-50\"\n            onClick={() => scroll(\"left\")}\n            disabled={!canScrollLeft}\n          >\n            <IconArrowNarrowLeft className=\"h-7 w-7\" />\n          </button>\n          <button\n            className=\"relative z-40 h-12 w-12 rounded-full bg-gray-100 dark:bg-neutral-800 hover:bg-gray-300 hover:dark:bg-gray-700 flex items-center justify-center disabled:opacity-50\"\n            onClick={() => scroll(\"right\")}\n            disabled={!canScrollRight}\n          >\n            <IconArrowNarrowRight className=\"h-7 w-7\" />\n          </button>\n        </div>\n        <div\n          className=\"flex w-full overflow-x-scroll py-6 scroll-smooth [scrollbar-width:none]\"\n          ref={carouselRef}\n          onScroll={checkScrollAbility}\n        >\n          <div\n            className=\"flex flex-row justify-end gap-4\"\n            style={{ gap: `${cardGap}px` }}\n          >\n            {items.map((item, index) => (\n              <motion.div\n                key={index}\n                className=\"rounded-3xl\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{\n                  opacity: 1,\n                  y: 0,\n                  transition: { duration: 0.5, delay: 0.3 * index },\n                }}\n              >\n                {item}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </CarouselContext.Provider>\n  )\n}\n\nexport const Card = ({\n  project,\n  index,\n  layout = false,\n}: {\n  project: Project\n  index: number\n  layout?: boolean\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const cardRef = useRef<HTMLDivElement>(null)\n  useOutsideClick(containerRef, () => setIsOpen(false))\n  const handleCardClick = () => {\n    setIsOpen(true)\n    if (cardRef.current) {\n      cardRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\",\n        inline: \"center\",\n      })\n    }\n  }\n  return (\n    <Fragment>\n      <motion.div\n        ref={cardRef}\n        layoutId={layout ? `card-${project.id}` : undefined}\n        onClick={handleCardClick}\n        className=\"rounded-3xl cursor-pointer bg-gray-100 dark:bg-neutral-900 h-72 md:h-[33rem] w-[35vh] sm:w-[50vh] md:w-[90vh] lg:w-[110vh] xl:w-[150vh] overflow-hidden flex flex-col items-start justify-start relative z-10\"\n      >\n        <div className=\"absolute h-full top-0 inset-x-0 bg-gradient-to-b from-black/50 via-transparent to-transparent z-30 pointer-events-none\" />\n        <div className=\"relative z-40 p-8\">\n          <motion.p\n            layoutId={layout ? `title-${project.id}` : undefined}\n            className=\"text-white text-xl md:text-3xl font-semibold max-w-xs text-left font-sans mt-2\"\n          >\n            {project.title}\n          </motion.p>\n          <motion.p\n            layoutId={layout ? `description-${project.id}` : undefined}\n            className=\"text-white text-sm md:text-base font-medium font-sans text-left mt-2\"\n          >\n            {project.description}\n          </motion.p>\n        </div>\n        <BlurImage\n          src={project.image}\n          alt={project.title}\n          fill\n          className=\"object-cover absolute z-10 inset-0\"\n        />\n      </motion.div>\n    </Fragment>\n  )\n}\n\nexport const BlurImage = ({\n  height,\n  width,\n  src,\n  className,\n  alt,\n  ...rest\n}: ImageProps) => {\n  const [isLoading, setLoading] = useState(true)\n  return (\n    <Image\n      className={cn(\n        \"transition duration-300\",\n        isLoading ? \"blur-sm\" : \"blur-0\",\n        className\n      )}\n      onLoad={() => setLoading(false)}\n      src={src || \"/placeholder.svg\"}\n      width={width}\n      height={height}\n      loading=\"lazy\"\n      decoding=\"async\"\n      blurDataURL={typeof src === \"string\" ? src : undefined}\n      alt={alt ? alt : \"Background of a beautiful view\"}\n      {...rest}\n    />\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {
      "@/registry/view/carousel-1/constant/index": {
        "content": "export const CarouselBigDataForBlock = [\n  {\n    id: 1,\n    title: \"E-commerce web app\",\n    description: \"An E-commerce web app for lighting store\",\n    image: \"/blocks/carousel-big/block-1.png\",\n    link: \"https://eg-artlighting.vercel.app\",\n  },\n  {\n    id: 2,\n    title: \"E-commerce web app\",\n    description: \"An E-commerce web app for lighting store\",\n    image: \"/blocks/carousel-big/block-2.png\",\n    link: \"https://casescobra-cuxh.vercel.app/\",\n  },\n  {\n    id: 3,\n    title: \"E-commerce web app\",\n    description: \"An E-commerce web app for lighting store\",\n    image: \"/blocks/carousel-big/block-3.png\",\n    link: \"https://modern-website-gold.vercel.app/\",\n  },\n]\n",
        "language": "tsx"
      }
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/carousel-1/page": {
      "content": "import CarouselContainer from \"./components/Carousel-Container\"\n\nconst page = () => {\n  return (\n    <div className=\"px-4 lg:px-6\">\n      <CarouselContainer />\n    </div>\n  )\n}\n\nexport default page\n",
      "language": "tsx"
    }
  },
  "carousel-2": {
    "components": {
      "@/registry/view/carousel-2/components/carousel-container": {
        "content": "import { CarouselsData } from \"../constant\"\nimport { Card, Carousel } from \"./carousel\"\n\nconst CarouselContainer = () => {\n  const cards = CarouselsData.map((card, index) => (\n    <Card key={card.src} card={card} index={index} />\n  ))\n  return <Carousel items={cards} />\n}\n\nexport default CarouselContainer\n",
        "language": "tsx"
      },
      "@/registry/view/carousel-2/components/carousel": {
        "content": "\"use client\"\n\nimport { useOutsideClick } from \"@/hooks/out-side-click\"\nimport { cn } from \"@/lib/utils\"\nimport { IconArrowNarrowLeft, IconArrowNarrowRight } from \"@tabler/icons-react\"\nimport { motion } from \"framer-motion\"\nimport Image, { ImageProps } from \"next/image\"\nimport {\n  createContext,\n  Fragment,\n  JSX,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\"\n\ninterface CarouselProps {\n  items: JSX.Element[]\n  initialScroll?: number\n  cardGap?: number\n  scrollOffset?: number\n}\n\ninterface Card {\n  src: string\n  title: string\n  category: string\n}\nconst CarouselContext = createContext<{\n  onCardClick: (index: number) => void\n  currentIndex: number\n}>({\n  onCardClick: () => { },\n  currentIndex: 0,\n})\nexport const Carousel = ({\n  items,\n  initialScroll = 0,\n  cardGap = 16,\n  scrollOffset = 300,\n}: CarouselProps) => {\n  const carouselRef = useRef<HTMLDivElement>(null)\n  const [canScrollLeft, setCanScrollLeft] = useState(false)\n  const [canScrollRight, setCanScrollRight] = useState(true)\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const checkScrollAbility = () => {\n    if (carouselRef.current) {\n      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current\n      setCanScrollLeft(scrollLeft > 0)\n      setCanScrollRight(scrollLeft < scrollWidth - clientWidth)\n    }\n  }\n  useEffect(() => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollLeft = initialScroll\n      checkScrollAbility()\n    }\n  }, [initialScroll])\n  const scroll = (direction: \"left\" | \"right\") => {\n    if (carouselRef.current) {\n      carouselRef.current.scrollBy({\n        left: direction === \"left\" ? -scrollOffset : scrollOffset,\n        behavior: \"smooth\",\n      })\n    }\n  }\n  const handleCarsouelClick = (index: number) => {\n    setCurrentIndex(index)\n  }\n  return (\n    <CarouselContext.Provider\n      value={{ onCardClick: handleCarsouelClick, currentIndex }}\n    >\n      <div className=\"relative w-full py-0 !my-12 \">\n        <div className=\"flex justify-end space-x-2\">\n          <button\n            className=\"relative z-40 h-12 w-12 rounded-full bg-gray-100 dark:bg-neutral-800 hover:bg-gray-300 hover:dark:bg-gray-700 flex items-center justify-center disabled:opacity-50\"\n            onClick={() => scroll(\"left\")}\n            disabled={!canScrollLeft}\n          >\n            <IconArrowNarrowLeft className=\"h-7 w-7 \" />\n          </button>\n          <button\n            className=\"relative z-40 h-12 w-12 rounded-full bg-gray-100 dark:bg-neutral-800 hover:bg-gray-300 hover:dark:bg-gray-700 flex items-center justify-center disabled:opacity-50\"\n            onClick={() => scroll(\"right\")}\n            disabled={!canScrollRight}\n          >\n            <IconArrowNarrowRight className=\"h-7 w-7\" />\n          </button>\n        </div>\n        <div\n          className=\"flex w-full overflow-x-scroll py-6 scroll-smooth  [scrollbar-width:none]\"\n          ref={carouselRef}\n          onScroll={checkScrollAbility}\n        >\n          <div\n            className=\"flex flex-row justify-end\"\n            style={{ gap: `${cardGap}px` }}\n          >\n            {items.map((item, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{\n                  opacity: 1,\n                  y: 0,\n                  transition: { duration: 0.5, delay: 0.3 * index },\n                }}\n              >\n                {item}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </CarouselContext.Provider>\n  )\n}\nexport const Card = ({\n  card,\n  index,\n  layout = false,\n}: {\n  card: Card\n  index: number\n  layout?: boolean\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const cardRef = useRef<HTMLDivElement>(null)\n  useOutsideClick(containerRef, () => setIsOpen(false))\n  const handleCardClick = () => {\n    setIsOpen(true)\n    if (cardRef.current) {\n      cardRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\",\n        inline: \"center\",\n      })\n    }\n  }\n  return (\n    <Fragment>\n      <motion.div\n        ref={cardRef}\n        layoutId={layout ? `card-${card.title}` : undefined}\n        onClick={handleCardClick}\n        className=\"rounded-3xl cursor-pointer bg-gray-100 dark:bg-neutral-800 hover:bg-gray-300 hover:dark:bg-gray-700 dark:bg-neutral-900 h-[18rem] md:h-[37rem] w-56 md:w-96 overflow-hidden flex flex-col items-start justify-start relative z-10zz\"\n      >\n        <div className=\"absolute h-full top-0 inset-x-0 bg-gradient-to-b from-black/50 via-transparent to-transparent z-30 pointer-events-none\" />\n        <div className=\"relative z-40 p-4 md:p-8\">\n          <motion.p\n            layoutId={layout ? `category-${card.category}` : undefined}\n            className=\"text-white/60 text-sm md:text-base font-medium font-sans text-left\"\n          >\n            {card.category}\n          </motion.p>\n          <motion.p\n            layoutId={layout ? `title-${card.title}` : undefined}\n            className=\"text-white text-lg md:text-xl lg:text-3xl font-semibold max-w-xs text-left\"\n          >\n            {card.title}\n          </motion.p>\n        </div>\n        <BlurImage\n          src={card.src}\n          alt={card.title}\n          fill\n          className=\"object-cover absolute z-10 inset-0\"\n        />\n      </motion.div>\n    </Fragment>\n  )\n}\nexport const BlurImage = ({\n  height,\n  width,\n  src,\n  className,\n  alt,\n  ...rest\n}: ImageProps) => {\n  const [isLoading, setLoading] = useState(true)\n  return (\n    <Image\n      className={cn(\n        \"transition duration-300\",\n        isLoading ? \"blur-sm\" : \"blur-0\",\n        className\n      )}\n      onLoad={() => setLoading(false)}\n      src={src}\n      width={width}\n      height={height}\n      loading=\"lazy\"\n      decoding=\"async\"\n      blurDataURL={typeof src === \"string\" ? src : undefined}\n      alt={alt ? alt : \"Background of a beautiful view\"}\n      {...rest}\n    />\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {
      "@/registry/view/carousel-2/constant/index": {
        "content": "export const CarouselsData = [\n  {\n    category: \"Artificial Intelligence\",\n    title: \"You can do more with AI.\",\n    src: \"/blocks/carousel/design-process-2.jpg\",\n  },\n  {\n    category: \"Productivity\",\n    title: \"Enhance your productivity.\",\n    src: \"/blocks/carousel/design-process.jpg\",\n  },\n  {\n    category: \"Product\",\n    title: \"Launching the new Apple Vision Pro.\",\n    src: \"/blocks/case-studies-1/image-1.jpg\",\n  },\n  {\n    category: \"Product\",\n    title: \"Launching the new Apple Vision Pro.\",\n    src: \"/blocks/case-studies-1/image-2.jpg\",\n  },\n  {\n    category: \"Product\",\n    title: \"Launching the new Apple Vision Pro.\",\n    src: \"/blocks/case-studies-1/image-3.jpg\",\n  },\n]\n",
        "language": "tsx"
      }
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/carousel-2/page": {
      "content": "import Container from \"@/components/Container\"\n\nimport CarouselContainer from \"./components/carousel-container\"\n\nconst page = () => {\n  return (\n    <div className=\"px-4 lg:px-6\">\n      <CarouselContainer />\n    </div>\n  )\n}\n\nexport default page\n",
      "language": "tsx"
    }
  },
  "case-studies-1": {
    "components": {
      "@/registry/view/case-studies-1/components/case-studies": {
        "content": "\"use client\"\n\nimport { cn } from \"@/lib/utils\"\nimport { motion } from \"framer-motion\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\nimport Image from \"next/image\"\nimport { useEffect, useRef, useState } from \"react\"\n\ninterface CaseStudy {\n  id: string\n  title: string\n  description: string\n  image: string\n}\n\ninterface CaseStudiesCarouselProps {\n  title: string\n  description: string\n  caseStudies: CaseStudy[]\n}\n\nexport default function CaseStudiesCarousel({\n  title = \"Case Studies\",\n  description = \"Discover how leading companies and developers are leveraging modern web technologies to build exceptional digital experiences. These case studies showcase real-world applications and success stories.\",\n  caseStudies = [\n    {\n      id: \"shadcn\",\n      title: \"shadcn/ui: Building a Modern Component Library\",\n      description:\n        \"Explore how shadcn/ui revolutionized React component development\",\n      image: \"/blocks/case-studies-1/image-1.jpg\",\n    },\n    {\n      id: \"tailwind\",\n      title: \"Tailwind CSS: The Utility-First Revolution\",\n      description:\n        \"Discover how Tailwind CSS transformed the way developers style applications\",\n      image: \"/blocks/case-studies-1/image-2.jpg\",\n    },\n    {\n      id: \"astro\",\n      title: \"Astro: The All-in-One Web Framework\",\n      description:\n        \"Learn how Astro's innovative 'Islands Architecture' and zero-JS approach\",\n      image: \"/blocks/case-studies-1/image-3.jpg\",\n    },\n    {\n      id: \"react\",\n      title: \"React: Pioneering Component-Based UI\",\n      description:\n        \"See how React continues to shape modern web development with its component model\",\n      image: \"/blocks/case-studies-1/image-4.jpg\",\n    },\n    {\n      id: \"nextjs\",\n      title: \"Next.js: The React Framework\",\n      description:\n        \"Explore how Next.js has become the go-to framework for React applications\",\n      image: \"/blocks/case-studies-1/image-5.jpg\",\n    },\n  ],\n}: CaseStudiesCarouselProps) {\n  const carouselRef = useRef<HTMLDivElement>(null)\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [canScrollLeft, setCanScrollLeft] = useState(false)\n  const [canScrollRight, setCanScrollRight] = useState(true)\n\n  const checkScrollAbility = () => {\n    if (carouselRef.current) {\n      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current\n      setCanScrollLeft(scrollLeft > 0)\n      setCanScrollRight(scrollLeft < scrollWidth - clientWidth - 10)\n    }\n  }\n\n  useEffect(() => {\n    checkScrollAbility()\n    window.addEventListener(\"resize\", checkScrollAbility)\n    return () => window.removeEventListener(\"resize\", checkScrollAbility)\n  }, [])\n\n  const scroll = (direction: \"left\" | \"right\") => {\n    if (carouselRef.current) {\n      const cardWidth =\n        carouselRef.current.querySelector(\"div[data-card]\")?.clientWidth || 300\n      const scrollAmount = direction === \"left\" ? -cardWidth : cardWidth\n\n      carouselRef.current.scrollBy({\n        left: scrollAmount,\n        behavior: \"smooth\",\n      })\n      if (direction === \"left\" && activeIndex > 0) {\n        setActiveIndex(activeIndex - 1)\n      } else if (\n        direction === \"right\" &&\n        activeIndex < caseStudies.length - 1\n      ) {\n        setActiveIndex(activeIndex + 1)\n      }\n    }\n  }\n\n  const scrollToIndex = (index: number) => {\n    if (carouselRef.current) {\n      const cards = carouselRef.current.querySelectorAll(\"div[data-card]\")\n      if (cards[index]) {\n        cards[index].scrollIntoView({\n          behavior: \"smooth\",\n          block: \"nearest\",\n          inline: \"start\",\n        })\n        setActiveIndex(index)\n      }\n    }\n  }\n\n  return (\n    <div className=\"w-full py-8 md:py-16 px-4 md:px-6 bg-white dark:bg-black transition-colors duration-200\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex flex-col md:flex-row md:items-end justify-between mb-8 md:mb-12\">\n          <div className=\"max-w-3xl mb-6 md:mb-0\">\n            <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4\">\n              {title}\n            </h2>\n            <p className=\"text-gray-600 dark:text-gray-300 text-base md:text-lg\">\n              {description}\n            </p>\n          </div>\n          <div className=\"flex space-x-2 self-end\">\n            <button\n              className=\"h-10 w-10 md:h-12 md:w-12 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center disabled:opacity-50 transition-colors hover:bg-gray-200 dark:hover:bg-gray-700\"\n              onClick={() => scroll(\"left\")}\n              disabled={!canScrollLeft}\n              aria-label=\"Previous slide\"\n            >\n              <ArrowLeft className=\"h-5 w-5 md:h-6 md:w-6 text-gray-700 dark:text-gray-300\" />\n            </button>\n            <button\n              className=\"h-10 w-10 md:h-12 md:w-12 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center disabled:opacity-50 transition-colors hover:bg-gray-200 dark:hover:bg-gray-700\"\n              onClick={() => scroll(\"right\")}\n              disabled={!canScrollRight}\n              aria-label=\"Next slide\"\n            >\n              <ArrowRight className=\"h-5 w-5 md:h-6 md:w-6 text-gray-700 dark:text-gray-300\" />\n            </button>\n          </div>\n        </div>\n        <div className=\"relative w-full overflow-hidden\" aria-live=\"polite\">\n          <div\n            ref={carouselRef}\n            className=\"flex w-full overflow-x-auto hide-scrollbar snap-x snap-mandatory gap-4 md:gap-6 pb-8\"\n            onScroll={() => {\n              checkScrollAbility()\n              if (carouselRef.current) {\n                const scrollLeft = carouselRef.current.scrollLeft\n                const cardWidth =\n                  carouselRef.current.querySelector(\"div[data-card]\")\n                    ?.clientWidth || 300\n                const newIndex = Math.round(scrollLeft / cardWidth)\n                if (\n                  newIndex !== activeIndex &&\n                  newIndex >= 0 &&\n                  newIndex < caseStudies.length\n                ) {\n                  setActiveIndex(newIndex)\n                }\n              }\n            }}\n          >\n            {caseStudies.map((study, index) => (\n              <motion.div\n                key={study.id}\n                data-card\n                className=\"min-w-[240px] md:min-w-[300px] lg:min-w-[360px] flex-shrink-0 snap-start rounded-xl overflow-hidden relative group\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{\n                  opacity: 1,\n                  y: 0,\n                  transition: { duration: 0.5, delay: index * 0.1 },\n                }}\n              >\n                <div className=\"relative aspect-[3/4] md:aspect-[4/5] w-full overflow-hidden\">\n                  <Image\n                    src={study.image}\n                    alt={study.title}\n                    fill\n                    className=\"object-cover transition-transform duration-500 group-hover:scale-105\"\n                    sizes=\"(max-width: 640px) 240px, (max-width: 1024px) 300px, 360px\"\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent\" />\n                  <div className=\"absolute bottom-0 left-0 right-0 p-4 md:p-6 flex flex-col\">\n                    <h3 className=\"text-lg md:text-xl lg:text-2xl font-bold text-white mb-2\">\n                      {study.title}\n                    </h3>\n                    <p className=\"text-sm md:text-base text-gray-200 mb-4 line-clamp-2\">\n                      {study.description}\n                    </p>\n                    <button className=\"flex items-center text-white text-sm md:text-base font-medium group/btn\">\n                      Read more\n                      <ArrowRight className=\"ml-2 h-4 w-4 transition-transform group-hover/btn:translate-x-1\" />\n                    </button>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n          <div className=\"flex justify-center mt-4 space-x-2\">\n            {caseStudies.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => scrollToIndex(index)}\n                className={cn(\n                  \"w-2 h-2 rounded-full transition-all duration-300\",\n                  activeIndex === index\n                    ? \"bg-gray-800 dark:bg-white w-4\"\n                    : \"bg-gray-300 dark:bg-gray-600\"\n                )}\n                aria-label={`Go to slide ${index + 1}`}\n                aria-current={activeIndex === index ? \"true\" : \"false\"}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/case-studies-1/page": {
      "content": "import CaseStudies from \"./components/case-studies\"\n\nconst page = () => {\n  return (\n    <main className=\"min-h-screen\">\n      <CaseStudies />\n    </main>\n  )\n}\n\nexport default page\n",
      "language": "tsx"
    }
  },
  "case-studies-2": {
    "components": {
      "@/registry/view/case-studies-2/components/case-studies": {
        "content": "\"use client\"\n\nimport { useOutsideClick } from \"@/hooks/out-side-click\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport { ArrowLeft, ArrowRight, ExternalLink, X } from \"lucide-react\"\nimport Image from \"next/image\"\nimport type React from \"react\"\nimport { createContext, useContext, useEffect, useRef, useState } from \"react\"\n\ninterface CaseStudy {\n  id: string\n  title: string\n  description: string\n  image: string\n  category: string\n  fullDescription?: string\n  link?: string\n  technologies?: string[]\n  company?: string\n  content?: React.ReactNode\n}\n\ninterface CaseStudiesCarouselProps {\n  title: string\n  description: string\n  caseStudies: CaseStudy[]\n}\n\nconst CarouselContext = createContext<{\n  onCardClose: (index: number) => void\n  currentIndex: number\n}>({\n  onCardClose: () => {},\n  currentIndex: 0,\n})\n\nexport default function CaseStudiesCarousel({\n  title = \"Case Studies\",\n  description = \"Discover how leading companies and developers are leveraging modern web technologies to build exceptional digital experiences. These case studies showcase real-world applications and success stories.\",\n  caseStudies = [\n    {\n      id: \"shadcn\",\n      title: \"shadcn/ui: Building a Modern Component Library\",\n      description:\n        \"Explore how shadcn/ui revolutionized React component development\",\n      category: \"Component Library\",\n      fullDescription:\n        \"shadcn/ui has transformed how developers build React applications by providing a collection of reusable components that are both beautiful and accessible. Unlike traditional component libraries, shadcn/ui offers a unique approach where you copy and own the code, allowing for maximum customization while maintaining a consistent design language. This case study explores how this innovative approach has changed the component library landscape.\",\n      technologies: [\"React\", \"Radix UI\", \"Tailwind CSS\", \"TypeScript\"],\n      company: \"shadcn\",\n      link: \"https://ui.shadcn.com\",\n      image: \"/blocks/case-studies-1/image-1.jpg\",\n    },\n    {\n      id: \"tailwind\",\n      title: \"Tailwind CSS: The Utility-First Revolution\",\n      description:\n        \"Discover how Tailwind CSS transformed the way developers style applications\",\n      category: \"CSS Framework\",\n      fullDescription:\n        \"Tailwind CSS introduced a utility-first approach to styling that has dramatically changed how developers build interfaces. By providing low-level utility classes, Tailwind enables rapid UI development without leaving your HTML, resulting in more consistent designs and faster development cycles. This case study examines how Tailwind CSS has grown from a controversial idea to one of the most popular styling solutions in modern web development.\",\n      technologies: [\"CSS\", \"PostCSS\", \"JavaScript\", \"HTML\"],\n      company: \"Tailwind Labs\",\n      link: \"https://tailwindcss.com\",\n      image: \"/blocks/case-studies-1/image-2.jpg\",\n    },\n    {\n      id: \"astro\",\n      title: \"Astro: The All-in-One Web Framework\",\n      description:\n        \"Learn how Astro's innovative 'Islands Architecture' and zero-JS approach\",\n      category: \"Web Framework\",\n      fullDescription:\n        \"Astro has pioneered the 'Islands Architecture' approach, allowing developers to build faster websites by shipping less JavaScript to the client. By default, Astro renders your entire site to static HTML, then selectively hydrates only the interactive components when needed. This case study explores how Astro's innovative approach has enabled developers to build high-performance websites without sacrificing developer experience.\",\n      technologies: [\"JavaScript\", \"TypeScript\", \"HTML\", \"CSS\"],\n      company: \"Astro\",\n      link: \"https://astro.build\",\n      image: \"/blocks/case-studies-1/image-3.jpg\",\n    },\n    {\n      id: \"react\",\n      title: \"React: Pioneering Component-Based UI\",\n      description:\n        \"See how React continues to shape modern web development with its component model\",\n      category: \"JavaScript Library\",\n      fullDescription:\n        \"React introduced a component-based architecture that has fundamentally changed how developers build user interfaces. By breaking UIs into reusable, composable components and introducing a virtual DOM for efficient updates, React established patterns that have influenced virtually every modern frontend framework. This case study examines React's journey from a controversial library to the foundation of modern web development.\",\n      technologies: [\"JavaScript\", \"JSX\", \"Virtual DOM\", \"Hooks\"],\n      company: \"Meta (formerly Facebook)\",\n      link: \"https://react.dev\",\n      image: \"/blocks/case-studies-1/image-4.jpg\",\n    },\n    {\n      id: \"nextjs\",\n      title: \"Next.js: The React Framework\",\n      description:\n        \"Explore how Next.js has become the go-to framework for React applications\",\n      category: \"React Framework\",\n      fullDescription:\n        \"Next.js has established itself as the leading React framework by providing an elegant solution to common challenges in web development. With features like server-side rendering, static site generation, and automatic code splitting, Next.js enables developers to build high-performance React applications with minimal configuration. This case study explores how Next.js has evolved to address the needs of modern web applications.\",\n      technologies: [\"React\", \"JavaScript\", \"TypeScript\", \"Server Components\"],\n      company: \"Vercel\",\n      link: \"https://nextjs.org\",\n      image: \"/blocks/case-studies-1/image-5.jpg\",\n    },\n  ],\n}: CaseStudiesCarouselProps) {\n  const carouselRef = useRef<HTMLDivElement>(null)\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [canScrollLeft, setCanScrollLeft] = useState(false)\n  const [canScrollRight, setCanScrollRight] = useState(true)\n\n  const checkScrollAbility = () => {\n    if (carouselRef.current) {\n      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current\n      setCanScrollLeft(scrollLeft > 0)\n      setCanScrollRight(scrollLeft < scrollWidth - clientWidth - 10) \n    }\n  }\n\n  useEffect(() => {\n    checkScrollAbility()\n    window.addEventListener(\"resize\", checkScrollAbility)\n    return () => window.removeEventListener(\"resize\", checkScrollAbility)\n  }, [])\n\n  const scroll = (direction: \"left\" | \"right\") => {\n    if (carouselRef.current) {\n      const scrollAmount = direction === \"left\" ? -300 : 300\n\n      carouselRef.current.scrollBy({\n        left: scrollAmount,\n        behavior: \"smooth\",\n      })\n    }\n  }\n\n  const handleCardClose = (index: number) => {\n    if (carouselRef.current) {\n      const cardWidth = window.innerWidth < 768 ? 224 : 320\n      const gap = window.innerWidth < 768 ? 16 : 24\n      const scrollPosition = index * (cardWidth + gap)\n\n      carouselRef.current.scrollTo({\n        left: scrollPosition,\n        behavior: \"smooth\",\n      })\n      setActiveIndex(index)\n    }\n  }\n\n  return (\n    <CarouselContext.Provider\n      value={{ onCardClose: handleCardClose, currentIndex: activeIndex }}\n    >\n      <div className=\"w-full py-8 md:py-16 px-4 md:px-6 bg-white dark:bg-black transition-colors duration-200\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"flex flex-col md:flex-row md:items-end justify-between mb-8 md:mb-12\">\n            <div className=\"max-w-3xl mb-6 md:mb-0\">\n              <h2 className=\"text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4\">\n                {title}\n              </h2>\n              <p className=\"text-gray-600 dark:text-gray-300 text-base md:text-lg\">\n                {description}\n              </p>\n            </div>\n            <div className=\"flex space-x-2 self-end\">\n              <button\n                className=\"h-10 w-10 md:h-12 md:w-12 rounded-full bg-gray-100 dark:bg-gray-950 flex items-center justify-center disabled:opacity-50 transition-colors hover:bg-gray-200 dark:hover:bg-gray-700\"\n                onClick={() => scroll(\"left\")}\n                disabled={!canScrollLeft}\n                aria-label=\"Previous slide\"\n              >\n                <ArrowLeft className=\"h-5 w-5 md:h-6 md:w-6 text-gray-700 dark:text-gray-300\" />\n              </button>\n              <button\n                className=\"h-10 w-10 md:h-12 md:w-12 rounded-full bg-gray-100 dark:bg-gray-950 flex items-center justify-center disabled:opacity-50 transition-colors hover:bg-gray-200 dark:hover:bg-gray-700\"\n                onClick={() => scroll(\"right\")}\n                disabled={!canScrollRight}\n                aria-label=\"Next slide\"\n              >\n                <ArrowRight className=\"h-5 w-5 md:h-6 md:w-6 text-gray-700 dark:text-gray-300\" />\n              </button>\n            </div>\n          </div>\n          <div className=\"relative w-full overflow-hidden\" aria-live=\"polite\">\n            <div\n              ref={carouselRef}\n              className=\"flex w-full overflow-x-auto hide-scrollbar gap-4 md:gap-8 pb-8\"\n              onScroll={checkScrollAbility}\n            >\n              {caseStudies.map((study, index) => (\n                <CaseStudyCard\n                  key={study.id}\n                  card={study}\n                  index={index}\n                  layout={true}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </CarouselContext.Provider>\n  )\n}\n\nfunction CaseStudyCard({\n  card,\n  index,\n  layout = false,\n}: {\n  card: CaseStudy\n  index: number\n  layout?: boolean\n}) {\n  const [open, setOpen] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const { onCardClose } = useContext(CarouselContext)\n\n  useEffect(() => {\n    function onKeyDown(event: KeyboardEvent) {\n      if (event.key === \"Escape\") {\n        handleClose()\n      }\n    }\n\n    if (open) {\n      document.body.style.overflow = \"hidden\"\n    } else {\n      document.body.style.overflow = \"auto\"\n    }\n\n    window.addEventListener(\"keydown\", onKeyDown)\n    return () => window.removeEventListener(\"keydown\", onKeyDown)\n  }, [open])\n\n  useOutsideClick(containerRef, () => handleClose())\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n    onCardClose(index)\n  }\n\n  const cardContent = card.content || (\n    <div className=\"space-y-6\">\n      <p className=\"text-gray-700 dark:text-gray-300 text-base md:text-lg\">\n        {card.fullDescription || card.description}\n      </p>\n      {card.technologies && card.technologies.length > 0 && (\n        <div>\n          <h3 className=\"text-lg font-semibold mb-3 text-gray-900 dark:text-white\">\n            Technologies\n          </h3>\n          <div className=\"flex flex-wrap gap-2\">\n            {card.technologies.map((tech) => (\n              <span\n                key={tech}\n                className=\"px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200 rounded-full text-sm\"\n              >\n                {tech}\n              </span>\n            ))}\n          </div>\n        </div>\n      )}\n      {card.image && (\n        <div className=\"relative\">\n          <Image\n            src={card.image}\n            alt={card.title}\n            fill\n            className=\"object-cover w-full h-[100px]\"\n          />\n        </div>\n      )}\n      {card.company && (\n        <div>\n          <h3 className=\"text-lg font-semibold mb-2 text-gray-900 dark:text-white\">\n            Company\n          </h3>\n          <p className=\"text-gray-700 dark:text-gray-300\">{card.company}</p>\n        </div>\n      )}\n      {card.link && (\n        <div className=\"pt-4\">\n          <a\n            href={card.link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"inline-flex items-center px-4 py-2 bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900 rounded-lg hover:bg-gray-800 dark:hover:bg-white transition-colors\"\n          >\n            Visit Website\n            <ExternalLink className=\"ml-2 h-4 w-4\" />\n          </a>\n        </div>\n      )}\n    </div>\n  )\n\n  return (\n    <>\n      <AnimatePresence>\n        {open && (\n          <div className=\"fixed inset-0 z-50 h-screen overflow-y-auto hide-scrollbar\">\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 h-full w-full bg-black/50 backdrop-blur-lg\"\n            />\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              ref={containerRef}\n              layoutId={layout ? `card-${card.id}` : undefined}\n              className=\"relative z-[60] mx-auto my-10 h-fit max-w-5xl rounded-3xl bg-white p-4 font-sans md:p-10 dark:bg-neutral-900\"\n            >\n              <button\n                className=\"sticky top-4 right-0 ml-auto flex h-8 w-8 items-center justify-center rounded-full bg-black dark:bg-white\"\n                onClick={handleClose}\n              >\n                <X className=\"h-6 w-6 text-neutral-100 dark:text-neutral-900\" />\n              </button>\n              <motion.p\n                layoutId={layout ? `category-${card.id}` : undefined}\n                className=\"text-base font-medium text-black dark:text-white\"\n              >\n                {card.category}\n              </motion.p>\n              <motion.p\n                layoutId={layout ? `title-${card.id}` : undefined}\n                className=\"mt-4 text-2xl font-semibold text-neutral-700 md:text-5xl dark:text-white\"\n              >\n                {card.title}\n              </motion.p>\n              <div className=\"py-10\">{cardContent}</div>\n            </motion.div>\n          </div>\n        )}\n      </AnimatePresence>\n      <motion.button\n        layoutId={layout ? `card-${card.id}` : undefined}\n        onClick={handleOpen}\n        className=\"relative h-[360px] md:h-[440px] lg:h-[500px] z-10 flex flex-col items-start justify-start overflow-hidden rounded-xl bg-gray-100 dark:bg-neutral-900 flex-shrink-0\"\n      >\n        <div className=\"pointer-events-none absolute inset-x-0 top-0 z-30 h-full bg-gradient-to-b from-black/50 via-transparent to-transparent\" />\n        <div className=\"relative z-40 p-8\">\n          <motion.p\n            layoutId={layout ? `category-${card.id}` : undefined}\n            className=\"text-left font-sans text-sm font-medium text-white md:text-base\"\n          >\n            {card.category}\n          </motion.p>\n          <motion.p\n            layoutId={layout ? `title-${card.id}` : undefined}\n            className=\"mt-2 max-w-xs text-left font-sans text-xl font-semibold [text-wrap:balance] text-white md:text-3xl\"\n          >\n            {card.title}\n          </motion.p>\n        </div>\n        <Image\n          src={card.image}\n          alt={card.title}\n          fill\n          className=\"absolute inset-0 z-10 object-cover transition-transform duration-500 hover:scale-105\"\n          sizes=\"(max-width: 640px) 240px, (max-width: 1024px) 300px, 360px\"\n        />\n      </motion.button>\n    </>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/case-studies-2/page": {
      "content": "import CaseStudies from \"./components/case-studies\"\n\nconst page = () => {\n  return (\n    <main className=\"min-h-screen\">\n      <CaseStudies />\n    </main>\n  )\n}\n\nexport default page\n",
      "language": "tsx"
    }
  },
  "dashboard-1": {
    "components": {
      "@/registry/view/dashboard-1/components/dashboard": {
        "content": "\"use client\"\r\n\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport {\r\n    Bell,\r\n    DollarSign,\r\n    Filter,\r\n    MoreHorizontal,\r\n    Package,\r\n    Search,\r\n    ShoppingCart,\r\n    TrendingDown,\r\n    TrendingUp,\r\n    Users,\r\n} from \"lucide-react\"\r\nimport { useMemo, useState } from \"react\"\r\nimport { formatDate, formatPrice } from \"../lib/utils\"\r\nimport { Sidebar } from \"./sidebar\"\r\n\r\ntype OrderStatus = \"awaiting_shipment\" | \"processing\" | \"fulfilled\" | \"cancelled\"\r\n\r\ninterface Order {\r\n    id: number\r\n    customerName: string\r\n    customerEmail: string\r\n    customerAvatar: string\r\n    productName: string\r\n    productImage: string\r\n    productPrice: number\r\n    quantity: number\r\n    shippingPrice: number\r\n    discountRate: number\r\n    totalPrice: number\r\n    status: OrderStatus\r\n    createdAt: string\r\n}\r\n\r\nconst mockOrders: Order[] = [\r\n    {\r\n        id: 1001,\r\n        customerName: \"Ahmed Hassan\",\r\n        customerEmail: \"ahmed.hassan@email.com\",\r\n        customerAvatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100&h=100&fit=crop&crop=face\",\r\n        productName: \"iPhone 15 Pro Max\",\r\n        productImage: \"https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=100&h=100&fit=crop\",\r\n        productPrice: 1199,\r\n        quantity: 1,\r\n        shippingPrice: 25,\r\n        discountRate: 0.1,\r\n        totalPrice: 1104.1,\r\n        status: \"fulfilled\",\r\n        createdAt: \"2024-01-15T10:30:00Z\",\r\n    },\r\n    {\r\n        id: 1002,\r\n        customerName: \"Fatima Al-Zahra\",\r\n        customerEmail: \"fatima.zahra@email.com\",\r\n        customerAvatar: \"https://images.unsplash.com/photo-1517336714731-489689fd1ca8?w=100&h=100&fit=crop&crop=face\",\r\n        productName: \"MacBook Air M3\",\r\n        productImage: \"https://images.unsplash.com/photo-1517336714731-489689fd1ca8?w=100&h=100&fit=crop\",\r\n        productPrice: 1299,\r\n        quantity: 1,\r\n        shippingPrice: 0,\r\n        discountRate: 0,\r\n        totalPrice: 1299,\r\n        status: \"processing\",\r\n        createdAt: \"2024-01-14T14:20:00Z\",\r\n    },\r\n    {\r\n        id: 1003,\r\n        customerName: \"Omar Khaled\",\r\n        customerEmail: \"omar.khaled@email.com\",\r\n        customerAvatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\",\r\n        productName: \"AirPods Pro 2\",\r\n        productImage: \"https://images.unsplash.com/photo-1606220945770-b5b6c2c55bf1?w=100&h=100&fit=crop\",\r\n        productPrice: 249,\r\n        quantity: 2,\r\n        shippingPrice: 15,\r\n        discountRate: 0.05,\r\n        totalPrice: 487.1,\r\n        status: \"awaiting_shipment\",\r\n        createdAt: \"2024-01-14T09:15:00Z\",\r\n    },\r\n    {\r\n        id: 1004,\r\n        customerName: \"Layla Mohammed\",\r\n        customerEmail: \"layla.mohammed@email.com\",\r\n        customerAvatar: \"https://images.unsplash.com/photo-1544244015-0df4b3ffc6b0?w=100&h=100&fit=crop&crop=face\",\r\n        productName: \"iPad Pro 12.9\",\r\n        productImage: \"https://images.unsplash.com/photo-1544244015-0df4b3ffc6b0?w=100&h=100&fit=crop\",\r\n        productPrice: 1099,\r\n        quantity: 1,\r\n        shippingPrice: 20,\r\n        discountRate: 0.15,\r\n        totalPrice: 954.15,\r\n        status: \"cancelled\",\r\n        createdAt: \"2024-01-13T16:45:00Z\",\r\n    },\r\n    {\r\n        id: 1005,\r\n        customerName: \"Youssef Ali\",\r\n        customerEmail: \"youssef.ali@email.com\",\r\n        customerAvatar: \"\",\r\n        productName: \"Apple Watch Series 9\",\r\n        productImage: \"https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=100&h=100&fit=crop\",\r\n        productPrice: 399,\r\n        quantity: 1,\r\n        shippingPrice: 10,\r\n        discountRate: 0,\r\n        totalPrice: 409,\r\n        status: \"fulfilled\",\r\n        createdAt: \"2024-01-13T11:30:00Z\",\r\n    },\r\n    {\r\n        id: 1006,\r\n        customerName: \"Nour Abdel Rahman\",\r\n        customerEmail: \"nour.abdel@email.com\",\r\n        customerAvatar: \"\",\r\n        productName: \"Magic Keyboard\",\r\n        productImage: \"https://images.unsplash.com/photo-1517336714731-489689fd1ca8?w=100&h=100&fit=crop\",\r\n        productPrice: 299,\r\n        quantity: 1,\r\n        shippingPrice: 12,\r\n        discountRate: 0.08,\r\n        totalPrice: 286.08,\r\n        status: \"processing\",\r\n        createdAt: \"2024-01-12T13:20:00Z\",\r\n    },\r\n]\r\n\r\nconst getStatusBadgeClassName = (status: OrderStatus) => {\r\n    switch (status) {\r\n        case \"cancelled\":\r\n            return \"bg-red-500 text-white hover:bg-red-600\"\r\n        case \"processing\":\r\n            return \"bg-yellow-500 text-white hover:bg-yellow-600\"\r\n        case \"fulfilled\":\r\n            return \"bg-green-500 text-white hover:bg-green-600\"\r\n        case \"awaiting_shipment\":\r\n            return \"bg-blue-500 text-white hover:bg-blue-600\"\r\n        default:\r\n            return \"bg-gray-500 text-white hover:bg-gray-600\"\r\n    }\r\n}\r\n\r\nconst LABEL_MAP: Record<OrderStatus, string> = {\r\n    awaiting_shipment: \"Awaiting Shipment\",\r\n    processing: \"Processing\",\r\n    cancelled: \"Cancelled\",\r\n    fulfilled: \"Fulfilled\",\r\n}\r\n\r\nfunction DashboardHeader() {\r\n    return (\r\n        <header className=\"border-b\">\r\n            <div className=\"flex h-16 items-center px-4 lg:px-6\">\r\n                <div className=\"flex items-center gap-4\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <Package className=\"h-6 w-6 text-blue-600\" />\r\n                        <h1 className=\"text-xl font-semibold\">E-commerce Admin</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"ml-auto flex items-center gap-4\">\r\n                    <Button variant=\"ghost\" size=\"icon\">\r\n                        <Search className=\"h-4 w-4\" />\r\n                    </Button>\r\n                    <Button variant=\"ghost\" size=\"icon\">\r\n                        <Bell className=\"h-4 w-4\" />\r\n                    </Button>\r\n                    <Avatar className=\"h-8 w-8\">\r\n                        <AvatarImage src=\"\" />\r\n                        <AvatarFallback>AD</AvatarFallback>\r\n                    </Avatar>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nfunction DashboardSummary({ orders }: { orders: Order[] }) {\r\n    const stats = useMemo(() => {\r\n        const totalSales = orders\r\n            .filter((order) => order.status !== \"cancelled\")\r\n            .reduce((sum, order) => sum + order.totalPrice, 0)\r\n\r\n        const totalOrders = orders.length\r\n        const totalCustomers = new Set(orders.map((order) => order.customerEmail)).size\r\n        const avgOrderValue = totalSales / Math.max(totalOrders, 1)\r\n\r\n        return {\r\n            totalSales,\r\n            totalOrders,\r\n            totalCustomers,\r\n            avgOrderValue,\r\n        }\r\n    }, [orders])\r\n\r\n    return (\r\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n            <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\r\n                    <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"text-2xl font-bold\">{formatPrice(stats.totalSales)}</div>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                        <TrendingUp className=\"inline h-3 w-3 mr-1\" />\r\n                        +12.5% from last month\r\n                    </p>\r\n                </CardContent>\r\n            </Card>\r\n            <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">Total Orders</CardTitle>\r\n                    <ShoppingCart className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"text-2xl font-bold\">{stats.totalOrders}</div>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                        <TrendingUp className=\"inline h-3 w-3 mr-1\" />\r\n                        +8.2% from last month\r\n                    </p>\r\n                </CardContent>\r\n            </Card>\r\n            <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">Customers</CardTitle>\r\n                    <Users className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"text-2xl font-bold\">{stats.totalCustomers}</div>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                        <TrendingUp className=\"inline h-3 w-3 mr-1\" />\r\n                        +5.1% from last month\r\n                    </p>\r\n                </CardContent>\r\n            </Card>\r\n            <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">Avg. Order Value</CardTitle>\r\n                    <Package className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"text-2xl font-bold\">{formatPrice(stats.avgOrderValue)}</div>\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                        <TrendingDown className=\"inline h-3 w-3 mr-1\" />\r\n                        -2.1% from last month\r\n                    </p>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function Dashboard() {\r\n    const [filter, setFilter] = useState<string>(\"all\")\r\n\r\n    const filteredOrders = useMemo(() => {\r\n        if (filter === \"all\") return mockOrders\r\n        return mockOrders.filter((order) => order.status === filter)\r\n    }, [filter])\r\n\r\n    const calculateDiscountedPrice = (price: number, discount: number) => {\r\n        return price * (1 - discount)\r\n    }\r\n\r\n    const calculateTotal = (order: Order) => {\r\n        const discountedPrice = calculateDiscountedPrice(order.productPrice, order.discountRate)\r\n        return discountedPrice * order.quantity + order.shippingPrice\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Sidebar />\r\n            <div className=\"min-h-screen\">\r\n                <DashboardHeader />\r\n                <div className=\"flex flex-col gap-6 p-4 lg:p-6\">\r\n                    <div>\r\n                        <h2 className=\"text-3xl font-bold tracking-tight\">Dashboard</h2>\r\n                        <p className=\"text-muted-foreground\">Welcome back! Here's what's happening with your store today.</p>\r\n                    </div>\r\n                    <DashboardSummary orders={mockOrders} />\r\n                    <div className=\"space-y-4\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <h3 className=\"text-lg font-medium\">Recent Orders</h3>\r\n                            <Button variant=\"outline\" size=\"sm\">\r\n                                <Filter className=\"mr-2 h-4 w-4\" />\r\n                                Export\r\n                            </Button>\r\n                        </div>\r\n                        <Tabs value={filter} onValueChange={setFilter} className=\"w-full\">\r\n                            <TabsList className=\"max-w-fit\">\r\n                                <TabsTrigger value=\"all\">All Orders</TabsTrigger>\r\n                                <TabsTrigger value=\"awaiting_shipment\">Awaiting</TabsTrigger>\r\n                                <TabsTrigger value=\"processing\">Processing</TabsTrigger>\r\n                                <TabsTrigger value=\"fulfilled\">Fulfilled</TabsTrigger>\r\n                                <TabsTrigger value=\"cancelled\">Cancelled</TabsTrigger>\r\n                            </TabsList>\r\n                        </Tabs>\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle>Orders</CardTitle>\r\n                                <CardDescription>Manage your orders and view their status.</CardDescription>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <div className=\"overflow-x-auto\">\r\n                                    <Table>\r\n                                        <TableHeader>\r\n                                            <TableRow>\r\n                                                <TableHead className=\"w-[100px]\">Order</TableHead>\r\n                                                <TableHead>Customer</TableHead>\r\n                                                <TableHead>Product</TableHead>\r\n                                                <TableHead>Price</TableHead>\r\n                                                <TableHead>Discount</TableHead>\r\n                                                <TableHead>Qty</TableHead>\r\n                                                <TableHead>Shipping</TableHead>\r\n                                                <TableHead>Total</TableHead>\r\n                                                <TableHead>Date</TableHead>\r\n                                                <TableHead>Status</TableHead>\r\n                                                <TableHead className=\"w-[50px]\"></TableHead>\r\n                                            </TableRow>\r\n                                        </TableHeader>\r\n                                        <TableBody>\r\n                                            {filteredOrders.map((order) => (\r\n                                                <TableRow key={order.id}>\r\n                                                    <TableCell className=\"font-medium\">#{order.id}</TableCell>\r\n                                                    <TableCell>\r\n                                                        <div className=\"flex items-center gap-2\">\r\n                                                            <Avatar className=\"h-8 w-8\">\r\n                                                                <AvatarImage src={order.customerAvatar || \"/placeholder.svg\"} />\r\n                                                                <AvatarFallback>\r\n                                                                    {order.customerName\r\n                                                                        .split(\" \")\r\n                                                                        .map((n) => n[0])\r\n                                                                        .join(\"\")}\r\n                                                                </AvatarFallback>\r\n                                                            </Avatar>\r\n                                                            <div>\r\n                                                                <div className=\"font-medium\">{order.customerName}</div>\r\n                                                                <div className=\"text-sm text-muted-foreground\">{order.customerEmail}</div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <div className=\"flex items-center gap-2\">\r\n                                                            <img\r\n                                                                src={order.productImage || \"/placeholder.svg\"}\r\n                                                                alt={order.productName}\r\n                                                                className=\"h-10 w-10 rounded object-cover\"\r\n                                                            />\r\n                                                            <div className=\"font-medium text-nowrap\">{order.productName}</div>\r\n                                                        </div>\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        {order.discountRate > 0 ? (\r\n                                                            <div className=\"space-y-1\">\r\n                                                                <div className=\"line-through text-sm text-muted-foreground\">\r\n                                                                    {formatPrice(order.productPrice)}\r\n                                                                </div>\r\n                                                                <div className=\"font-medium\">\r\n                                                                    {formatPrice(calculateDiscountedPrice(order.productPrice, order.discountRate))}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        ) : (\r\n                                                            <div className=\"font-medium\">{formatPrice(order.productPrice)}</div>\r\n                                                        )}\r\n                                                    </TableCell>\r\n                                                    <TableCell className=\"text-nowrap\">\r\n                                                        {order.discountRate > 0 ? (\r\n                                                            <Badge variant=\"secondary\">{Math.round(order.discountRate * 100)}% OFF</Badge>\r\n                                                        ) : (\r\n                                                            <span className=\"text-muted-foreground\">No discount</span>\r\n                                                        )}\r\n                                                    </TableCell>\r\n                                                    <TableCell>{order.quantity}</TableCell>\r\n                                                    <TableCell>{order.shippingPrice > 0 ? formatPrice(order.shippingPrice) : \"Free\"}</TableCell>\r\n                                                    <TableCell className=\"font-medium\">{formatPrice(calculateTotal(order))}</TableCell>\r\n                                                    <TableCell className=\"text-nowrap\">{formatDate(order.createdAt)}</TableCell>\r\n                                                    <TableCell className=\"text-nowrap\">\r\n                                                        <Badge className={getStatusBadgeClassName(order.status)}>{LABEL_MAP[order.status]}</Badge>\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <DropdownMenu>\r\n                                                            <DropdownMenuTrigger asChild>\r\n                                                                <Button variant=\"ghost\" size=\"icon\">\r\n                                                                    <MoreHorizontal className=\"h-4 w-4\" />\r\n                                                                    <span className=\"sr-only\">Actions</span>\r\n                                                                </Button>\r\n                                                            </DropdownMenuTrigger>\r\n                                                            <DropdownMenuContent align=\"end\">\r\n                                                                <DropdownMenuItem>View Order</DropdownMenuItem>\r\n                                                                <DropdownMenuItem>Edit Order</DropdownMenuItem>\r\n                                                                <DropdownMenuItem>Customer Details</DropdownMenuItem>\r\n                                                                <DropdownMenuItem className=\"text-red-600\">Cancel Order</DropdownMenuItem>\r\n                                                            </DropdownMenuContent>\r\n                                                        </DropdownMenu>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-1/components/sidebar": {
        "content": "\"use client\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { motion } from \"framer-motion\"\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\r\nimport Link from \"next/link\"\r\nimport { usePathname } from \"next/navigation\"\r\nimport { useState } from \"react\"\r\nimport { DASHBOARDS } from \"../constant/index\"\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\r\n\r\ninterface SidebarProps {\r\n    className?: string\r\n}\r\n\r\nexport function Sidebar({ className }: SidebarProps) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const pathname = usePathname()\r\n\r\n    const toggleSidebar = () => setIsOpen(!isOpen)\r\n\r\n    const sidebarVariants = {\r\n        open: {\r\n            width: 280,\r\n            opacity: 1,\r\n            transition: { duration: 0.3, ease: \"easeInOut\" },\r\n        },\r\n        closed: {\r\n            width: 0,\r\n            opacity: 0,\r\n            transition: { duration: 0.3, ease: \"easeInOut\" },\r\n        },\r\n    }\r\n\r\n    const contentVariants = {\r\n        open: {\r\n            opacity: 1,\r\n            x: 0,\r\n            transition: { duration: 0.3, delay: 0.1 },\r\n        },\r\n        closed: {\r\n            opacity: 0,\r\n            x: -20,\r\n            transition: { duration: 0.2 },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <motion.aside\r\n                id=\"sidebar\"\r\n                initial={false}\r\n                animate={isOpen ? \"open\" : \"closed\"}\r\n                variants={sidebarVariants}\r\n                className={cn(\r\n                    \"fixed left-0 top-0 z-40 h-screen overflow-hidden border-r shadow-lg\",\r\n                    \"bg-background border-border\",\r\n                    className\r\n                )}\r\n                aria-label=\"Sidebar Navigation\"\r\n            >\r\n                <motion.div variants={contentVariants} className=\"flex flex-col w-[280px] h-screen\">\r\n                    <div className=\"flex items-center justify-between p-6 border-b border-border\">\r\n                        <div className=\"flex items-center gap-3\">\r\n                            <div className=\"w-8 h-8 bg-gradient-to-br from-blue-600 to-blue-700 dark:from-blue-500 dark:to-blue-800 rounded-lg flex items-center justify-center\">\r\n                                <span className=\"text-white font-bold text-sm\">A</span>\r\n                            </div>\r\n                            <div>\r\n                                <h2 className=\"text-lg font-bold text-foreground\">Admin Panel</h2>\r\n                                <p className=\"text-xs text-muted-foreground\">Ecommerce Dashboard</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <nav role=\"navigation\" className=\"flex-1 overflow-hidden p-4 space-y-2\">\r\n                        <div className=\"mb-4\">\r\n                            <p className=\"text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider mb-3\">Main Menu</p>\r\n                        </div>\r\n\r\n                        <ScrollArea className=\"h-full pb-6\">\r\n                            {DASHBOARDS.map((item) => {\r\n                                const isActive = pathname === item.url || pathname.startsWith(item.url + \"/\")\r\n                                return (\r\n                                    <Link\r\n                                        key={item.name}\r\n                                        href={item.url}\r\n                                        aria-current={isActive ? \"page\" : undefined}\r\n                                        className={cn(\r\n                                            \"flex items-center gap-3 px-3 py-2.5 rounded-lg transition-all duration-200 group focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500\",\r\n                                            {\r\n                                                \"text-blue-700 dark:text-blue-300 border border-blue-200 dark:border-blue-400/30\": isActive,\r\n                                                \"text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800 hover:text-gray-900 dark:hover:text-white\": !isActive,\r\n                                            }\r\n                                        )}\r\n                                    >\r\n                                        <div\r\n                                            className={cn(\"flex items-center justify-center w-5 h-5\", {\r\n                                                \"text-blue-600 dark:text-blue-300\": isActive,\r\n                                                \"text-muted-foreground group-hover:text-gray-600 dark:group-hover:text-gray-300\": !isActive,\r\n                                            })}\r\n                                        >\r\n                                            {item.icon}\r\n                                        </div>\r\n                                        <span className=\"font-medium text-sm\">{item.name}</span>\r\n                                        {item.badge && (\r\n                                            <span className=\"ml-auto bg-red-500/10 dark:bg-red-500/20 text-red-600 dark:text-red-400 font-medium text-[13px] px-2 py-0.5 rounded-full\">\r\n                                                {item.badge}\r\n                                            </span>\r\n                                        )}\r\n                                    </Link>\r\n                                )\r\n                            })}\r\n                        </ScrollArea>\r\n                    </nav>\r\n\r\n                    <div className=\"p-4 border-t border-border\">\r\n                        <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/30 dark:to-indigo-900/30 rounded-lg p-4\">\r\n                            <div className=\"flex items-center gap-3\">\r\n                                <div className=\"w-10 h-10 bg-gradient-to-br from-blue-600 to-indigo-600 dark:from-blue-500 dark:to-indigo-800 rounded-full flex items-center justify-center\">\r\n                                    <span className=\"text-white font-bold text-sm\">JD</span>\r\n                                </div>\r\n                                <div className=\"flex-1 min-w-0\">\r\n                                    <p className=\"text-sm font-medium text-foreground truncate\">John Doe</p>\r\n                                    <p className=\"text-xs text-muted-foreground truncate\">john@example.com</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </motion.div>\r\n            </motion.aside>\r\n\r\n            <Button\r\n                onClick={toggleSidebar}\r\n                size=\"sm\"\r\n                aria-label={isOpen ? \"Close sidebar\" : \"Open sidebar\"}\r\n                aria-expanded={isOpen}\r\n                aria-controls=\"sidebar\"\r\n                className={cn(\r\n                    \"fixed top-4 z-50 rounded-r-lg shadow-lg transition-all duration-300\",\r\n                    \"bg-blue-600 hover:bg-blue-700 text-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-blue-500\",\r\n                    {\r\n                        \"left-[280px]\": isOpen,\r\n                        \"left-0\": !isOpen,\r\n                    }\r\n                )}\r\n            >\r\n                {isOpen ? <ChevronLeft className=\"w-4 h-4\" /> : <ChevronRight className=\"w-4 h-4\" />}\r\n            </Button>\r\n\r\n            {isOpen && (\r\n                <motion.div\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    exit={{ opacity: 0 }}\r\n                    className=\"fixed inset-0 z-30 bg-black/20 backdrop-blur-sm lg:hidden\"\r\n                    onClick={toggleSidebar}\r\n                    aria-hidden=\"true\"\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {
      "@/registry/view/dashboard-1/constant/index": {
        "content": "import { BarChart3, Bell, CreditCard, Home, Package, Settings, ShoppingCart, Star, Truck, Users } from \"lucide-react\"\r\nimport type React from \"react\"\r\n\r\nexport interface DashboardItem {\r\n    name: string\r\n    icon: React.ReactNode\r\n    url: string\r\n    badge?: string | number\r\n}\r\n\r\nexport const DASHBOARDS: DashboardItem[] = [\r\n    {\r\n        name: \"Dashboard\",\r\n        icon: <Home className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard\",\r\n    },\r\n    {\r\n        name: \"Orders\",\r\n        icon: <ShoppingCart className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/orders\",\r\n        badge: \"12\",\r\n    },\r\n    {\r\n        name: \"Products\",\r\n        icon: <Package className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/products\",\r\n    },\r\n    {\r\n        name: \"Customers\",\r\n        icon: <Users className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/customers\",\r\n    },\r\n    {\r\n        name: \"Analytics\",\r\n        icon: <BarChart3 className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/analytics\",\r\n    },\r\n    {\r\n        name: \"Payments\",\r\n        icon: <CreditCard className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/payments\",\r\n    },\r\n    {\r\n        name: \"Shipping\",\r\n        icon: <Truck className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/shipping\",\r\n    },\r\n    {\r\n        name: \"Reviews\",\r\n        icon: <Star className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/reviews\",\r\n        badge: \"3\",\r\n    },\r\n    {\r\n        name: \"Notifications\",\r\n        icon: <Bell className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/notifications\",\r\n        badge: \"5\",\r\n    },\r\n    {\r\n        name: \"Settings\",\r\n        icon: <Settings className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/settings\",\r\n    },\r\n]\r\n",
        "language": "tsx"
      }
    },
    "lib": {
      "@/registry/view/dashboard-1/lib/utils.ts": {
        "content": "// this for formatting the price in the product overview page for your country currency\nexport const formatPrice = (price: number) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"EGP\",\n    useGrouping: false,\n  })\n  return formatter.format(price)\n}\n\nexport const formatDate = (dateString: string) => {\n  return new Date(dateString).toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  })\n}\n",
        "language": "typescript"
      }
    },
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {
      "@/registry/view/dashboard-1/layout": {
        "content": "\"use client\"\r\n\r\nimport type { ReactNode } from \"react\"\r\nimport { Sidebar } from \"./components/sidebar\"\r\n\r\ninterface LayoutProps {\r\n    children: ReactNode\r\n}\r\n\r\nexport default function Layout({ children }: LayoutProps) {\r\n    return (\r\n        <div className=\"relative min-h-screen \">\r\n            <Sidebar />\r\n            <main className=\"transition-all duration-300\">{children}</main>\r\n        </div>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "@/registry/view/dashboard-1/page": {
      "content": "import Dashboard from \"./components/dashboard\"\r\n\r\nexport default function Page() {\r\n    return (\r\n        <div className=\"min-h-screen bg-background\">\r\n            <Dashboard />\r\n        </div>\r\n    )\r\n}\r\n",
      "language": "tsx"
    }
  },
  "dashboard-2": {
    "components": {
      "@/registry/view/dashboard-2/components/dashboard-header": {
        "content": "import { SidebarTrigger } from \"@/components/ui/sidebar\"\nimport { Separator } from \"@/components/ui/separator\"\n\nexport function DashboardHeader() {\n  return (\n    <header className=\"group-has-data-[collapsible=icon]/sidebar-wrapper:h-12 flex h-12 shrink-0 items-center gap-2 border-b transition-[width,height] ease-linear px-4 lg:px-6\">\n      <div className=\"flex w-full items-center gap-1\">\n        <SidebarTrigger className=\"-ml-1\" />\n        <Separator\n          orientation=\"vertical\"\n          className=\"mx-2 data-[orientation=vertical]:h-4\"\n        />\n        <h1 className=\"text-base font-medium\">Dashboard</h1>\n      </div>\n    </header>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-2/components/dashboard-sidebar": {
        "content": "\"use client\"\n\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from \"@/components/ui/sidebar\"\nimport { AlertTriangle, BarChart3, Home, Package, ShoppingCart, Users } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { usePathname } from \"next/navigation\"\nimport type React from \"react\"\nimport { NavMain } from \"./nav-main\"\nimport { NavUser } from \"./nav-user\"\n\nconst data = {\n  documents: [\n    { title: \"Overview\", href: \"/dashboard\", icon: Home },\n    { title: \"Orders\", href: \"/dashboard/orders\", icon: ShoppingCart },\n    {\n      title: \"Sold Out Products\",\n      href: \"/dashboard/sold-out\",\n      icon: AlertTriangle,\n    },\n    { title: \"Products\", href: \"/dashboard/products\", icon: Package },\n    { title: \"Customers\", href: \"/dashboard/customers\", icon: Users },\n    { title: \"Analytics\", href: \"/dashboard/analytics\", icon: BarChart3 },\n  ],\n  user: {\n    name: \"shadcn\",\n    email: \"m@example.com\",\n    avatar: \"/avatars/shadcn.jpg\",\n  },\n}\n\nexport default function DashboardSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  const pathname = usePathname()\n  return (\n    <Sidebar collapsible=\"offcanvas\" {...props}>\n      <SidebarHeader>\n        <SidebarMenu>\n          <SidebarMenuItem>\n            <SidebarMenuButton asChild className=\"data-[slot=sidebar-menu-button]:!p-1.5\">\n              <Link href=\"#\">\n                <span className=\"text-base font-semibold\">Acme Inc.</span>\n              </Link>\n            </SidebarMenuButton>\n          </SidebarMenuItem>\n        </SidebarMenu>\n      </SidebarHeader>\n      <SidebarContent>\n        <NavMain items={data.documents} />\n      </SidebarContent>\n      <SidebarFooter>\n        <NavUser user={data.user} />\n      </SidebarFooter>\n    </Sidebar>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-2/components/nav-main": {
        "content": "import type { LucideIcon } from \"lucide-react\"\n\nimport {\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from \"@/components/ui/sidebar\"\n\nexport function NavMain({\n  items,\n}: {\n  items: {\n    title: string\n    href: string \n    icon?: LucideIcon\n  }[]\n}) {\n  return (\n    <SidebarGroup>\n      <SidebarGroupContent className=\"flex flex-col gap-1 md:gap-2\">\n        <SidebarMenu>\n          {items.map((item) => (\n            <SidebarMenuItem key={item.title}>\n              <SidebarMenuButton tooltip={item.title}>\n                {item.icon && <item.icon className=\"size-4 md:size-5\" />}\n                <span className=\"text-sm md:text-base\">{item.title}</span>\n              </SidebarMenuButton>\n            </SidebarMenuItem>\n          ))}\n        </SidebarMenu>\n      </SidebarGroupContent>\n    </SidebarGroup>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-2/components/nav-user": {
        "content": "\"use client\"\n\nimport {\n  BellIcon,\n  CreditCardIcon,\n  LogOutIcon,\n  MoreVerticalIcon,\n  UserCircleIcon,\n} from \"lucide-react\"\n\nimport {\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/components/ui/avatar\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\n\nexport function NavUser({\n  user,\n}: {\n  user: {\n    name: string\n    email: string\n    avatar: string\n  }\n}) {\n  const { isMobile } = useSidebar()\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton\n              size=\"lg\"\n              className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n            >\n              <Avatar className=\"h-8 w-8 rounded-lg grayscale\">\n                <AvatarImage src={user.avatar} alt={user.name} />\n                <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n              </Avatar>\n              <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                <span className=\"truncate font-medium\">{user.name}</span>\n                <span className=\"truncate text-xs text-muted-foreground\">\n                  {user.email}\n                </span>\n              </div>\n              <MoreVerticalIcon className=\"ml-auto size-4\" />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\n            side={isMobile ? \"bottom\" : \"right\"}\n            align=\"end\"\n            sideOffset={4}\n          >\n            <DropdownMenuLabel className=\"p-0 font-normal\">\n              <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n                <Avatar className=\"h-8 w-8 rounded-lg\">\n                  <AvatarImage src={user.avatar} alt={user.name} />\n                  <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n                </Avatar>\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                  <span className=\"truncate font-medium\">{user.name}</span>\n                  <span className=\"truncate text-xs text-muted-foreground\">\n                    {user.email}\n                  </span>\n                </div>\n              </div>\n            </DropdownMenuLabel>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem>\n                <UserCircleIcon />\n                Account\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <CreditCardIcon />\n                Billing\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <BellIcon />\n                Notifications\n              </DropdownMenuItem>\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>\n              <LogOutIcon />\n              Log out\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-2/components/section-cards": {
        "content": "import { TrendingDownIcon, TrendingUpIcon } from \"lucide-react\"\n\nimport { Badge } from \"@/components/ui/badge\"\nimport {\n  Card,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\n\nimport { formatPrice } from \"../lib/utils\"\n\nexport function SectionCards() {\n  return (\n    <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4\">\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm \">\n        <CardHeader className=\"relative px-3 py-3 md:px-4 md:py-4\">\n          <CardDescription>Total Revenue</CardDescription>\n          <CardTitle className=\"text-xl md:text-2xl lg:text-3xl font-semibold tabular-nums text-green-600\">\n            {formatPrice(85637)}\n          </CardTitle>\n          <div className=\"absolute right-3 top-3 md:right-4 md:top-4\">\n            <Badge\n              variant=\"outline\"\n              className=\"flex flex-row gap-1 rounded-lg text-xs text-green-600\"\n            >\n              <TrendingUpIcon className=\"size-3\" />\n              +12.5%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-xs sm:text-sm px-3 py-2 md:px-4 md:py-3\">\n          <div className=\"line-clamp-1 flex gap-1 md:gap-2 font-medium\">\n            Trending up this month{\" \"}\n            <TrendingUpIcon className=\"size-3 md:size-4\" />\n          </div>\n          <div className=\"text-muted-foreground text-xs md:text-sm\">\n            Visitors for the last 6 months\n          </div>\n        </CardFooter>\n      </Card>\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm \">\n        <CardHeader className=\"relative px-3 py-3 md:px-4 md:py-4\">\n          <CardDescription>New Customers</CardDescription>\n          <CardTitle className=\"text-xl md:text-2xl lg:text-3xl font-semibold tabular-nums\">\n            1,234\n          </CardTitle>\n          <div className=\"absolute right-3 top-3 md:right-4 md:top-4\">\n            <Badge\n              variant=\"outline\"\n              className=\"flex gap-1 rounded-lg text-xs text-destructive\"\n            >\n              <TrendingDownIcon className=\"size-3\" />\n              -20%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-xs sm:text-sm px-3 py-2 md:px-4 md:py-3\">\n          <div className=\"line-clamp-1 flex gap-1 md:gap-2 font-medium\">\n            Down 20% this period{\" \"}\n            <TrendingDownIcon className=\"size-3 md:size-4\" />\n          </div>\n          <div className=\"text-muted-foreground text-xs md:text-sm\">\n            Acquisition needs attention\n          </div>\n        </CardFooter>\n      </Card>\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm\">\n        <CardHeader className=\"relative px-3 py-3 md:px-4 md:py-4\">\n          <CardDescription>Active Accounts</CardDescription>\n          <CardTitle className=\"text-xl md:text-2xl lg:text-3xl font-semibold tabular-nums\">\n            45,678\n          </CardTitle>\n          <div className=\"absolute right-3 top-3 md:right-4 md:top-4\">\n            <Badge\n              variant=\"outline\"\n              className=\"flex gap-1 rounded-lg text-xs text-green-600\"\n            >\n              <TrendingUpIcon className=\"size-3\" />\n              +12.5%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-xs sm:text-sm px-3 py-2 md:px-4 md:py-3\">\n          <div className=\"line-clamp-1 flex gap-1 md:gap-2 font-medium\">\n            Strong user retention{\" \"}\n            <TrendingUpIcon className=\"size-3 md:size-4\" />\n          </div>\n          <div className=\"text-muted-foreground text-xs md:text-sm\">\n            Engagement exceed targets\n          </div>\n        </CardFooter>\n      </Card>\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm\">\n        <CardHeader className=\"relative px-3 py-3 md:px-4 md:py-4\">\n          <CardDescription>Growth Rate</CardDescription>\n          <CardTitle className=\"text-xl md:text-2xl lg:text-3xl font-semibold tabular-nums\">\n            4.5%\n          </CardTitle>\n          <div className=\"absolute right-3 top-3 md:right-4 md:top-4\">\n            <Badge\n              variant=\"outline\"\n              className=\"flex gap-1 rounded-lg text-xs text-green-600\"\n            >\n              <TrendingUpIcon className=\"size-3\" />\n              +4.5%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-xs sm:text-sm px-3 py-2 md:px-4 md:py-3\">\n          <div className=\"line-clamp-1 flex gap-1 md:gap-2 font-medium\">\n            Steady performance <TrendingUpIcon className=\"size-3 md:size-4\" />\n          </div>\n          <div className=\"text-muted-foreground text-xs md:text-sm\">\n            Meets growth projections\n          </div>\n        </CardFooter>\n      </Card>\n    </div>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {
      "@/registry/view/dashboard-2/lib/utils.ts": {
        "content": "// this for formatting the price in the product overview page for your country currency\nexport const formatPrice = (price: number) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"EGP\",\n    useGrouping: false,\n  })\n  return formatter.format(price)\n}\n",
        "language": "typescript"
      }
    },
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/dashboard-2/page": {
      "content": "\"use client\"\n\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/components/ui/avatar\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\"\nimport { SidebarInset, SidebarProvider } from \"@/components/ui/sidebar\"\nimport { ArrowUpRight } from \"lucide-react\"\nimport dynamic from \"next/dynamic\"\nimport Link from \"next/link\"\nimport { formatPrice } from \"../dashboard-3/lib/utils\"\nimport { DashboardHeader } from \"./components/dashboard-header\"\nimport DashboardSidebar from \"./components/dashboard-sidebar\"\nimport { SectionCards } from \"./components/section-cards\"\n\nconst ReactECharts = dynamic(() => import(\"echarts-for-react\"), { ssr: false })\nconst salesData = [\n  { name: \"Jan\", sales: 4000 },\n  { name: \"Feb\", sales: 3000 },\n  { name: \"Mar\", sales: 5000 },\n  { name: \"April\", sales: 2780 },\n  { name: \"May\", sales: 1890 },\n  { name: \"June\", sales: 6390 },\n  { name: \"July\", sales: 3490 },\n  { name: \"Aug\", sales: 9688 },\n  { name: \"Seb\", sales: 2500 },\n  { name: \"Oct\", sales: 7538 },\n  { name: \"Nov\", sales: 1598 },\n  { name: \"Dec\", sales: 7412 },\n]\nconst salesChartOptions = {\n  tooltip: {\n    trigger: \"axis\",\n    backgroundColor: \"#fff\",\n    borderColor: \"#e5e7eb\",\n    borderWidth: 1,\n    textStyle: { color: \"#111827\", fontSize: 12 },\n  },\n  grid: { left: \"3%\", right: \"4%\", bottom: \"3%\", containLabel: true },\n  xAxis: {\n    type: \"category\",\n    data: salesData.map((d) => d.name),\n    axisTick: { show: false },\n    axisLine: { lineStyle: { color: \"#d1d5db\" } },\n    axisLabel: {\n      fontSize: 12,\n      interval: (index: number, value: string) => {\n        return window.innerWidth > 640 ? true : index % 2 === 0\n      },\n    },\n  },\n  yAxis: {\n    type: \"value\",\n    axisLine: { show: false },\n    splitLine: { lineStyle: { color: \"#e5e7eb\", type: \"dashed\" } },\n    axisLabel: { fontSize: 12 },\n  },\n  series: [\n    {\n      data: salesData.map((d) => d.sales),\n      type: \"bar\",\n      itemStyle: {\n        borderRadius: [4, 4, 0, 0],\n        color: \"#6366f1\",\n      },\n      barWidth: \"40%\",\n    },\n  ],\n  media: [\n    {\n      query: { maxWidth: 640 },\n      option: {\n        grid: { left: \"8%\", right: \"8%\" },\n        xAxis: { axisLabel: { fontSize: 10, rotate: 45 } },\n        yAxis: { axisLabel: { fontSize: 10 } },\n      },\n    },\n  ],\n}\n\nconst recentOrders = [\n  {\n    id: \"ORD-7352\",\n    date: \"2025-04-24\",\n    customer: \"Emma Johnson\",\n    amount: 235.89,\n    status: \"Delivered\",\n  },\n  {\n    id: \"ORD-7351\",\n    date: \"2025-04-23\",\n    customer: \"Michael Chen\",\n    amount: 125.99,\n    status: \"Processing\",\n  },\n  {\n    id: \"ORD-7350\",\n    date: \"2025-04-23\",\n    customer: \"Sophia Martinez\",\n    amount: 432.2,\n    status: \"Shipped\",\n  },\n  {\n    id: \"ORD-7349\",\n    date: \"2025-04-22\",\n    customer: \"James Wilson\",\n    amount: 76.45,\n    status: \"Delivered\",\n  },\n  {\n    id: \"ORD-7348\",\n    date: \"2025-04-21\",\n    customer: \"Olivia Brown\",\n    amount: 189.5,\n    status: \"Processing\",\n  },\n  {\n    id: \"ORD-7347\",\n    date: \"2025-04-20\",\n    customer: \"William Davis\",\n    amount: 312.75,\n    status: \"Delivered\",\n  },\n  {\n    id: \"ORD-7346\",\n    date: \"2025-04-19\",\n    customer: \"Ava Garcia\",\n    amount: 94.2,\n    status: \"Shipped\",\n  },\n]\n\nexport default function DashboardPage() {\n  return (\n    <SidebarProvider>\n      {/* Here you can choose of custom sidebar behavior (inset, sidebar, floating)  default use: sidebar */}\n      <DashboardSidebar variant=\"inset\" />\n      <SidebarInset>\n        <DashboardHeader />\n        <div className=\"flex flex-1 flex-col px-4 lg:px-6\">\n          <div className=\"flex flex-1 flex-col gap-2\">\n            <div className=\"flex flex-col gap-3 py-3 md:gap-6 md:py-6\">\n              <SectionCards />\n              <div className=\"grid gap-4 md:gap-6 grid-cols-1\">\n                <Card className=\"col-span-1 lg:col-span-8\">\n                  <CardHeader className=\"px-4 md:px-6 py-3 md:py-4\">\n                    <CardTitle className=\"text-base md:text-lg\">\n                      Sales Overview\n                    </CardTitle>\n                    <CardDescription className=\"text-xs md:text-sm\">\n                      Yearly sales performance for the last 12 months\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"pl-0 md:pl-2 pt-0 pb-4\">\n                    <div className=\"h-[250px] md:h-[300px] lg:h-[400px] max-w-full\">\n                      <ReactECharts\n                        option={salesChartOptions}\n                        style={{ width: \"100%\", height: \"100%\" }}\n                      />\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n              <Card>\n                <CardHeader className=\"px-3 md:px-6 py-2 md:py-4\">\n                  <CardTitle className=\"text-base md:text-lg\">\n                    Recent Orders\n                  </CardTitle>\n                  <CardDescription className=\"text-xs md:text-sm\">\n                    Detailed view of the last 7 days order history\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"p-0\">\n                  <div className=\"overflow-auto max-w-full custom-scrollbar\">\n                    <Table className=\"w-full min-w-[500px]\">\n                      <TableHeader>\n                        <TableRow>\n                          <TableHead className=\"text-xs md:text-sm font-medium p-2 md:p-4\">\n                            Order ID\n                          </TableHead>\n                          <TableHead className=\"text-xs md:text-sm font-medium p-2 md:p-4\">\n                            Date\n                          </TableHead>\n                          <TableHead className=\"text-xs md:text-sm font-medium p-2 md:p-4\">\n                            Customer\n                          </TableHead>\n                          <TableHead className=\"text-xs md:text-sm font-medium p-2 md:p-4\">\n                            Status\n                          </TableHead>\n                          <TableHead className=\"text-xs md:text-sm font-medium text-right p-2 md:p-4\">\n                            Amount\n                          </TableHead>\n                        </TableRow>\n                      </TableHeader>\n                      <TableBody>\n                        {recentOrders.map((order) => (\n                          <TableRow key={order.id}>\n                            <TableCell className=\"text-xs md:text-sm font-medium text-foreground p-2 md:p-4 text-nowrap\">\n                              {order.id}\n                            </TableCell>\n                            <TableCell className=\"text-xs md:text-sm text-muted-foreground p-2 md:p-4 text-nowrap\">\n                              {order.date}\n                            </TableCell>\n                            <TableCell className=\"text-xs md:text-sm p-2 md:p-4\">\n                              <div className=\"flex items-center gap-1 md:gap-2\">\n                                <Avatar className=\"h-6 w-6 md:h-8 md:w-8\">\n                                  <AvatarImage\n                                    src={`https://api.dicebear.com/6.x/initials/svg?seed=${order.customer}`}\n                                    alt={order.customer}\n                                  />\n                                  <AvatarFallback>\n                                    {order.customer.charAt(0)}\n                                  </AvatarFallback>\n                                </Avatar>\n                                <span className=\"text-foreground text-nowrap line-clamp-1\">\n                                  {order.customer}\n                                </span>\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <Badge\n                                variant={\n                                  order.status === \"Delivered\"\n                                    ? \"default\"\n                                    : order.status === \"Processing\"\n                                      ? \"secondary\"\n                                      : \"outline\"\n                                }\n                                className={\n                                  order.status === \"Delivered\"\n                                    ? \"bg-green-100 text-green-800 hover:bg-green-100\"\n                                    : order.status === \"Processing\"\n                                      ? \"bg-amber-100 text-amber-800 hover:bg-amber-100\"\n                                      : \"bg-blue-100 text-blue-800 hover:bg-blue-100\"\n                                }\n                              >\n                                {order.status}\n                              </Badge>\n                            </TableCell>\n                            <TableCell className=\"text-xs md:text-sm text-right text-foreground p-2 md:p-4\">\n                              {formatPrice(order.amount)}\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </div>\n                </CardContent>\n                <CardFooter className=\"flex justify-end px-3 md:px-6 py-2 md:py-4\">\n                  <Button\n                    asChild\n                    variant=\"outline\"\n                    className=\"h-8 md:h-10 text-xs md:text-sm\"\n                  >\n                    <Link href=\"/dashboard/orders\">\n                      View All Orders\n                      <ArrowUpRight className=\"ml-1 md:ml-2 h-3 w-3 md:h-4 md:w-4\" />\n                    </Link>\n                  </Button>\n                </CardFooter>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </SidebarInset>\n    </SidebarProvider>\n  )\n}\n",
      "language": "tsx"
    }
  },
  "dashboard-3": {
    "components": {
      "@/registry/view/dashboard-3/components/app-sidebar": {
        "content": "\"use client\"\n\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from \"@/components/ui/sidebar\"\nimport {\n  ArrowUpCircleIcon,\n  BarChartIcon,\n  CameraIcon,\n  ClipboardListIcon,\n  DatabaseIcon,\n  FileCodeIcon,\n  FileIcon,\n  FileTextIcon,\n  FolderIcon,\n  HelpCircleIcon,\n  LayoutDashboardIcon,\n  ListIcon,\n  Package2,\n  SearchIcon,\n  SettingsIcon,\n  UsersIcon,\n} from \"lucide-react\"\nimport Link from \"next/link\"\nimport * as React from \"react\"\nimport { NavMain } from \"../../dashboard-2/components/nav-main\"\nimport { NavUser } from \"../../dashboard-2/components/nav-user\"\nimport { NavDocuments } from \"./nav-documents\"\nimport { NavSecondary } from \"./nav-secondary\"\n\nconst data = {\n  user: {\n    name: \"john\",\n    email: \"john@example.com\",\n    avatar: \"/avatars/shadcn.jpg\",\n  },\n  navMain: [\n    {\n      title: \"Dashboard\",\n      url: \"#\",\n      icon: LayoutDashboardIcon,\n    },\n    {\n      title: \"Orders\",\n      url: \"#\",\n      icon: Package2,\n    },\n    {\n      title: \"Lifecycle\",\n      url: \"#\",\n      icon: ListIcon,\n    },\n    {\n      title: \"Analytics\",\n      url: \"#\",\n      icon: BarChartIcon,\n    },\n    {\n      title: \"Projects\",\n      url: \"#\",\n      icon: FolderIcon,\n    },\n    {\n      title: \"Team\",\n      url: \"#\",\n      icon: UsersIcon,\n    },\n  ],\n  navClouds: [\n    {\n      title: \"Capture\",\n      icon: CameraIcon,\n      isActive: true,\n      url: \"#\",\n      items: [\n        {\n          title: \"Active Proposals\",\n          url: \"#\",\n        },\n        {\n          title: \"Archived\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Proposal\",\n      icon: FileTextIcon,\n      url: \"#\",\n      items: [\n        {\n          title: \"Active Proposals\",\n          url: \"#\",\n        },\n        {\n          title: \"Archived\",\n          url: \"#\",\n        },\n      ],\n    },\n    {\n      title: \"Prompts\",\n      icon: FileCodeIcon,\n      url: \"#\",\n      items: [\n        {\n          title: \"Active Proposals\",\n          url: \"#\",\n        },\n        {\n          title: \"Archived\",\n          url: \"#\",\n        },\n      ],\n    },\n  ],\n  navSecondary: [\n    {\n      title: \"Settings\",\n      url: \"#\",\n      icon: SettingsIcon,\n    },\n    {\n      title: \"Get Help\",\n      url: \"#\",\n      icon: HelpCircleIcon,\n    },\n    {\n      title: \"Search\",\n      url: \"#\",\n      icon: SearchIcon,\n    },\n  ],\n  documents: [\n    {\n      name: \"Data Library\",\n      url: \"#\",\n      icon: DatabaseIcon,\n    },\n    {\n      name: \"Reports\",\n      url: \"#\",\n      icon: ClipboardListIcon,\n    },\n    {\n      name: \"Word Assistant\",\n      url: \"#\",\n      icon: FileIcon,\n    },\n  ],\n}\n\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  return (\n    <Sidebar collapsible=\"offcanvas\" {...props}>\n      <SidebarHeader>\n        <SidebarMenu>\n          <SidebarMenuItem>\n            <SidebarMenuButton\n              asChild\n              className=\"data-[slot=sidebar-menu-button]:!p-1.5\"\n            >\n              <Link href=\"#\">\n                <ArrowUpCircleIcon className=\"h-5 w-5\" />\n                <span className=\"text-base font-semibold\">Acme Inc.</span>\n              </Link>\n            </SidebarMenuButton>\n          </SidebarMenuItem>\n        </SidebarMenu>\n      </SidebarHeader>\n      <SidebarContent className=\"hide-scrollbar\">\n        <NavMain items={data.navMain} />\n        <NavDocuments items={data.documents} />\n        <NavSecondary items={data.navSecondary} className=\"mt-auto\" />\n      </SidebarContent>\n      <SidebarFooter>\n        <NavUser user={data.user} />\n      </SidebarFooter>\n    </Sidebar>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-3/components/chart-area-interactive": {
        "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { ToggleGroup, ToggleGroupItem } from \"@/components/ui/toggle-group\"\n\nexport const description = \"An interactive area chart\"\n\nconst chartData = [\n  { date: \"2024-04-01\", desktop: 222, mobile: 150 },\n  { date: \"2024-04-02\", desktop: 97, mobile: 180 },\n  { date: \"2024-04-03\", desktop: 167, mobile: 120 },\n  { date: \"2024-04-04\", desktop: 242, mobile: 260 },\n  { date: \"2024-04-05\", desktop: 373, mobile: 290 },\n  { date: \"2024-04-06\", desktop: 301, mobile: 340 },\n  { date: \"2024-04-07\", desktop: 245, mobile: 180 },\n  { date: \"2024-04-08\", desktop: 409, mobile: 320 },\n  { date: \"2024-04-09\", desktop: 59, mobile: 110 },\n  { date: \"2024-04-10\", desktop: 261, mobile: 190 },\n  { date: \"2024-04-11\", desktop: 327, mobile: 350 },\n  { date: \"2024-04-12\", desktop: 292, mobile: 210 },\n  { date: \"2024-04-13\", desktop: 342, mobile: 380 },\n  { date: \"2024-04-14\", desktop: 137, mobile: 220 },\n  { date: \"2024-04-15\", desktop: 120, mobile: 170 },\n  { date: \"2024-04-16\", desktop: 138, mobile: 190 },\n  { date: \"2024-04-17\", desktop: 446, mobile: 360 },\n  { date: \"2024-04-18\", desktop: 364, mobile: 410 },\n  { date: \"2024-04-19\", desktop: 243, mobile: 180 },\n  { date: \"2024-04-20\", desktop: 89, mobile: 150 },\n  { date: \"2024-04-21\", desktop: 137, mobile: 200 },\n  { date: \"2024-04-22\", desktop: 224, mobile: 170 },\n  { date: \"2024-04-23\", desktop: 138, mobile: 230 },\n  { date: \"2024-04-24\", desktop: 387, mobile: 290 },\n  { date: \"2024-04-25\", desktop: 215, mobile: 250 },\n  { date: \"2024-04-26\", desktop: 75, mobile: 130 },\n  { date: \"2024-04-27\", desktop: 383, mobile: 420 },\n  { date: \"2024-04-28\", desktop: 122, mobile: 180 },\n  { date: \"2024-04-29\", desktop: 315, mobile: 240 },\n  { date: \"2024-04-30\", desktop: 454, mobile: 380 },\n  { date: \"2024-05-01\", desktop: 165, mobile: 220 },\n  { date: \"2024-05-02\", desktop: 293, mobile: 310 },\n  { date: \"2024-05-03\", desktop: 247, mobile: 190 },\n  { date: \"2024-05-04\", desktop: 385, mobile: 420 },\n  { date: \"2024-05-05\", desktop: 481, mobile: 390 },\n  { date: \"2024-05-06\", desktop: 498, mobile: 520 },\n  { date: \"2024-05-07\", desktop: 388, mobile: 300 },\n  { date: \"2024-05-08\", desktop: 149, mobile: 210 },\n  { date: \"2024-05-09\", desktop: 227, mobile: 180 },\n  { date: \"2024-05-10\", desktop: 293, mobile: 330 },\n  { date: \"2024-05-11\", desktop: 335, mobile: 270 },\n  { date: \"2024-05-12\", desktop: 197, mobile: 240 },\n  { date: \"2024-05-13\", desktop: 197, mobile: 160 },\n  { date: \"2024-05-14\", desktop: 448, mobile: 490 },\n  { date: \"2024-05-15\", desktop: 473, mobile: 380 },\n  { date: \"2024-05-16\", desktop: 338, mobile: 400 },\n  { date: \"2024-05-17\", desktop: 499, mobile: 420 },\n  { date: \"2024-05-18\", desktop: 315, mobile: 350 },\n  { date: \"2024-05-19\", desktop: 235, mobile: 180 },\n  { date: \"2024-05-20\", desktop: 177, mobile: 230 },\n  { date: \"2024-05-21\", desktop: 82, mobile: 140 },\n  { date: \"2024-05-22\", desktop: 81, mobile: 120 },\n  { date: \"2024-05-23\", desktop: 252, mobile: 290 },\n  { date: \"2024-05-24\", desktop: 294, mobile: 220 },\n  { date: \"2024-05-25\", desktop: 201, mobile: 250 },\n  { date: \"2024-05-26\", desktop: 213, mobile: 170 },\n  { date: \"2024-05-27\", desktop: 420, mobile: 460 },\n  { date: \"2024-05-28\", desktop: 233, mobile: 190 },\n  { date: \"2024-05-29\", desktop: 78, mobile: 130 },\n  { date: \"2024-05-30\", desktop: 340, mobile: 280 },\n  { date: \"2024-05-31\", desktop: 178, mobile: 230 },\n  { date: \"2024-06-01\", desktop: 178, mobile: 200 },\n  { date: \"2024-06-02\", desktop: 470, mobile: 410 },\n  { date: \"2024-06-03\", desktop: 103, mobile: 160 },\n  { date: \"2024-06-04\", desktop: 439, mobile: 380 },\n  { date: \"2024-06-05\", desktop: 88, mobile: 140 },\n  { date: \"2024-06-06\", desktop: 294, mobile: 250 },\n  { date: \"2024-06-07\", desktop: 323, mobile: 370 },\n  { date: \"2024-06-08\", desktop: 385, mobile: 320 },\n  { date: \"2024-06-09\", desktop: 438, mobile: 480 },\n  { date: \"2024-06-10\", desktop: 155, mobile: 200 },\n  { date: \"2024-06-11\", desktop: 92, mobile: 150 },\n  { date: \"2024-06-12\", desktop: 492, mobile: 420 },\n  { date: \"2024-06-13\", desktop: 81, mobile: 130 },\n  { date: \"2024-06-14\", desktop: 426, mobile: 380 },\n  { date: \"2024-06-15\", desktop: 307, mobile: 350 },\n  { date: \"2024-06-16\", desktop: 371, mobile: 310 },\n  { date: \"2024-06-17\", desktop: 475, mobile: 520 },\n  { date: \"2024-06-18\", desktop: 107, mobile: 170 },\n  { date: \"2024-06-19\", desktop: 341, mobile: 290 },\n  { date: \"2024-06-20\", desktop: 408, mobile: 450 },\n  { date: \"2024-06-21\", desktop: 169, mobile: 210 },\n  { date: \"2024-06-22\", desktop: 317, mobile: 270 },\n  { date: \"2024-06-23\", desktop: 480, mobile: 530 },\n  { date: \"2024-06-24\", desktop: 132, mobile: 180 },\n  { date: \"2024-06-25\", desktop: 141, mobile: 190 },\n  { date: \"2024-06-26\", desktop: 434, mobile: 380 },\n  { date: \"2024-06-27\", desktop: 448, mobile: 490 },\n  { date: \"2024-06-28\", desktop: 149, mobile: 200 },\n  { date: \"2024-06-29\", desktop: 103, mobile: 160 },\n  { date: \"2024-06-30\", desktop: 446, mobile: 400 },\n]\n\nconst chartConfig = {\n  visitors: {\n    label: \"Visitors\",\n  },\n  desktop: {\n    label: \"Desktop\",\n    color: \"hsl(var(--chart-1))\",\n  },\n  mobile: {\n    label: \"Mobile\",\n    color: \"hsl(var(--chart-2))\",\n  },\n} satisfies ChartConfig\n\nexport function ChartAreaInteractive() {\n  const isMobile = useIsMobile()\n  const [timeRange, setTimeRange] = React.useState(\"30d\")\n\n  React.useEffect(() => {\n    if (isMobile) {\n      setTimeRange(\"7d\")\n    }\n  }, [isMobile])\n\n  const filteredData = chartData.filter((item) => {\n    const date = new Date(item.date)\n    const referenceDate = new Date(\"2024-06-30\")\n    let daysToSubtract = 90\n    if (timeRange === \"30d\") {\n      daysToSubtract = 30\n    } else if (timeRange === \"7d\") {\n      daysToSubtract = 7\n    }\n    const startDate = new Date(referenceDate)\n    startDate.setDate(startDate.getDate() - daysToSubtract)\n    return date >= startDate\n  })\n\n  return (\n    <Card className=\"@container/card\">\n      <CardHeader className=\"relative\">\n        <CardTitle>Total Visitors</CardTitle>\n        <CardDescription>\n          <span className=\"@[540px]/card:block hidden\">\n            Total for the last 3 months\n          </span>\n          <span className=\"@[540px]/card:hidden\">Last 3 months</span>\n        </CardDescription>\n        <div className=\"absolute right-4 top-4\">\n          <ToggleGroup\n            type=\"single\"\n            value={timeRange}\n            onValueChange={setTimeRange}\n            variant=\"outline\"\n            className=\"@[767px]/card:flex hidden\"\n          >\n            <ToggleGroupItem value=\"90d\" className=\"h-8 px-2.5\">\n              Last 3 months\n            </ToggleGroupItem>\n            <ToggleGroupItem value=\"30d\" className=\"h-8 px-2.5\">\n              Last 30 days\n            </ToggleGroupItem>\n            <ToggleGroupItem value=\"7d\" className=\"h-8 px-2.5\">\n              Last 7 days\n            </ToggleGroupItem>\n          </ToggleGroup>\n          <Select value={timeRange} onValueChange={setTimeRange}>\n            <SelectTrigger\n              className=\"@[767px]/card:hidden flex w-40\"\n              aria-label=\"Select a value\"\n            >\n              <SelectValue placeholder=\"Last 3 months\" />\n            </SelectTrigger>\n            <SelectContent className=\"rounded-xl\">\n              <SelectItem value=\"90d\" className=\"rounded-lg\">\n                Last 3 months\n              </SelectItem>\n              <SelectItem value=\"30d\" className=\"rounded-lg\">\n                Last 30 days\n              </SelectItem>\n              <SelectItem value=\"7d\" className=\"rounded-lg\">\n                Last 7 days\n              </SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </CardHeader>\n      <CardContent className=\"px-2 pt-4 sm:px-6 sm:pt-6\">\n        <ChartContainer\n          config={chartConfig}\n          className=\"aspect-auto h-[250px] w-full\"\n        >\n          <AreaChart data={filteredData}>\n            <defs>\n              <linearGradient id=\"fillDesktop\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop\n                  offset=\"5%\"\n                  stopColor=\"var(--color-desktop)\"\n                  stopOpacity={1.0}\n                />\n                <stop\n                  offset=\"95%\"\n                  stopColor=\"var(--color-desktop)\"\n                  stopOpacity={0.1}\n                />\n              </linearGradient>\n              <linearGradient id=\"fillMobile\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop\n                  offset=\"5%\"\n                  stopColor=\"var(--color-mobile)\"\n                  stopOpacity={0.8}\n                />\n                <stop\n                  offset=\"95%\"\n                  stopColor=\"var(--color-mobile)\"\n                  stopOpacity={0.1}\n                />\n              </linearGradient>\n            </defs>\n            <CartesianGrid vertical={false} />\n            <XAxis\n              dataKey=\"date\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              minTickGap={32}\n              tickFormatter={(value) => {\n                const date = new Date(value)\n                return date.toLocaleDateString(\"en-US\", {\n                  month: \"short\",\n                  day: \"numeric\",\n                })\n              }}\n            />\n            <ChartTooltip\n              cursor={false}\n              content={\n                <ChartTooltipContent\n                  labelFormatter={(value) => {\n                    return new Date(value).toLocaleDateString(\"en-US\", {\n                      month: \"short\",\n                      day: \"numeric\",\n                    })\n                  }}\n                  indicator=\"dot\"\n                />\n              }\n            />\n            <Area\n              dataKey=\"mobile\"\n              type=\"natural\"\n              fill=\"url(#fillMobile)\"\n              stroke=\"var(--color-mobile)\"\n              stackId=\"a\"\n            />\n            <Area\n              dataKey=\"desktop\"\n              type=\"natural\"\n              fill=\"url(#fillDesktop)\"\n              stroke=\"var(--color-desktop)\"\n              stackId=\"a\"\n            />\n          </AreaChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-3/components/data-table": {
        "content": "\"use client\"\n\nimport * as React from \"react\"\nimport {\n  closestCenter,\n  DndContext,\n  KeyboardSensor,\n  MouseSensor,\n  TouchSensor,\n  useSensor,\n  useSensors,\n  type DragEndEvent,\n  type UniqueIdentifier,\n} from \"@dnd-kit/core\"\nimport { restrictToVerticalAxis } from \"@dnd-kit/modifiers\"\nimport {\n  arrayMove,\n  SortableContext,\n  useSortable,\n  verticalListSortingStrategy,\n} from \"@dnd-kit/sortable\"\nimport { CSS } from \"@dnd-kit/utilities\"\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  flexRender,\n  getCoreRowModel,\n  getFacetedRowModel,\n  getFacetedUniqueValues,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  Row,\n  SortingState,\n  useReactTable,\n  VisibilityState,\n} from \"@tanstack/react-table\"\nimport {\n  CheckCircle2Icon,\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  ChevronsLeftIcon,\n  ChevronsRightIcon,\n  ColumnsIcon,\n  GripVerticalIcon,\n  LoaderIcon,\n  MoreVerticalIcon,\n  PlusIcon,\n  TrendingUpIcon,\n} from \"lucide-react\"\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\nimport { toast } from \"sonner\"\nimport { z } from \"zod\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport {\n  Sheet,\n  SheetClose,\n  SheetContent,\n  SheetDescription,\n  SheetFooter,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\"\n\nexport const schema = z.object({\n  id: z.number(),\n  header: z.string(),\n  type: z.string(),\n  status: z.string(),\n  target: z.string(),\n  limit: z.string(),\n  reviewer: z.string(),\n})\n\nfunction DragHandle({ id }: { id: number }) {\n  const { attributes, listeners } = useSortable({\n    id,\n  })\n\n  return (\n    <Button\n      {...attributes}\n      {...listeners}\n      variant=\"ghost\"\n      size=\"icon\"\n      className=\"size-7 text-muted-foreground hover:bg-transparent\"\n    >\n      <GripVerticalIcon className=\"size-3 text-muted-foreground\" />\n      <span className=\"sr-only\">Drag to reorder</span>\n    </Button>\n  )\n}\n\nconst columns: ColumnDef<z.infer<typeof schema>>[] = [\n  {\n    id: \"drag\",\n    header: () => null,\n    cell: ({ row }) => <DragHandle id={row.original.id} />,\n  },\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <div className=\"flex items-center justify-center\">\n        <Checkbox\n          checked={\n            table.getIsAllPageRowsSelected() ||\n            (table.getIsSomePageRowsSelected() && \"indeterminate\")\n          }\n          onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n          aria-label=\"Select all\"\n        />\n      </div>\n    ),\n    cell: ({ row }) => (\n      <div className=\"flex items-center justify-center\">\n        <Checkbox\n          checked={row.getIsSelected()}\n          onCheckedChange={(value) => row.toggleSelected(!!value)}\n          aria-label=\"Select row\"\n        />\n      </div>\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"header\",\n    header: \"Header\",\n    cell: ({ row }) => {\n      return <TableCellViewer item={row.original} />\n    },\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"type\",\n    header: \"Section Type\",\n    cell: ({ row }) => (\n      <div className=\"w-32\">\n        <Badge variant=\"outline\" className=\"px-1.5 text-muted-foreground\">\n          {row.original.type}\n        </Badge>\n      </div>\n    ),\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => (\n      <Badge\n        variant=\"outline\"\n        className=\"flex gap-1 px-1.5 text-muted-foreground [&_svg]:size-3\"\n      >\n        {row.original.status === \"Done\" ? (\n          <CheckCircle2Icon className=\"text-green-500 dark:text-green-400\" />\n        ) : (\n          <LoaderIcon />\n        )}\n        {row.original.status}\n      </Badge>\n    ),\n  },\n  {\n    accessorKey: \"target\",\n    header: () => <div className=\"w-full text-right\">Target</div>,\n    cell: ({ row }) => (\n      <form\n        onSubmit={(e) => {\n          e.preventDefault()\n          toast.promise(new Promise((resolve) => setTimeout(resolve, 1000)), {\n            loading: `Saving ${row.original.header}`,\n            success: \"Done\",\n            error: \"Error\",\n          })\n        }}\n      >\n        <Label htmlFor={`${row.original.id}-target`} className=\"sr-only\">\n          Target\n        </Label>\n        <Input\n          className=\"h-8 w-16 border-transparent bg-transparent text-right shadow-none hover:bg-input/30 focus-visible:border focus-visible:bg-background\"\n          defaultValue={row.original.target}\n          id={`${row.original.id}-target`}\n        />\n      </form>\n    ),\n  },\n  {\n    accessorKey: \"limit\",\n    header: () => <div className=\"w-full text-right\">Limit</div>,\n    cell: ({ row }) => (\n      <form\n        onSubmit={(e) => {\n          e.preventDefault()\n          toast.promise(new Promise((resolve) => setTimeout(resolve, 1000)), {\n            loading: `Saving ${row.original.header}`,\n            success: \"Done\",\n            error: \"Error\",\n          })\n        }}\n      >\n        <Label htmlFor={`${row.original.id}-limit`} className=\"sr-only\">\n          Limit\n        </Label>\n        <Input\n          className=\"h-8 w-16 border-transparent bg-transparent text-right shadow-none hover:bg-input/30 focus-visible:border focus-visible:bg-background\"\n          defaultValue={row.original.limit}\n          id={`${row.original.id}-limit`}\n        />\n      </form>\n    ),\n  },\n  {\n    accessorKey: \"reviewer\",\n    header: \"Reviewer\",\n    cell: ({ row }) => {\n      const isAssigned = row.original.reviewer !== \"Assign reviewer\"\n\n      if (isAssigned) {\n        return row.original.reviewer\n      }\n\n      return (\n        <>\n          <Label htmlFor={`${row.original.id}-reviewer`} className=\"sr-only\">\n            Reviewer\n          </Label>\n          <Select>\n            <SelectTrigger\n              className=\"h-8 w-40\"\n              id={`${row.original.id}-reviewer`}\n            >\n              <SelectValue placeholder=\"Assign reviewer\" />\n            </SelectTrigger>\n            <SelectContent align=\"end\">\n              <SelectItem value=\"Eddie Lake\">Eddie Lake</SelectItem>\n              <SelectItem value=\"Jamik Tashpulatov\">\n                Jamik Tashpulatov\n              </SelectItem>\n            </SelectContent>\n          </Select>\n        </>\n      )\n    },\n  },\n  {\n    id: \"actions\",\n    cell: () => (\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button\n            variant=\"ghost\"\n            className=\"flex size-8 text-muted-foreground data-[state=open]:bg-muted\"\n            size=\"icon\"\n          >\n            <MoreVerticalIcon />\n            <span className=\"sr-only\">Open menu</span>\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent align=\"end\" className=\"w-32\">\n          <DropdownMenuItem>Edit</DropdownMenuItem>\n          <DropdownMenuItem>Make a copy</DropdownMenuItem>\n          <DropdownMenuItem>Favorite</DropdownMenuItem>\n          <DropdownMenuSeparator />\n          <DropdownMenuItem>Delete</DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    ),\n  },\n]\n\nfunction DraggableRow({ row }: { row: Row<z.infer<typeof schema>> }) {\n  const { transform, transition, setNodeRef, isDragging } = useSortable({\n    id: row.original.id,\n  })\n\n  return (\n    <TableRow\n      data-state={row.getIsSelected() && \"selected\"}\n      data-dragging={isDragging}\n      ref={setNodeRef}\n      className=\"relative z-0 data-[dragging=true]:z-10 data-[dragging=true]:opacity-80\"\n      style={{\n        transform: CSS.Transform.toString(transform),\n        transition: transition,\n      }}\n    >\n      {row.getVisibleCells().map((cell) => (\n        <TableCell key={cell.id}>\n          {flexRender(cell.column.columnDef.cell, cell.getContext())}\n        </TableCell>\n      ))}\n    </TableRow>\n  )\n}\n\nexport function DataTable({\n  data: initialData,\n}: {\n  data: z.infer<typeof schema>[]\n}) {\n  const [data, setData] = React.useState(() => initialData)\n  const [rowSelection, setRowSelection] = React.useState({})\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({})\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    []\n  )\n  const [sorting, setSorting] = React.useState<SortingState>([])\n  const [pagination, setPagination] = React.useState({\n    pageIndex: 0,\n    pageSize: 10,\n  })\n  const sortableId = React.useId()\n  const sensors = useSensors(\n    useSensor(MouseSensor, {}),\n    useSensor(TouchSensor, {}),\n    useSensor(KeyboardSensor, {})\n  )\n\n  const dataIds = React.useMemo<UniqueIdentifier[]>(\n    () => data?.map(({ id }) => id) || [],\n    [data]\n  )\n\n  const table = useReactTable({\n    data,\n    columns,\n    state: {\n      sorting,\n      columnVisibility,\n      rowSelection,\n      columnFilters,\n      pagination,\n    },\n    getRowId: (row) => row.id.toString(),\n    enableRowSelection: true,\n    onRowSelectionChange: setRowSelection,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    onColumnVisibilityChange: setColumnVisibility,\n    onPaginationChange: setPagination,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFacetedRowModel: getFacetedRowModel(),\n    getFacetedUniqueValues: getFacetedUniqueValues(),\n  })\n\n  function handleDragEnd(event: DragEndEvent) {\n    const { active, over } = event\n    if (active && over && active.id !== over.id) {\n      setData((data) => {\n        const oldIndex = dataIds.indexOf(active.id)\n        const newIndex = dataIds.indexOf(over.id)\n        return arrayMove(data, oldIndex, newIndex)\n      })\n    }\n  }\n\n  return (\n    <Tabs\n      defaultValue=\"outline\"\n      className=\"flex w-full flex-col justify-start gap-6\"\n    >\n      <div className=\"flex items-center justify-between\">\n        <Label htmlFor=\"view-selector\" className=\"sr-only\">\n          View\n        </Label>\n        <Select defaultValue=\"outline\">\n          <SelectTrigger\n            className=\"@4xl/main:hidden flex w-fit\"\n            id=\"view-selector\"\n          >\n            <SelectValue placeholder=\"Select a view\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"outline\">Outline</SelectItem>\n            <SelectItem value=\"past-performance\">Past Performance</SelectItem>\n            <SelectItem value=\"key-personnel\">Key Personnel</SelectItem>\n            <SelectItem value=\"focus-documents\">Focus Documents</SelectItem>\n          </SelectContent>\n        </Select>\n        <TabsList className=\"@4xl/main:flex hidden\">\n          <TabsTrigger value=\"outline\">Outline</TabsTrigger>\n          <TabsTrigger value=\"past-performance\" className=\"gap-1\">\n            Past Performance{\" \"}\n            <Badge\n              variant=\"secondary\"\n              className=\"flex h-5 w-5 items-center justify-center rounded-full bg-muted-foreground/30\"\n            >\n              3\n            </Badge>\n          </TabsTrigger>\n          <TabsTrigger value=\"key-personnel\" className=\"gap-1\">\n            Key Personnel{\" \"}\n            <Badge\n              variant=\"secondary\"\n              className=\"flex h-5 w-5 items-center justify-center rounded-full bg-muted-foreground/30\"\n            >\n              2\n            </Badge>\n          </TabsTrigger>\n          <TabsTrigger value=\"focus-documents\">Focus Documents</TabsTrigger>\n        </TabsList>\n        <div className=\"flex items-center gap-2\">\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" size=\"sm\">\n                <ColumnsIcon />\n                <span className=\"hidden lg:inline\">Customize Columns</span>\n                <span className=\"lg:hidden\">Columns</span>\n                <ChevronDownIcon />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\" className=\"w-56\">\n              {table\n                .getAllColumns()\n                .filter(\n                  (column) =>\n                    typeof column.accessorFn !== \"undefined\" &&\n                    column.getCanHide()\n                )\n                .map((column) => {\n                  return (\n                    <DropdownMenuCheckboxItem\n                      key={column.id}\n                      className=\"capitalize\"\n                      checked={column.getIsVisible()}\n                      onCheckedChange={(value) =>\n                        column.toggleVisibility(!!value)\n                      }\n                    >\n                      {column.id}\n                    </DropdownMenuCheckboxItem>\n                  )\n                })}\n            </DropdownMenuContent>\n          </DropdownMenu>\n          <Button variant=\"outline\" size=\"sm\">\n            <PlusIcon />\n            <span className=\"hidden lg:inline\">Add Section</span>\n          </Button>\n        </div>\n      </div>\n      <TabsContent\n        value=\"outline\"\n        className=\"relative flex flex-col gap-4 overflow-auto px-4 lg:px-6\"\n      >\n        <div className=\"overflow-hidden rounded-lg border\">\n          <DndContext\n            collisionDetection={closestCenter}\n            modifiers={[restrictToVerticalAxis]}\n            onDragEnd={handleDragEnd}\n            sensors={sensors}\n            id={sortableId}\n          >\n            <div className=\"overflow-auto custom-scrollbar\">\n              <div className=\"flex items-center\">\n                <Table>\n                  <TableHeader className=\"sticky top-0 z-10 bg-muted\">\n                    {table.getHeaderGroups().map((headerGroup) => (\n                      <TableRow key={headerGroup.id}>\n                        {headerGroup.headers.map((header) => {\n                          return (\n                            <TableHead key={header.id} colSpan={header.colSpan}>\n                              {header.isPlaceholder\n                                ? null\n                                : flexRender(\n                                    header.column.columnDef.header,\n                                    header.getContext()\n                                  )}\n                            </TableHead>\n                          )\n                        })}\n                      </TableRow>\n                    ))}\n                  </TableHeader>\n                  <TableBody className=\"**:data-[slot=table-cell]:first:w-8\">\n                    {table.getRowModel().rows?.length ? (\n                      <SortableContext\n                        items={dataIds}\n                        strategy={verticalListSortingStrategy}\n                      >\n                        {table.getRowModel().rows.map((row) => (\n                          <DraggableRow key={row.id} row={row} />\n                        ))}\n                      </SortableContext>\n                    ) : (\n                      <TableRow>\n                        <TableCell\n                          colSpan={columns.length}\n                          className=\"h-24 text-center\"\n                        >\n                          No results.\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </div>\n            </div>\n          </DndContext>\n        </div>\n        <div className=\"flex items-center justify-between px-4\">\n          <div className=\"hidden flex-1 text-sm text-muted-foreground lg:flex\">\n            {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n            {table.getFilteredRowModel().rows.length} row(s) selected.\n          </div>\n          <div className=\"flex w-full items-center gap-8 lg:w-fit\">\n            <div className=\"hidden items-center gap-2 lg:flex\">\n              <Label htmlFor=\"rows-per-page\" className=\"text-sm font-medium\">\n                Rows per page\n              </Label>\n              <Select\n                value={`${table.getState().pagination.pageSize}`}\n                onValueChange={(value) => {\n                  table.setPageSize(Number(value))\n                }}\n              >\n                <SelectTrigger className=\"w-20\" id=\"rows-per-page\">\n                  <SelectValue\n                    placeholder={table.getState().pagination.pageSize}\n                  />\n                </SelectTrigger>\n                <SelectContent side=\"top\">\n                  {[10, 20, 30, 40, 50].map((pageSize) => (\n                    <SelectItem key={pageSize} value={`${pageSize}`}>\n                      {pageSize}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"flex w-fit items-center justify-center text-sm font-medium\">\n              Page {table.getState().pagination.pageIndex + 1} of{\" \"}\n              {table.getPageCount()}\n            </div>\n            <div className=\"ml-auto flex items-center gap-2 lg:ml-0\">\n              <Button\n                variant=\"outline\"\n                className=\"hidden h-8 w-8 p-0 lg:flex\"\n                onClick={() => table.setPageIndex(0)}\n                disabled={!table.getCanPreviousPage()}\n              >\n                <span className=\"sr-only\">Go to first page</span>\n                <ChevronsLeftIcon />\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"size-8\"\n                size=\"icon\"\n                onClick={() => table.previousPage()}\n                disabled={!table.getCanPreviousPage()}\n              >\n                <span className=\"sr-only\">Go to previous page</span>\n                <ChevronLeftIcon />\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"size-8\"\n                size=\"icon\"\n                onClick={() => table.nextPage()}\n                disabled={!table.getCanNextPage()}\n              >\n                <span className=\"sr-only\">Go to next page</span>\n                <ChevronRightIcon />\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"hidden size-8 lg:flex\"\n                size=\"icon\"\n                onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n                disabled={!table.getCanNextPage()}\n              >\n                <span className=\"sr-only\">Go to last page</span>\n                <ChevronsRightIcon />\n              </Button>\n            </div>\n          </div>\n        </div>\n      </TabsContent>\n      <TabsContent\n        value=\"past-performance\"\n        className=\"flex flex-col px-4 lg:px-6\"\n      >\n        <div className=\"aspect-video w-full flex-1 rounded-lg border border-dashed\"></div>\n      </TabsContent>\n      <TabsContent value=\"key-personnel\" className=\"flex flex-col px-4 lg:px-6\">\n        <div className=\"aspect-video w-full flex-1 rounded-lg border border-dashed\"></div>\n      </TabsContent>\n      <TabsContent\n        value=\"focus-documents\"\n        className=\"flex flex-col px-4 lg:px-6\"\n      >\n        <div className=\"aspect-video w-full flex-1 rounded-lg border border-dashed\"></div>\n      </TabsContent>\n    </Tabs>\n  )\n}\n\nconst chartData = [\n  { month: \"January\", desktop: 186, mobile: 80 },\n  { month: \"February\", desktop: 305, mobile: 200 },\n  { month: \"March\", desktop: 237, mobile: 120 },\n  { month: \"April\", desktop: 73, mobile: 190 },\n  { month: \"May\", desktop: 209, mobile: 130 },\n  { month: \"June\", desktop: 214, mobile: 140 },\n]\n\nconst chartConfig = {\n  desktop: {\n    label: \"Desktop\",\n    color: \"var(--primary)\",\n  },\n  mobile: {\n    label: \"Mobile\",\n    color: \"var(--primary)\",\n  },\n} satisfies ChartConfig\n\nfunction TableCellViewer({ item }: { item: z.infer<typeof schema> }) {\n  const isMobile = useIsMobile()\n\n  return (\n    <Sheet>\n      <SheetTrigger asChild>\n        <Button variant=\"link\" className=\"w-fit px-0 text-left text-foreground\">\n          {item.header}\n        </Button>\n      </SheetTrigger>\n      <SheetContent side=\"right\" className=\"flex flex-col\">\n        <SheetHeader className=\"gap-1\">\n          <SheetTitle>{item.header}</SheetTitle>\n          <SheetDescription>\n            Showing total visitors for the last 6 months\n          </SheetDescription>\n        </SheetHeader>\n        <div className=\"flex flex-1 flex-col gap-4 overflow-y-auto py-4 text-sm\">\n          {!isMobile && (\n            <>\n              <ChartContainer config={chartConfig}>\n                <AreaChart\n                  accessibilityLayer\n                  data={chartData}\n                  margin={{\n                    left: 0,\n                    right: 10,\n                  }}\n                >\n                  <CartesianGrid vertical={false} />\n                  <XAxis\n                    dataKey=\"month\"\n                    tickLine={false}\n                    axisLine={false}\n                    tickMargin={8}\n                    tickFormatter={(value) => value.slice(0, 3)}\n                    hide\n                  />\n                  <ChartTooltip\n                    cursor={false}\n                    content={<ChartTooltipContent indicator=\"dot\" />}\n                  />\n                  <Area\n                    dataKey=\"mobile\"\n                    type=\"natural\"\n                    fill=\"var(--color-mobile)\"\n                    fillOpacity={0.6}\n                    stroke=\"var(--color-mobile)\"\n                    stackId=\"a\"\n                  />\n                  <Area\n                    dataKey=\"desktop\"\n                    type=\"natural\"\n                    fill=\"var(--color-desktop)\"\n                    fillOpacity={0.4}\n                    stroke=\"var(--color-desktop)\"\n                    stackId=\"a\"\n                  />\n                </AreaChart>\n              </ChartContainer>\n              <Separator />\n              <div className=\"grid gap-2\">\n                <div className=\"flex gap-2 font-medium leading-none\">\n                  Trending up by 5.2% this month{\" \"}\n                  <TrendingUpIcon className=\"size-4\" />\n                </div>\n                <div className=\"text-muted-foreground\">\n                  Showing total visitors for the last 6 months. This is just\n                  some random text to test the layout. It spans multiple lines\n                  and should wrap around.\n                </div>\n              </div>\n              <Separator />\n            </>\n          )}\n          <form className=\"flex flex-col gap-4\">\n            <div className=\"flex flex-col gap-3\">\n              <Label htmlFor=\"header\">Header</Label>\n              <Input id=\"header\" defaultValue={item.header} />\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"flex flex-col gap-3\">\n                <Label htmlFor=\"type\">Type</Label>\n                <Select defaultValue={item.type}>\n                  <SelectTrigger id=\"type\" className=\"w-full\">\n                    <SelectValue placeholder=\"Select a type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"Table of Contents\">\n                      Table of Contents\n                    </SelectItem>\n                    <SelectItem value=\"Executive Summary\">\n                      Executive Summary\n                    </SelectItem>\n                    <SelectItem value=\"Technical Approach\">\n                      Technical Approach\n                    </SelectItem>\n                    <SelectItem value=\"Design\">Design</SelectItem>\n                    <SelectItem value=\"Capabilities\">Capabilities</SelectItem>\n                    <SelectItem value=\"Focus Documents\">\n                      Focus Documents\n                    </SelectItem>\n                    <SelectItem value=\"Narrative\">Narrative</SelectItem>\n                    <SelectItem value=\"Cover Page\">Cover Page</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"flex flex-col gap-3\">\n                <Label htmlFor=\"status\">Status</Label>\n                <Select defaultValue={item.status}>\n                  <SelectTrigger id=\"status\" className=\"w-full\">\n                    <SelectValue placeholder=\"Select a status\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem className=\"flex gap-2\" value=\"Done\">\n                      Done\n                    </SelectItem>\n                    <SelectItem value=\"In Progress\">In Progress</SelectItem>\n                    <SelectItem value=\"Not Started\">Not Started</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"flex flex-col gap-3\">\n                <Label htmlFor=\"target\">Target</Label>\n                <Input id=\"target\" defaultValue={item.target} />\n              </div>\n              <div className=\"flex flex-col gap-3\">\n                <Label htmlFor=\"limit\">Limit</Label>\n                <Input id=\"limit\" defaultValue={item.limit} />\n              </div>\n            </div>\n            <div className=\"flex flex-col gap-3\">\n              <Label htmlFor=\"reviewer\">Reviewer</Label>\n              <Select defaultValue={item.reviewer}>\n                <SelectTrigger id=\"reviewer\" className=\"w-full\">\n                  <SelectValue placeholder=\"Select a reviewer\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"Eddie Lake\">Eddie Lake</SelectItem>\n                  <SelectItem value=\"Jamik Tashpulatov\">\n                    Jamik Tashpulatov\n                  </SelectItem>\n                  <SelectItem value=\"Emily Whalen\">Emily Whalen</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </form>\n        </div>\n        <SheetFooter className=\"mt-auto flex gap-2 sm:flex-col sm:space-x-0\">\n          <Button className=\"w-full\">Submit</Button>\n          <SheetClose asChild>\n            <Button variant=\"outline\" className=\"w-full\">\n              Done\n            </Button>\n          </SheetClose>\n        </SheetFooter>\n      </SheetContent>\n    </Sheet>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-3/components/nav-documents": {
        "content": "\"use client\"\n\nimport {\n  FolderIcon,\n  MoreHorizontalIcon,\n  ShareIcon,\n  type LucideIcon,\n} from \"lucide-react\"\n\nimport {\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport Link from \"next/link\"\n\nexport function NavDocuments({\n  items,\n}: {\n  items: {\n    name: string\n    url: string\n    icon: LucideIcon\n  }[]\n}) {\n  const { isMobile } = useSidebar()\n\n  return (\n    <SidebarGroup className=\"group-data-[collapsible=icon]:hidden\">\n      <SidebarGroupLabel>Documents</SidebarGroupLabel>\n      <SidebarMenu>\n        {items.map((item) => (\n          <SidebarMenuItem key={item.name}>\n            <SidebarMenuButton asChild>\n              <Link\n                href={item.url}>\n                <item.icon />\n                <span>{item.name}</span>\n              </Link>\n            </SidebarMenuButton>\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <SidebarMenuAction\n                  showOnHover\n                  className=\"rounded-sm data-[state=open]:bg-accent\"\n                >\n                  <MoreHorizontalIcon />\n                  <span className=\"sr-only\">More</span>\n                </SidebarMenuAction>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent\n                className=\"w-24 rounded-lg\"\n                side={isMobile ? \"bottom\" : \"right\"}\n                align={isMobile ? \"end\" : \"start\"}\n              >\n                <DropdownMenuItem>\n                  <FolderIcon />\n                  <span>Open</span>\n                </DropdownMenuItem>\n                <DropdownMenuItem>\n                  <ShareIcon />\n                  <span>Share</span>\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </SidebarMenuItem>\n        ))}\n        <SidebarMenuItem>\n          <SidebarMenuButton className=\"text-sidebar-foreground/70\">\n            <MoreHorizontalIcon className=\"text-sidebar-foreground/70\" />\n            <span>More</span>\n          </SidebarMenuButton>\n        </SidebarMenuItem>\n      </SidebarMenu>\n    </SidebarGroup>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-3/components/nav-main": {
        "content": "\"use client\"\n\nimport { MailIcon, PlusCircleIcon, type LucideIcon } from \"lucide-react\"\n\nimport {\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from \"@/components/ui/sidebar\"\nimport { Button } from \"@/components/ui/button\"\n\nexport function NavMain({\n  items,\n}: {\n  items: {\n    title: string\n    url: string\n    icon?: LucideIcon\n  }[]\n}) {\n  return (\n    <SidebarGroup>\n      <SidebarGroupContent className=\"flex flex-col gap-2\">\n        <SidebarMenu>\n          <SidebarMenuItem className=\"flex items-center gap-2\">\n            <SidebarMenuButton\n              tooltip=\"Quick Create\"\n              className=\"min-w-8 bg-primary text-primary-foreground duration-200 ease-linear hover:bg-primary/90 hover:text-primary-foreground active:bg-primary/90 active:text-primary-foreground\"\n            >\n              <PlusCircleIcon />\n              <span>Quick Create</span>\n            </SidebarMenuButton>\n            <Button\n              size=\"icon\"\n              className=\"h-9 w-9 shrink-0 group-data-[collapsible=icon]:opacity-0\"\n              variant=\"outline\"\n            >\n              <MailIcon />\n              <span className=\"sr-only\">Inbox</span>\n            </Button>\n          </SidebarMenuItem>\n        </SidebarMenu>\n        <SidebarMenu>\n          {items.map((item) => (\n            <SidebarMenuItem key={item.title}>\n              <SidebarMenuButton tooltip={item.title}>\n                {item.icon && <item.icon />}\n                <span>{item.title}</span>\n              </SidebarMenuButton>\n            </SidebarMenuItem>\n          ))}\n        </SidebarMenu>\n      </SidebarGroupContent>\n    </SidebarGroup>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-3/components/nav-secondary": {
        "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { LucideIcon } from \"lucide-react\"\n\nimport {\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from \"@/components/ui/sidebar\"\n\nexport function NavSecondary({\n  items,\n  ...props\n}: {\n  items: {\n    title: string\n    url: string\n    icon: LucideIcon\n  }[]\n} & React.ComponentPropsWithoutRef<typeof SidebarGroup>) {\n  return (\n    <SidebarGroup {...props}>\n      <SidebarGroupContent>\n        <SidebarMenu>\n          {items.map((item) => (\n            <SidebarMenuItem key={item.title}>\n              <SidebarMenuButton asChild>\n                <a href={item.url}>\n                  <item.icon />\n                  <span>{item.title}</span>\n                </a>\n              </SidebarMenuButton>\n            </SidebarMenuItem>\n          ))}\n        </SidebarMenu>\n      </SidebarGroupContent>\n    </SidebarGroup>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-3/components/nav-user": {
        "content": "\"use client\"\n\nimport {\n  BellIcon,\n  CreditCardIcon,\n  LogOutIcon,\n  MoreVerticalIcon,\n  UserCircleIcon,\n} from \"lucide-react\"\n\nimport {\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/components/ui/avatar\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\n\nexport function NavUser({\n  user,\n}: {\n  user: {\n    name: string\n    email: string\n    avatar: string\n  }\n}) {\n  const { isMobile } = useSidebar()\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton\n              size=\"lg\"\n              className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n            >\n              <Avatar className=\"h-8 w-8 rounded-lg grayscale\">\n                <AvatarImage src={user.avatar} alt={user.name} />\n                <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n              </Avatar>\n              <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                <span className=\"truncate font-medium\">{user.name}</span>\n                <span className=\"truncate text-xs text-muted-foreground\">\n                  {user.email}\n                </span>\n              </div>\n              <MoreVerticalIcon className=\"ml-auto size-4\" />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\n            side={isMobile ? \"bottom\" : \"right\"}\n            align=\"end\"\n            sideOffset={4}\n          >\n            <DropdownMenuLabel className=\"p-0 font-normal\">\n              <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n                <Avatar className=\"h-8 w-8 rounded-lg\">\n                  <AvatarImage src={user.avatar} alt={user.name} />\n                  <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n                </Avatar>\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                  <span className=\"truncate font-medium\">{user.name}</span>\n                  <span className=\"truncate text-xs text-muted-foreground\">\n                    {user.email}\n                  </span>\n                </div>\n              </div>\n            </DropdownMenuLabel>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem>\n                <UserCircleIcon />\n                Account\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <CreditCardIcon />\n                Billing\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <BellIcon />\n                Notifications\n              </DropdownMenuItem>\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>\n              <LogOutIcon />\n              Log out\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-3/components/section-cards": {
        "content": "import { TrendingDownIcon, TrendingUpIcon } from \"lucide-react\"\n\nimport { Badge } from \"@/components/ui/badge\"\nimport {\n  Card,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\n\nimport { formatPrice } from \"../lib/utils\"\n\nexport function SectionCards() {\n  return (\n    <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4\">\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm \">\n        <CardHeader className=\"relative\">\n          <CardDescription>Total Revenue</CardDescription>\n          <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\n            {formatPrice(1250)}\n          </CardTitle>\n          <div className=\"absolute right-4 top-4\">\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\n              <TrendingUpIcon className=\"size-3\" />\n              +12.5%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-sm\">\n          <div className=\"line-clamp-1 flex gap-2 font-medium\">\n            Trending up this month <TrendingUpIcon className=\"size-4\" />\n          </div>\n          <div className=\"text-muted-foreground\">\n            Visitors for the last 6 months\n          </div>\n        </CardFooter>\n      </Card>\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm \">\n        <CardHeader className=\"relative\">\n          <CardDescription>New Customers</CardDescription>\n          <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\n            1,234\n          </CardTitle>\n          <div className=\"absolute right-4 top-4\">\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\n              <TrendingDownIcon className=\"size-3\" />\n              -20%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-sm\">\n          <div className=\"line-clamp-1 flex gap-2 font-medium\">\n            Down 20% this period <TrendingDownIcon className=\"size-4\" />\n          </div>\n          <div className=\"text-muted-foreground\">\n            Acquisition needs attention\n          </div>\n        </CardFooter>\n      </Card>\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm\">\n        <CardHeader className=\"relative\">\n          <CardDescription>Active Accounts</CardDescription>\n          <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\n            45,678\n          </CardTitle>\n          <div className=\"absolute right-4 top-4\">\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\n              <TrendingUpIcon className=\"size-3\" />\n              +12.5%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-sm\">\n          <div className=\"line-clamp-1 flex gap-2 font-medium\">\n            Strong user retention <TrendingUpIcon className=\"size-4\" />\n          </div>\n          <div className=\"text-muted-foreground\">Engagement exceed targets</div>\n        </CardFooter>\n      </Card>\n      <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm\">\n        <CardHeader className=\"relative\">\n          <CardDescription>Growth Rate</CardDescription>\n          <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\n            4.5%\n          </CardTitle>\n          <div className=\"absolute right-4 top-4\">\n            <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\n              <TrendingUpIcon className=\"size-3\" />\n              +4.5%\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardFooter className=\"flex-col items-start gap-1 text-sm\">\n          <div className=\"line-clamp-1 flex gap-2 font-medium\">\n            Steady performance <TrendingUpIcon className=\"size-4\" />\n          </div>\n          <div className=\"text-muted-foreground\">Meets growth projections</div>\n        </CardFooter>\n      </Card>\n    </div>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/dashboard-3/components/site-header": {
        "content": "import { SidebarTrigger } from \"@/components/ui/sidebar\"\nimport { Separator } from \"@/components/ui/separator\"\n\nexport function SiteHeader() {\n  return (\n    <header className=\"group-has-data-[collapsible=icon]/sidebar-wrapper:h-12 flex h-12 shrink-0 items-center gap-2 border-b transition-[width,height] ease-linear px-4 lg:px-6\">\n      <div className=\"flex w-full items-center gap-1\">\n        <SidebarTrigger className=\"-ml-1\" />\n        <Separator\n          orientation=\"vertical\"\n          className=\"mx-2 data-[orientation=vertical]:h-4\"\n        />\n        <h1 className=\"text-base font-medium\">Documents</h1>\n      </div>\n    </header>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {
      "@/registry/view/dashboard-3/constant/data.json": {
        "content": "[\n  {\n    \"id\": 1,\n    \"header\": \"Cover page\",\n    \"type\": \"Cover page\",\n    \"status\": \"In Process\",\n    \"target\": \"18\",\n    \"limit\": \"5\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 2,\n    \"header\": \"Table of contents\",\n    \"type\": \"Table of contents\",\n    \"status\": \"Done\",\n    \"target\": \"29\",\n    \"limit\": \"24\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 3,\n    \"header\": \"Executive summary\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"10\",\n    \"limit\": \"13\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 4,\n    \"header\": \"Technical approach\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"27\",\n    \"limit\": \"23\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 5,\n    \"header\": \"Design\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"2\",\n    \"limit\": \"16\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 6,\n    \"header\": \"Capabilities\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"20\",\n    \"limit\": \"8\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 7,\n    \"header\": \"Integration with existing systems\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"19\",\n    \"limit\": \"21\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 8,\n    \"header\": \"Innovation and Advantages\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"25\",\n    \"limit\": \"26\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 9,\n    \"header\": \"Overview of EMR's Innovative Solutions\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"7\",\n    \"limit\": \"23\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 10,\n    \"header\": \"Advanced Algorithms and Machine Learning\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"30\",\n    \"limit\": \"28\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 11,\n    \"header\": \"Adaptive Communication Protocols\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"9\",\n    \"limit\": \"31\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 12,\n    \"header\": \"Advantages Over Current Technologies\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"12\",\n    \"limit\": \"0\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 13,\n    \"header\": \"Past Performance\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"22\",\n    \"limit\": \"33\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 14,\n    \"header\": \"Customer Feedback and Satisfaction Levels\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"15\",\n    \"limit\": \"34\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 15,\n    \"header\": \"Implementation Challenges and Solutions\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"3\",\n    \"limit\": \"35\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 16,\n    \"header\": \"Security Measures and Data Protection Policies\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"6\",\n    \"limit\": \"36\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 17,\n    \"header\": \"Scalability and Future Proofing\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"4\",\n    \"limit\": \"37\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 18,\n    \"header\": \"Cost-Benefit Analysis\",\n    \"type\": \"Plain language\",\n    \"status\": \"Done\",\n    \"target\": \"14\",\n    \"limit\": \"38\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 19,\n    \"header\": \"User Training and Onboarding Experience\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"17\",\n    \"limit\": \"39\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 20,\n    \"header\": \"Future Development Roadmap\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"11\",\n    \"limit\": \"40\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 21,\n    \"header\": \"System Architecture Overview\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"24\",\n    \"limit\": \"18\",\n    \"reviewer\": \"Maya Johnson\"\n  },\n  {\n    \"id\": 22,\n    \"header\": \"Risk Management Plan\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"15\",\n    \"limit\": \"22\",\n    \"reviewer\": \"Carlos Rodriguez\"\n  },\n  {\n    \"id\": 23,\n    \"header\": \"Compliance Documentation\",\n    \"type\": \"Legal\",\n    \"status\": \"In Process\",\n    \"target\": \"31\",\n    \"limit\": \"27\",\n    \"reviewer\": \"Sarah Chen\"\n  },\n  {\n    \"id\": 24,\n    \"header\": \"API Documentation\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"8\",\n    \"limit\": \"12\",\n    \"reviewer\": \"Raj Patel\"\n  },\n  {\n    \"id\": 25,\n    \"header\": \"User Interface Mockups\",\n    \"type\": \"Visual\",\n    \"status\": \"In Process\",\n    \"target\": \"19\",\n    \"limit\": \"25\",\n    \"reviewer\": \"Leila Ahmadi\"\n  },\n  {\n    \"id\": 26,\n    \"header\": \"Database Schema\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"22\",\n    \"limit\": \"20\",\n    \"reviewer\": \"Thomas Wilson\"\n  },\n  {\n    \"id\": 27,\n    \"header\": \"Testing Methodology\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"17\",\n    \"limit\": \"14\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 28,\n    \"header\": \"Deployment Strategy\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"26\",\n    \"limit\": \"30\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 29,\n    \"header\": \"Budget Breakdown\",\n    \"type\": \"Financial\",\n    \"status\": \"In Process\",\n    \"target\": \"13\",\n    \"limit\": \"16\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 30,\n    \"header\": \"Market Analysis\",\n    \"type\": \"Research\",\n    \"status\": \"Done\",\n    \"target\": \"29\",\n    \"limit\": \"32\",\n    \"reviewer\": \"Sophia Martinez\"\n  },\n  {\n    \"id\": 31,\n    \"header\": \"Competitor Comparison\",\n    \"type\": \"Research\",\n    \"status\": \"In Process\",\n    \"target\": \"21\",\n    \"limit\": \"19\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 32,\n    \"header\": \"Maintenance Plan\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"16\",\n    \"limit\": \"23\",\n    \"reviewer\": \"Alex Thompson\"\n  },\n  {\n    \"id\": 33,\n    \"header\": \"User Personas\",\n    \"type\": \"Research\",\n    \"status\": \"In Process\",\n    \"target\": \"27\",\n    \"limit\": \"24\",\n    \"reviewer\": \"Nina Patel\"\n  },\n  {\n    \"id\": 34,\n    \"header\": \"Accessibility Compliance\",\n    \"type\": \"Legal\",\n    \"status\": \"Done\",\n    \"target\": \"18\",\n    \"limit\": \"21\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 35,\n    \"header\": \"Performance Metrics\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"23\",\n    \"limit\": \"26\",\n    \"reviewer\": \"David Kim\"\n  },\n  {\n    \"id\": 36,\n    \"header\": \"Disaster Recovery Plan\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"14\",\n    \"limit\": \"17\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 37,\n    \"header\": \"Third-party Integrations\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"25\",\n    \"limit\": \"28\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 38,\n    \"header\": \"User Feedback Summary\",\n    \"type\": \"Research\",\n    \"status\": \"Done\",\n    \"target\": \"20\",\n    \"limit\": \"15\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 39,\n    \"header\": \"Localization Strategy\",\n    \"type\": \"Narrative\",\n    \"status\": \"In Process\",\n    \"target\": \"12\",\n    \"limit\": \"19\",\n    \"reviewer\": \"Maria Garcia\"\n  },\n  {\n    \"id\": 40,\n    \"header\": \"Mobile Compatibility\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"28\",\n    \"limit\": \"31\",\n    \"reviewer\": \"James Wilson\"\n  },\n  {\n    \"id\": 41,\n    \"header\": \"Data Migration Plan\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"19\",\n    \"limit\": \"22\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 42,\n    \"header\": \"Quality Assurance Protocols\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"30\",\n    \"limit\": \"33\",\n    \"reviewer\": \"Priya Singh\"\n  },\n  {\n    \"id\": 43,\n    \"header\": \"Stakeholder Analysis\",\n    \"type\": \"Research\",\n    \"status\": \"In Process\",\n    \"target\": \"11\",\n    \"limit\": \"14\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 44,\n    \"header\": \"Environmental Impact Assessment\",\n    \"type\": \"Research\",\n    \"status\": \"Done\",\n    \"target\": \"24\",\n    \"limit\": \"27\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 45,\n    \"header\": \"Intellectual Property Rights\",\n    \"type\": \"Legal\",\n    \"status\": \"In Process\",\n    \"target\": \"17\",\n    \"limit\": \"20\",\n    \"reviewer\": \"Sarah Johnson\"\n  },\n  {\n    \"id\": 46,\n    \"header\": \"Customer Support Framework\",\n    \"type\": \"Narrative\",\n    \"status\": \"Done\",\n    \"target\": \"22\",\n    \"limit\": \"25\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 47,\n    \"header\": \"Version Control Strategy\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"15\",\n    \"limit\": \"18\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 48,\n    \"header\": \"Continuous Integration Pipeline\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"26\",\n    \"limit\": \"29\",\n    \"reviewer\": \"Michael Chen\"\n  },\n  {\n    \"id\": 49,\n    \"header\": \"Regulatory Compliance\",\n    \"type\": \"Legal\",\n    \"status\": \"In Process\",\n    \"target\": \"13\",\n    \"limit\": \"16\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 50,\n    \"header\": \"User Authentication System\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"28\",\n    \"limit\": \"31\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 51,\n    \"header\": \"Data Analytics Framework\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"21\",\n    \"limit\": \"24\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 52,\n    \"header\": \"Cloud Infrastructure\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"16\",\n    \"limit\": \"19\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 53,\n    \"header\": \"Network Security Measures\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"29\",\n    \"limit\": \"32\",\n    \"reviewer\": \"Lisa Wong\"\n  },\n  {\n    \"id\": 54,\n    \"header\": \"Project Timeline\",\n    \"type\": \"Planning\",\n    \"status\": \"Done\",\n    \"target\": \"14\",\n    \"limit\": \"17\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 55,\n    \"header\": \"Resource Allocation\",\n    \"type\": \"Planning\",\n    \"status\": \"In Process\",\n    \"target\": \"27\",\n    \"limit\": \"30\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 56,\n    \"header\": \"Team Structure and Roles\",\n    \"type\": \"Planning\",\n    \"status\": \"Done\",\n    \"target\": \"20\",\n    \"limit\": \"23\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 57,\n    \"header\": \"Communication Protocols\",\n    \"type\": \"Planning\",\n    \"status\": \"In Process\",\n    \"target\": \"15\",\n    \"limit\": \"18\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 58,\n    \"header\": \"Success Metrics\",\n    \"type\": \"Planning\",\n    \"status\": \"Done\",\n    \"target\": \"30\",\n    \"limit\": \"33\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 59,\n    \"header\": \"Internationalization Support\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"23\",\n    \"limit\": \"26\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 60,\n    \"header\": \"Backup and Recovery Procedures\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"18\",\n    \"limit\": \"21\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 61,\n    \"header\": \"Monitoring and Alerting System\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"25\",\n    \"limit\": \"28\",\n    \"reviewer\": \"Daniel Park\"\n  },\n  {\n    \"id\": 62,\n    \"header\": \"Code Review Guidelines\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"12\",\n    \"limit\": \"15\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 63,\n    \"header\": \"Documentation Standards\",\n    \"type\": \"Technical content\",\n    \"status\": \"In Process\",\n    \"target\": \"27\",\n    \"limit\": \"30\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 64,\n    \"header\": \"Release Management Process\",\n    \"type\": \"Planning\",\n    \"status\": \"Done\",\n    \"target\": \"22\",\n    \"limit\": \"25\",\n    \"reviewer\": \"Assign reviewer\"\n  },\n  {\n    \"id\": 65,\n    \"header\": \"Feature Prioritization Matrix\",\n    \"type\": \"Planning\",\n    \"status\": \"In Process\",\n    \"target\": \"19\",\n    \"limit\": \"22\",\n    \"reviewer\": \"Emma Davis\"\n  },\n  {\n    \"id\": 66,\n    \"header\": \"Technical Debt Assessment\",\n    \"type\": \"Technical content\",\n    \"status\": \"Done\",\n    \"target\": \"24\",\n    \"limit\": \"27\",\n    \"reviewer\": \"Eddie Lake\"\n  },\n  {\n    \"id\": 67,\n    \"header\": \"Capacity Planning\",\n    \"type\": \"Planning\",\n    \"status\": \"In Process\",\n    \"target\": \"21\",\n    \"limit\": \"24\",\n    \"reviewer\": \"Jamik Tashpulatov\"\n  },\n  {\n    \"id\": 68,\n    \"header\": \"Service Level Agreements\",\n    \"type\": \"Legal\",\n    \"status\": \"Done\",\n    \"target\": \"26\",\n    \"limit\": \"29\",\n    \"reviewer\": \"Assign reviewer\"\n  }\n]\n",
        "language": "json"
      }
    },
    "lib": {
      "@/registry/view/dashboard-3/lib/utils.ts": {
        "content": "// this for formatting the price in the product overview page for your country currency\nexport const formatPrice = (price: number) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"EGP\",\n    useGrouping: false,\n  })\n  return formatter.format(price)\n}\n",
        "language": "typescript"
      }
    },
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/dashboard-3/page": {
      "content": "import { SidebarInset, SidebarProvider } from \"@/components/ui/sidebar\"\nimport { AppSidebar } from \"./components/app-sidebar\"\nimport { ChartAreaInteractive } from \"./components/chart-area-interactive\"\nimport { DataTable } from \"./components/data-table\"\nimport { SectionCards } from \"./components/section-cards\"\nimport { SiteHeader } from \"./components/site-header\"\nimport data from \"./constant/data.json\"\n\nexport default function DashboardPage() {\n  return (\n    <SidebarProvider>\n      <AppSidebar variant=\"inset\" />\n      <SidebarInset>\n        <SiteHeader />\n        <div className=\"flex flex-1 flex-col px-4 lg:px-6\">\n          <div className=\"flex flex-1 flex-col gap-2\">\n            <div className=\"flex flex-col gap-4 py-4 md:gap-6 md:py-6\">\n              <SectionCards />\n              <div>\n                <ChartAreaInteractive />\n              </div>\n              <DataTable data={data} />\n            </div>\n          </div>\n        </div>\n      </SidebarInset>\n    </SidebarProvider>\n  )\n}\n",
      "language": "tsx"
    }
  },
  "expanded-gallery-1": {
    "components": {
      "@/registry/view/expanded-gallery-1/components/expanded-gallery": {
        "content": "\"use client\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport { useTheme } from \"next-themes\"\nimport Image from \"next/image\"\nimport type React from \"react\"\n\ninterface ExpandableGalleryProps {\n  id: string\n  imgUrl: string\n  title: string\n  index: number\n  active: string\n  handleActive: (id: string) => void\n  description?: string\n}\n\nconst ExpandableGallery: React.FC<ExpandableGalleryProps> = ({\n  id,\n  imgUrl,\n  title,\n  index,\n  active,\n  handleActive,\n  description = \"\",\n}) => {\n  const isMobile = useIsMobile()\n  const { resolvedTheme } = useTheme()\n  const isDarkTheme = resolvedTheme === \"dark\"\n  const isActive = active === id\n\n  const itemVariants = {\n    initial: {\n      opacity: 0,\n      y: 20,\n    },\n    animate: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.7,\n        ease: [0.16, 1, 0.3, 1],\n        delay: isMobile ? index * 0.08 : index * 0.12,\n      },\n    },\n  }\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"animate\"\n      variants={itemVariants}\n      className={cn(\n        \"relative flex items-center justify-center min-w-[120px] xs:min-w-[150px]\",\n        \"transition-all duration-500 ease-out cursor-pointer overflow-hidden\",\n        \"h-[280px] xs:h-[320px] sm:h-[420px] md:h-[520px] lg:h-[580px]\",\n        isActive\n          ? \"flex-[10] sm:flex-[8] md:flex-[6] lg:flex-[3.5]\"\n          : \"flex-[1.2] sm:flex-[1.3] md:flex-[1.4] lg:flex-[0.2]\",\n        \"rounded-xl md:rounded-2xl\",\n        \"shadow-[0_2px_10px_rgba(0,0,0,0.06)] dark:shadow-[0_2px_10px_rgba(0,0,0,0.08)]\",\n        \"hover:shadow-[0_4px_20px_rgba(0,0,0,0.08)] dark:hover:shadow-[0_4px_20px_rgba(0,0,0,0.12)]\",\n        \"border border-slate-100 dark:border-zinc-800\",\n      )}\n      onClick={() => handleActive(id)}\n      layout\n    >\n      <motion.div\n        className=\"absolute inset-0 z-10\"\n        initial={false}\n        animate={{\n          background: isActive\n            ? isDarkTheme\n              ? \"linear-gradient(to top, rgba(0,0,0,0.45) 0%, rgba(0,0,0,0.15) 35%, rgba(0,0,0,0) 65%)\"\n              : \"linear-gradient(to top, rgba(0,0,0,0.4) 0%, rgba(0,0,0,0.1) 35%, rgba(0,0,0,0) 65%)\"\n            : isDarkTheme\n              ? \"linear-gradient(to top, rgba(0,0,0,0.35) 0%, rgba(0,0,0,0.08) 50%, rgba(0,0,0,0) 100%)\"\n              : \"linear-gradient(to top, rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.05) 50%, rgba(0,0,0,0) 100%)\",\n        }}\n        transition={{ duration: 0.6, ease: [0.16, 1, 0.3, 1] }}\n      />\n      <motion.div className=\"absolute inset-0\" transition={{ duration: 0.7, ease: [0.16, 1, 0.3, 1] }}>\n        <Image\n          fill\n          src={imgUrl || \"/placeholder.svg\"}\n          alt={title}\n          className={cn(\"object-cover\")}\n          sizes=\"(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw\"\n          priority={index < 2}\n        />\n      </motion.div>\n      <AnimatePresence>\n        {!isActive ? (\n          <motion.div\n            key={`title-${id}`}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.4 }}\n            className={cn(\n              \"absolute z-20\",\n              \"bottom-5 left-5 text-[16px] xs:text-[17px] sm:text-[18px]\",\n              \"lg:text-[20px] lg:bottom-20 lg:rotate-[-90deg] lg:origin-[0,0]\",\n              \"font-medium tracking-tight text-white\",\n              \"drop-shadow-sm\",\n            )}\n          >\n            {title}\n          </motion.div>\n        ) : (\n          <motion.div\n            key={`content-${id}`}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 10 }}\n            transition={{ duration: 0.5, ease: [0.16, 1, 0.3, 1] }}\n            className={cn(\n              \"absolute bottom-0 w-full z-20\",\n              \"p-5 xs:p-6 sm:p-6\",\n              \"flex justify-start flex-col\",\n              isDarkTheme\n                ? \"backdrop-blur-[8px] bg-black/30 dark:bg-black/40\"\n                : \"backdrop-blur-[8px] bg-black/25 dark:bg-black/30\",\n              \"rounded-b-xl md:rounded-b-2xl\",\n            )}\n          >\n            <h2\n              className={cn(\n                \"font-medium text-[20px] xs:text-[22px] sm:text-[24px] md:text-[28px]\",\n                \"text-white mb-2 tracking-tight leading-tight\",\n              )}\n            >\n              {title}\n            </h2>\n            {description && (\n              <p\n                className={cn(\n                  \"text-white/90 text-sm sm:text-base\",\n                  \"max-w-md font-light leading-relaxed\",\n                  \"line-clamp-3 sm:line-clamp-none\",\n                )}\n              >\n                {description}\n              </p>\n            )}\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </motion.div>\n  )\n}\n\nexport default ExpandableGallery\n",
        "language": "tsx"
      }
    },
    "constant": {
      "@/registry/view/expanded-gallery-1/constant/index.ts": {
        "content": "export const galleryItems = [\n  {\n    id: \"shadcn\",\n    imgUrl: \"/blocks/case-studies-1/image-1.jpg\",\n    title: \"Modern Component Library\",\n    description:\n      \"Explore how shadcn/ui revolutionized React component development\",\n  },\n  {\n    id: \"tailwind\",\n    imgUrl: \"/blocks/case-studies-1/image-2.jpg\",\n    title: \"The Utility-First Revolution\",\n    description:\n      \"A traditional spread of delicious dishes prepared for the evening meal during Ramadan.\",\n  },\n  {\n    id: \"astro\",\n    imgUrl: \"/blocks/case-studies-1/image-3.jpg\",\n    title: \"The All-in-One Web Framework\",\n    description:\n      \"Learn how Astro's innovative 'Islands Architecture' and zero-JS approach\",\n  },\n  {\n    id: \"react\",\n    imgUrl: \"/blocks/case-studies-1/image-4.jpg\",\n    title: \"Pioneering Component-Based UI\",\n    description:\n      \"See how React continues to shape modern web development with its component model\",\n  },\n  {\n    id: \"nextjs\",\n    imgUrl: \"/blocks/case-studies-1/image-5.jpg\",\n    title: \"The React Framework\",\n    description:\n      \"Explore how Next.js has become the go-to framework for React applications\",\n  },\n]\n",
        "language": "typescript"
      }
    },
    "lib": {
      "@/registry/view/expanded-gallery-1/lib/motion.ts": {
        "content": "export const fadeIn = (delay = 0, duration = 0.5) => ({\n  hidden: {\n    opacity: 0,\n  },\n  show: {\n    opacity: 1,\n    transition: {\n      delay,\n      duration,\n      ease: \"easeOut\",\n    },\n  },\n})\n",
        "language": "typescript"
      }
    },
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/expanded-gallery-1/page": {
      "content": "\"use client\"\n\nimport Container from \"@/components/Container\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { motion } from \"framer-motion\"\nimport { useState } from \"react\"\nimport ExpandableGallery from \"./components/expanded-gallery\"\nimport { galleryItems } from \"./constant\"\n\nexport default function GalleryPage() {\n  const [active, setActive] = useState(\"shadcn\")\n  const isMobile = useIsMobile()\n\n  const containerVariants = {\n    initial: { opacity: 0 },\n    animate: {\n      opacity: 1,\n      transition: {\n        duration: 0.8,\n        ease: [0.16, 1, 0.3, 1],\n        staggerChildren: 0.08,\n      },\n    },\n  }\n\n  return (\n    <div className={cn(\"min-h-screen py-8 sm:py-12 md:py-16\", \"bg-[#f5f5f7] dark:bg-zinc-900\")}>\n      <Container className=\"max-w-[1200px] px-4 sm:px-6 md:px-8\">\n        <motion.div\n          initial=\"initial\"\n          animate=\"animate\"\n          variants={containerVariants}\n          className={cn(\n            \"transition-all duration-700 ease-out\",\n            isMobile\n              ? \"grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-5\"\n              : \"flex flex-row items-center justify-center gap-3 sm:gap-4 md:gap-5\",\n          )}\n        >\n          {galleryItems.map((item, index) => (\n            <ExpandableGallery key={item.id} {...item} index={index} active={active} handleActive={setActive} />\n          ))}\n        </motion.div>\n      </Container>\n    </div>\n  )\n}\n",
      "language": "tsx"
    }
  },
  "faq-1": {
    "components": {
      "@/registry/view/faq-1/components/faqs": {
        "content": "\"use client\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport {\r\n    BarChart3,\r\n    BookOpen,\r\n    ChevronDown,\r\n    Code,\r\n    CreditCard,\r\n    DollarSign,\r\n    HelpCircle,\r\n    Mail,\r\n    MessageCircle,\r\n} from \"lucide-react\"\r\nimport Link from \"next/link\"\r\nimport type React from \"react\"\r\nimport { useState } from \"react\"\r\n\r\ninterface FAQ {\r\n    id: string\r\n    question: string\r\n    answer: string\r\n    icon: React.ReactNode\r\n    category: string\r\n}\r\n\r\ninterface FAQBlockProps {\r\n    title?: string\r\n    subtitle?: string\r\n    linkText?: string\r\n    linkHref?: string\r\n    categories?: string[]\r\n    faqs?: FAQ[]\r\n    className?: string\r\n}\r\n\r\nconst defaultFAQs: FAQ[] = [\r\n    {\r\n        id: \"1\",\r\n        question: \"Is there a free trial available?\",\r\n        answer:\r\n            \"Yes, you can try us for free for 30 days. If you want, we'll provide you with a free 30-minute onboarding call to get you up and running. Book a call here.\",\r\n        icon: <HelpCircle className=\"w-5 h-5\" />,\r\n        category: \"General\",\r\n    },\r\n    {\r\n        id: \"2\",\r\n        question: \"Can I change my plan later?\",\r\n        answer:\r\n            \"Of course! Our pricing scales with your company. Chat to our friendly team to find a solution that works for you.\",\r\n        icon: <CreditCard className=\"w-5 h-5\" />,\r\n        category: \"Pricing\",\r\n    },\r\n    {\r\n        id: \"3\",\r\n        question: \"What is your cancellation policy?\",\r\n        answer:\r\n            \"We understand that things change. You can cancel your plan at any time and we'll refund you the difference already paid.\",\r\n        icon: <BarChart3 className=\"w-5 h-5\" />,\r\n        category: \"General\",\r\n    },\r\n    {\r\n        id: \"4\",\r\n        question: \"Can other info be added to an invoice?\",\r\n        answer:\r\n            \"Yes, you can easily add additional information to your invoices such as your VAT number, company address, and purchase order numbers.\",\r\n        icon: <Code className=\"w-5 h-5\" />,\r\n        category: \"API\",\r\n    },\r\n    {\r\n        id: \"5\",\r\n        question: \"How does billing work?\",\r\n        answer:\r\n            \"Plans are per workspace, not per account. You can upgrade one workspace, and still have any number of free workspaces.\",\r\n        icon: <DollarSign className=\"w-5 h-5\" />,\r\n        category: \"Pricing\",\r\n    },\r\n    {\r\n        id: \"6\",\r\n        question: \"How do I change my account email?\",\r\n        answer:\r\n            \"You can change the email address associated with your account by going to your account settings and updating your profile information.\",\r\n        icon: <Mail className=\"w-5 h-5\" />,\r\n        category: \"General\",\r\n    },\r\n    {\r\n        id: \"7\",\r\n        question: \"How does support work?\",\r\n        answer:\r\n            \"We provide email and chat support to all users. Premium users also get access to phone support and priority assistance.\",\r\n        icon: <MessageCircle className=\"w-5 h-5\" />,\r\n        category: \"General\",\r\n    },\r\n    {\r\n        id: \"8\",\r\n        question: \"Do you provide tutorials?\",\r\n        answer:\r\n            \"Yes! We have a comprehensive knowledge base with step-by-step tutorials, video guides, and best practices to help you get the most out of our platform.\",\r\n        icon: <BookOpen className=\"w-5 h-5\" />,\r\n        category: \"General\",\r\n    },\r\n]\r\n\r\nexport default function FAQ({\r\n    title = \"Frequently asked questions\",\r\n    subtitle = \"These are the most commonly asked questions about Untitled UI. Can't find what you're looking for?\",\r\n    linkText = \"Chat to our friendly team!\",\r\n    linkHref = \"#\",\r\n    categories = [\"General\", \"Pricing\", \"Dashboard\", \"API\"],\r\n    faqs = defaultFAQs,\r\n    className,\r\n}: FAQBlockProps) {\r\n    const [activeCategory, setActiveCategory] = useState(categories[0])\r\n    const [openItems, setOpenItems] = useState<string[]>([\"1\"]) // First item open by default\r\n\r\n    const filteredFAQs = faqs.filter((faq) => faq.category === activeCategory)\r\n\r\n    const toggleItem = (id: string) => {\r\n        setOpenItems((prev) => (prev.includes(id) ? prev.filter((item) => item !== id) : [...prev, id]))\r\n    }\r\n\r\n    return (\r\n        <div className={cn(\"w-full max-w-4xl mx-auto px-4 py-16\", className)}>\r\n            <div className=\"text-center mb-12\">\r\n                <h2 className=\"text-3xl md:text-4xl font-bold text-foreground mb-4 transition-colors duration-200\">{title}</h2>\r\n                <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto transition-colors duration-200\">\r\n                    {subtitle}{\" \"}\r\n                    <Link\r\n                        href={linkHref}\r\n                        className=\"text-primary hover:text-primary/80 font-medium underline decoration-primary/30 hover:decoration-primary/60 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 focus:ring-offset-background rounded-sm\"\r\n                    >\r\n                        {linkText}\r\n                    </Link>\r\n                </p>\r\n            </div>\r\n            <div className=\"flex flex-wrap justify-center gap-2 mb-12\">\r\n                {categories.map((category) => (\r\n                    <Button\r\n                        key={category}\r\n                        variant={activeCategory === category ? \"default\" : \"outline\"}\r\n                        onClick={() => setActiveCategory(category)}\r\n                        className={cn(\r\n                            \"rounded-full px-6 py-2 text-sm font-medium transition-all duration-200\",\r\n                            activeCategory === category\r\n                                ? \"bg-foreground text-background hover:bg-foreground/90 shadow-md\"\r\n                                : \"bg-background text-foreground border-border hover:bg-accent hover:text-accent-foreground shadow-sm hover:shadow-md\",\r\n                        )}\r\n                        aria-pressed={activeCategory === category}\r\n                        role=\"tab\"\r\n                        aria-selected={activeCategory === category}\r\n                    >\r\n                        {category}\r\n                    </Button>\r\n                ))}\r\n            </div>\r\n            <div className=\"space-y-4\" role=\"tabpanel\" aria-labelledby={`category-${activeCategory}`}>\r\n                {filteredFAQs.map((faq, index) => (\r\n                    <Collapsible key={faq.id} open={openItems.includes(faq.id)} onOpenChange={() => toggleItem(faq.id)}>\r\n                        <div className=\"border border-border rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-all duration-200 bg-card\">\r\n                            <CollapsibleTrigger\r\n                                className=\"w-full p-6 text-left hover:bg-accent/50 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 focus:ring-offset-background group\"\r\n                                aria-expanded={openItems.includes(faq.id)}\r\n                                aria-controls={`faq-content-${faq.id}`}\r\n                                id={`faq-trigger-${faq.id}`}\r\n                            >\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center gap-4\">\r\n                                        <div className=\"text-muted-foreground flex-shrink-0 transition-colors duration-200 group-hover:text-foreground\">\r\n                                            {faq.icon}\r\n                                        </div>\r\n                                        <h3 className=\"text-lg font-semibold text-foreground transition-colors duration-200 text-left\">\r\n                                            {faq.question}\r\n                                        </h3>\r\n                                    </div>\r\n                                    <ChevronDown\r\n                                        className={cn(\r\n                                            \"w-5 h-5 text-muted-foreground transition-all duration-200 transform group-hover:text-foreground\",\r\n                                            {\r\n                                                \"rotate-180\": openItems.includes(faq.id),\r\n                                            },\r\n                                        )}\r\n                                        aria-hidden=\"true\"\r\n                                    />\r\n                                </div>\r\n                            </CollapsibleTrigger>\r\n                            <CollapsibleContent>\r\n                                <div\r\n                                    className=\"px-6 pb-6 pt-0 border-t border-border/50 bg-accent/20\"\r\n                                    id={`faq-content-${faq.id}`}\r\n                                    aria-labelledby={`faq-trigger-${faq.id}`}\r\n                                >\r\n                                    <div className=\"ml-9 pt-4 text-muted-foreground leading-relaxed transition-colors duration-200\">\r\n                                        {faq.answer}\r\n                                    </div>\r\n                                </div>\r\n                            </CollapsibleContent>\r\n                        </div>\r\n                    </Collapsible>\r\n                ))}\r\n            </div>\r\n            {filteredFAQs.length === 0 && (\r\n                <div className=\"text-center py-12\">\r\n                    <div className=\"text-muted-foreground mb-4\">\r\n                        <HelpCircle className=\"w-12 h-12 mx-auto\" />\r\n                    </div>\r\n                    <h3 className=\"text-lg font-medium text-foreground mb-2\">No FAQs found</h3>\r\n                    <p className=\"text-muted-foreground\">\r\n                        There are no frequently asked questions in the {activeCategory} category yet.\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/faq-1/page": {
      "content": "import FAQ from \"./components/faqs\";\r\n\r\nexport default function page() {\r\n    return (\r\n        <div className=\"min-h-screen py-8\">\r\n            <FAQ />\r\n        </div>\r\n    )\r\n}\r\n",
      "language": "tsx"
    }
  },
  "features-showcase-1": {
    "components": {
      "@/registry/view/features-showcase-1/components/feature-showcase": {
        "content": "import { ArrowRight, Box, LayoutGrid, Library } from \"lucide-react\"\n\nexport default function FeatureShowcase() {\n  return (\n    <div className=\"py-16 px-4 md:px-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"mb-8\">\n          <p className=\"text-pink-500 mb-2\">Key highlights</p>\n          <h2 className=\"text-5xl font-bold\">Why Alphabyte only?</h2>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <div className=\"border border-zinc-800 p-8 rounded-md\">\n            <div className=\"text-pink-500 mb-4\">\n              <LayoutGrid size={24} />\n            </div>\n            <h3 className=\"text-xl font-semibold mb-3\">Pixel Perfect Layout</h3>\n            <p className=\"text-zinc-400 mb-8\">\n              All the sections are perfectly designed with pixel perfect grids\n              and layouts. Everything you see is responsive for all devices.\n            </p>\n            <div className=\"flex items-center text-zinc-400 hover:text-pink-500 transition-colors cursor-pointer group\">\n              <span className=\"mr-2\">Learn more</span>\n              <ArrowRight\n                size={16}\n                className=\"group-hover:translate-x-1 transition-transform\"\n              />\n            </div>\n          </div>\n          <div className=\"border border-zinc-800 p-8 rounded-md\">\n            <div className=\"text-pink-500 mb-4\">\n              <Box size={24} />\n            </div>\n            <h3 className=\"text-xl font-semibold mb-3\">Editable Components</h3>\n            <p className=\"text-zinc-400 mb-8\">\n              With the help of Framer variables, everything is under you\n              control. Just click the component and start changing everything\n              but not anything.\n            </p>\n            <div className=\"flex items-center text-pink-500 hover:text-pink-400 transition-colors cursor-pointer group\">\n              <span className=\"mr-2\">Learn more</span>\n              <ArrowRight\n                size={16}\n                className=\"group-hover:translate-x-1 transition-transform\"\n              />\n            </div>\n          </div>\n          <div className=\"border border-zinc-800 p-8 rounded-md\">\n            <div className=\"text-pink-500 mb-4\">\n              <Library size={24} />\n            </div>\n            <h3 className=\"text-xl font-semibold mb-3\">Scalable Library</h3>\n            <p className=\"text-zinc-400 mb-8\">\n              Since each component is custom made, you can easily scale you\n              library with new components, icons, colors, etc.\n            </p>\n            <div className=\"flex items-center text-zinc-400 hover:text-pink-500 transition-colors cursor-pointer group\">\n              <span className=\"mr-2\">Learn more</span>\n              <ArrowRight\n                size={16}\n                className=\"group-hover:translate-x-1 transition-transform\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/features-showcase-1/page": {
      "content": "import FeatureShowcase from \"./components/feature-showcase\"\n\nexport default function Page() {\n  return (\n    <div className=\"h-screen  py-10 md:py-16 lg:py-20\">\n      <FeatureShowcase />\n    </div>\n  )\n}\n",
      "language": "tsx"
    }
  },
  "features-showcase-2": {
    "components": {
      "@/registry/view/features-showcase-2/components/features-showcase": {
        "content": "import type React from \"react\"\r\nimport { Ban, CreditCard, Shield, Smartphone } from \"lucide-react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface FeatureCardProps {\r\n    icon: React.ReactNode\r\n    title: string\r\n    description: string\r\n    variant: \"amber\" | \"cyan\" | \"emerald\" | \"blue\"\r\n    className?: string\r\n}\r\n\r\nfunction FeatureCard({ icon, title, description, variant, className }: FeatureCardProps) {\r\n    const variantStyles = {\r\n        amber: \"bg-amber-50 dark:bg-amber-950/20 border-amber-200 dark:border-amber-800/30\",\r\n        cyan: \"bg-cyan-50 dark:bg-cyan-950/20 border-cyan-200 dark:border-cyan-800/30\",\r\n        emerald: \"bg-emerald-50 dark:bg-emerald-950/20 border-emerald-200 dark:border-emerald-800/30\",\r\n        blue: \"bg-blue-50 dark:bg-blue-950/20 border-blue-200 dark:border-blue-800/30\",\r\n    }\r\n\r\n    const iconStyles = {\r\n        amber: \"text-amber-600 dark:text-amber-400\",\r\n        cyan: \"text-cyan-600 dark:text-cyan-400\",\r\n        emerald: \"text-emerald-600 dark:text-emerald-400\",\r\n        blue: \"text-blue-600 dark:text-blue-400\",\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={cn(\r\n                \"p-6 rounded-lg border transition-all duration-200 hover:shadow-md hover:scale-[1.02]\",\r\n                variantStyles[variant],\r\n                className,\r\n            )}\r\n        >\r\n            <div className=\"mb-4\">\r\n                <div className={cn(\"h-8 w-8 transition-colors duration-200\", iconStyles[variant])}>{icon}</div>\r\n            </div>\r\n            <h3 className=\"font-bold text-lg mb-2 text-foreground transition-colors duration-200\">{title}</h3>\r\n            <p className=\"text-muted-foreground text-sm leading-relaxed transition-colors duration-200\">{description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function FinancialFeatures() {\r\n    const features = [\r\n        {\r\n            icon: <CreditCard className=\"h-8 w-8\" />,\r\n            title: \"Modern Cards\",\r\n            description: \"Up-to-date payment methods for convenience and efficiency.\",\r\n            variant: \"amber\" as const,\r\n        },\r\n        {\r\n            icon: <Ban className=\"h-8 w-8\" />,\r\n            title: \"No Extra Fees\",\r\n            description: \"Transparent pricing with no hidden charges.\",\r\n            variant: \"cyan\" as const,\r\n        },\r\n        {\r\n            icon: <Shield className=\"h-8 w-8\" />,\r\n            title: \"Super Secure\",\r\n            description: \"Advanced security measures to protect your transactions.\",\r\n            variant: \"amber\" as const,\r\n        },\r\n        {\r\n            icon: <Smartphone className=\"h-8 w-8\" />,\r\n            title: \"Contactless Payments\",\r\n            description: \"Convenient and hygienic transactions with tap-and-go technology.\",\r\n            variant: \"emerald\" as const,\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <section className=\"py-16 px-4 bg-background transition-colors duration-200\">\r\n            <div className=\"container mx-auto max-w-6xl\">\r\n                <div className=\"text-center mb-12\">\r\n                    <h2 className=\"text-3xl font-bold mb-3 text-foreground transition-colors duration-200\">\r\n                        Custom-built for financial exchanges\r\n                    </h2>\r\n                    <p className=\"text-muted-foreground max-w-3xl mx-auto leading-relaxed transition-colors duration-200\">\r\n                        Our platform offers secure and efficient transaction capabilities, tailored to meet diverse payment needs\r\n                        with robust features.\r\n                    </p>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n                    {features.map((feature, index) => (\r\n                        <FeatureCard\r\n                            key={index}\r\n                            icon={feature.icon}\r\n                            title={feature.title}\r\n                            description={feature.description}\r\n                            variant={feature.variant}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/features-showcase-2/page": {
      "content": "import FinancialFeatures from \"./components/features-showcase\"\r\n\r\nexport default function Page() {\r\n    return (\r\n        <div>\r\n            <FinancialFeatures />\r\n        </div>\r\n    )\r\n}\r\n",
      "language": "tsx"
    }
  },
  "features-showcase-3": {
    "components": {
      "@/registry/view/features-showcase-3/components/features-showcase": {
        "content": "import { HeartPulse, Stethoscope, ShieldCheck, Activity } from \"lucide-react\"\r\n\r\nexport default function FeaturesShowcase() {\r\n    const features = [\r\n        {\r\n            icon: ShieldCheck,\r\n            title: \"Secure & Compliant by Default\",\r\n            description:\r\n                \"Built with end-to-end encryption and fully compliant with HIPAA standards to safeguard patient data and ensure trust.\",\r\n        },\r\n        {\r\n            icon: HeartPulse,\r\n            title: \"Realtime Vital Signs Display\",\r\n            description:\r\n                \"Designed for critical care environments — instantly render and update patient vitals with zero lag and clinical-grade precision.\",\r\n        },\r\n        {\r\n            icon: Stethoscope,\r\n            title: \"Ergonomic for Medical Workflows\",\r\n            description:\r\n                \"Crafted for doctors, nurses, and specialists. Clear layouts and intuitive spacing reduce cognitive load in high-pressure scenarios.\",\r\n        },\r\n        {\r\n            icon: Activity,\r\n            title: \"Live Health Metrics & Analytics\",\r\n            description:\r\n                \"Visualize trends, charts, and diagnostic data in real-time. Engineered for clarity and speed in data-driven medical decisions.\",\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <section className=\"w-full py-20 bg-gradient-to-b from-neutral-50 to-neutral-100 dark:from-neutral-900 dark:to-neutral-950\">\r\n            <div className=\"container px-4 mx-auto max-w-6xl\">\r\n                <div className=\"mb-16 text-center\">\r\n                    <h2 className=\"text-3xl md:text-4xl font-medium text-neutral-900 dark:text-neutral-50 mb-4\">\r\n                        Healthcare-Optimized Components\r\n                    </h2>\r\n                    <p className=\"text-neutral-600 dark:text-neutral-300 text-lg max-w-2xl mx-auto\">\r\n                        Designed specifically for medical interfaces with a focus on clarity, performance, and compliance.\r\n                    </p>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n                    {features.map((feature, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className=\"bg-white dark:bg-neutral-800 rounded-2xl p-8 shadow-[0_2px_10px_rgba(0,0,0,0.03)] dark:shadow-[0_2px_10px_rgba(0,0,0,0.2)] border border-neutral-100 dark:border-neutral-700 transition-all duration-200 hover:shadow-[0_10px_30px_rgba(0,0,0,0.04)] dark:hover:shadow-[0_10px_30px_rgba(0,0,0,0.2)]\"\r\n                        >\r\n                            <div className=\"h-12 w-12 rounded-full bg-neutral-100 dark:bg-neutral-700 flex items-center justify-center mb-6\">\r\n                                <feature.icon className=\"h-6 w-6 text-neutral-700 dark:text-neutral-200\" />\r\n                            </div>\r\n                            <h3 className=\"text-xl font-medium text-neutral-900 dark:text-neutral-50 mb-3\">{feature.title}</h3>\r\n                            <p className=\"text-neutral-600 dark:text-neutral-300 leading-relaxed\">{feature.description}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/features-showcase-3/page": {
      "content": "import FeaturesShowcase from \"./components/features-showcase\"\r\n\r\nexport default function page() {\r\n    return (\r\n        <main className=\"min-h-screen\">\r\n            <FeaturesShowcase />\r\n        </main>\r\n    )\r\n}\r\n",
      "language": "tsx"
    }
  },
  "features-showcase-4": {
    "components": {
      "@/registry/view/features-showcase-4/components/features-showcase": {
        "content": "\"use client\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { motion } from \"framer-motion\"\r\nimport { BarChart3, ChevronRight, Globe, LineChart, Settings, Shield } from \"lucide-react\"\r\nimport type React from \"react\"\r\nimport { useState } from \"react\"\r\n\r\ninterface Feature {\r\n    icon: React.ReactNode\r\n    title: string\r\n    description: string\r\n    color: {\r\n        light: string\r\n        dark: string\r\n    }\r\n    iconColor: {\r\n        light: string\r\n        dark: string\r\n    }\r\n    hoverColor: {\r\n        light: string\r\n        dark: string\r\n    }\r\n}\r\n\r\nexport default function FeaturesShowcase3() {\r\n    const [hoveredFeature, setHoveredFeature] = useState<number | null>(null)\r\n\r\n    const features: Feature[] = [\r\n        {\r\n            icon: <LineChart className=\"h-6 w-6\" />,\r\n            title: \"Performance Analytics\",\r\n            description: \"Advanced metrics and insights to optimize your business operations and track growth.\",\r\n            color: {\r\n                light: \"bg-gradient-to-br from-blue-50 to-blue-100\",\r\n                dark: \"bg-gradient-to-br from-blue-950/40 to-blue-900/30\",\r\n            },\r\n            iconColor: {\r\n                light: \"text-blue-600\",\r\n                dark: \"text-blue-400\",\r\n            },\r\n            hoverColor: {\r\n                light: \"from-blue-100 to-blue-200\",\r\n                dark: \"from-blue-900/50 to-blue-800/40\",\r\n            },\r\n        },\r\n        {\r\n            icon: <Shield className=\"h-6 w-6\" />,\r\n            title: \"Enterprise Security\",\r\n            description: \"Military-grade encryption and compliance protocols to protect your sensitive data.\",\r\n            color: {\r\n                light: \"bg-gradient-to-br from-purple-50 to-purple-100\",\r\n                dark: \"bg-gradient-to-br from-purple-950/40 to-purple-900/30\",\r\n            },\r\n            iconColor: {\r\n                light: \"text-purple-600\",\r\n                dark: \"text-purple-400\",\r\n            },\r\n            hoverColor: {\r\n                light: \"from-purple-100 to-purple-200\",\r\n                dark: \"from-purple-900/50 to-purple-800/40\",\r\n            },\r\n        },\r\n        {\r\n            icon: <Settings className=\"h-6 w-6\" />,\r\n            title: \"Seamless Integration\",\r\n            description: \"Connect with your existing tech stack through our extensive API and integration ecosystem.\",\r\n            color: {\r\n                light: \"bg-gradient-to-br from-amber-50 to-amber-100\",\r\n                dark: \"bg-gradient-to-br from-amber-950/40 to-amber-900/30\",\r\n            },\r\n            iconColor: {\r\n                light: \"text-amber-600\",\r\n                dark: \"text-amber-400\",\r\n            },\r\n            hoverColor: {\r\n                light: \"from-amber-100 to-amber-200\",\r\n                dark: \"from-amber-900/50 to-amber-800/40\",\r\n            },\r\n        },\r\n        {\r\n            icon: <BarChart3 className=\"h-6 w-6\" />,\r\n            title: \"Advanced Reporting\",\r\n            description: \"Customizable dashboards and reports that deliver actionable business intelligence.\",\r\n            color: {\r\n                light: \"bg-gradient-to-br from-emerald-50 to-emerald-100\",\r\n                dark: \"bg-gradient-to-br from-emerald-950/40 to-emerald-900/30\",\r\n            },\r\n            iconColor: {\r\n                light: \"text-emerald-600\",\r\n                dark: \"text-emerald-400\",\r\n            },\r\n            hoverColor: {\r\n                light: \"from-emerald-100 to-emerald-200\",\r\n                dark: \"from-emerald-900/50 to-emerald-800/40\",\r\n            },\r\n        },\r\n        {\r\n            icon: <Globe className=\"h-6 w-6\" />,\r\n            title: \"Global Infrastructure\",\r\n            description: \"Distributed architecture ensuring reliability, scalability, and low-latency worldwide.\",\r\n            color: {\r\n                light: \"bg-gradient-to-br from-rose-50 to-rose-100\",\r\n                dark: \"bg-gradient-to-br from-rose-950/40 to-rose-900/30\",\r\n            },\r\n            iconColor: {\r\n                light: \"text-rose-600\",\r\n                dark: \"text-rose-400\",\r\n            },\r\n            hoverColor: {\r\n                light: \"from-rose-100 to-rose-200\",\r\n                dark: \"from-rose-900/50 to-rose-800/40\",\r\n            },\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <section className=\"py-24 px-6 md:px-12 bg-background transition-colors duration-300\">\r\n            <div className=\"max-w-7xl mx-auto\">\r\n                <div className=\"text-center mb-16\">\r\n                    <h2 className=\"text-3xl md:text-4xl font-semibold tracking-tight text-foreground mb-4 transition-colors duration-300\">\r\n                        Enterprise-Grade Solutions\r\n                    </h2>\r\n                    <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto transition-colors duration-300\">\r\n                        Robust features designed to optimize operations, enhance security, and accelerate your organization's\r\n                        digital transformation.\r\n                    </p>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                    {features.map((feature, index) => (\r\n                        <motion.div\r\n                            key={index}\r\n                            className={cn(\r\n                                \"relative rounded-2xl p-8 overflow-hidden transition-all duration-300 ease-out border\",\r\n                                \"dark:border-gray-800 border-gray-200 shadow-sm hover:shadow-md\",\r\n                                feature.color.light,\r\n                                \"dark:\" + feature.color.dark,\r\n                            )}\r\n                            onMouseEnter={() => setHoveredFeature(index)}\r\n                            onMouseLeave={() => setHoveredFeature(null)}\r\n                            initial={{ opacity: 0, y: 20 }}\r\n                            whileInView={{ opacity: 1, y: 0 }}\r\n                            viewport={{ once: true, amount: 0.2 }}\r\n                            transition={{ duration: 0.5, delay: index * 0.1 }}\r\n                            role=\"article\"\r\n                            aria-labelledby={`feature-title-${index}`}\r\n                        >\r\n                            <motion.div\r\n                                className={cn(\r\n                                    \"absolute inset-0 z-0 transition-opacity duration-300\",\r\n                                    hoveredFeature === index ? `bg-gradient-to-br ${feature.hoverColor.light}` : \"\",\r\n                                    hoveredFeature === index ? `dark:bg-gradient-to-br dark:${feature.hoverColor.dark}` : \"\",\r\n                                )}\r\n                                initial={{ opacity: 0 }}\r\n                                animate={{ opacity: hoveredFeature === index ? 1 : 0 }}\r\n                                aria-hidden=\"true\"\r\n                            />\r\n                            <div className=\"relative z-10\">\r\n                                <div\r\n                                    className={cn(\r\n                                        feature.iconColor.light,\r\n                                        \"dark:\" + feature.iconColor.dark,\r\n                                        \"mb-5 transition-colors duration-300\",\r\n                                    )}\r\n                                >\r\n                                    {feature.icon}\r\n                                </div>\r\n                                <h3\r\n                                    id={`feature-title-${index}`}\r\n                                    className=\"text-xl font-semibold text-foreground mb-3 transition-colors duration-300\"\r\n                                >\r\n                                    {feature.title}\r\n                                </h3>\r\n                                <p className=\"text-muted-foreground mb-6 text-sm leading-relaxed transition-colors duration-300\">\r\n                                    {feature.description}\r\n                                </p>\r\n                                <motion.div\r\n                                    className=\"flex items-center text-sm font-medium cursor-pointer group\"\r\n                                    whileHover={{ x: 5 }}\r\n                                    transition={{ type: \"spring\", stiffness: 300, damping: 20 }}\r\n                                    tabIndex={0}\r\n                                    role=\"button\"\r\n                                    aria-label={`Learn more about ${feature.title}`}\r\n                                    onKeyDown={(e) => {\r\n                                        if (e.key === \"Enter\" || e.key === \" \") {\r\n                                            e.preventDefault()\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <span\r\n                                        className={cn(\r\n                                            feature.iconColor.light,\r\n                                            \"dark:\" + feature.iconColor.dark,\r\n                                            \"transition-colors duration-300\",\r\n                                        )}\r\n                                    >\r\n                                        Learn more\r\n                                    </span>\r\n                                    <ChevronRight\r\n                                        className={cn(\r\n                                            \"h-4 w-4 ml-1 transition-transform group-hover:translate-x-1\",\r\n                                            feature.iconColor.light,\r\n                                            \"dark:\" + feature.iconColor.dark,\r\n                                            \"transition-colors duration-300\",\r\n                                        )}\r\n                                        aria-hidden=\"true\"\r\n                                    />\r\n                                </motion.div>\r\n                            </div>\r\n                        </motion.div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/features-showcase-4/page": {
      "content": "import FeaturesShowcase from \"./components/features-showcase\"\r\n\r\nexport default function Page() {\r\n    return (\r\n        <div>\r\n            <FeaturesShowcase />\r\n        </div>\r\n    )\r\n}\r\n",
      "language": "tsx"
    }
  },
  "login-1": {
    "components": {
      "@/registry/view/login-1/components/login-form": {
        "content": "\"use client\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport Link from \"next/link\"\nimport type React from \"react\"\nimport { useState } from \"react\"\nimport { FcGoogle } from \"react-icons/fc\"\nimport { FiEye, FiEyeOff } from \"react-icons/fi\"\n\nexport function LoginForm({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<\"div\">) {\n  const [showPassword, setShowPassword] = useState(false)\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword)\n  }\n\n  return (\n    <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-2xl\">Login</CardTitle>\n          <CardDescription>\n            Enter your email below to login to your account\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form>\n            <div className=\"flex flex-col gap-6\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"m@example.com\"\n                  required\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <div className=\"flex items-center\">\n                  <Label htmlFor=\"password\">Password</Label>\n                  <a\n                    href=\"#\"\n                    className=\"ml-auto inline-block text-sm underline-offset-4 hover:underline\"\n                  >\n                    Forgot your password?\n                  </a>\n                </div>\n                <div className=\"relative\">\n                  <Input\n                    id=\"password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    required\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                    onClick={togglePasswordVisibility}\n                    aria-label={\n                      showPassword ? \"Hide password\" : \"Show password\"\n                    }\n                  >\n                    {showPassword ? (\n                      <FiEyeOff className=\"h-4 w-4 text-gray-500\" />\n                    ) : (\n                      <FiEye className=\"h-4 w-4 text-gray-500\" />\n                    )}\n                    <span className=\"sr-only\">\n                      {showPassword ? \"Hide password\" : \"Show password\"}\n                    </span>\n                  </Button>\n                </div>\n              </div>\n              <Button type=\"submit\" className=\"w-full\">\n                Login\n              </Button>\n              <Button variant=\"outline\" className=\"w-full\">\n                <FcGoogle className=\"inline-block text-lg \" />\n                Login with Google\n              </Button>\n            </div>\n            <div className=\"mt-4 text-center text-sm\">\n              Don&apos;t have an account?{\" \"}\n              <Link\n                href=\"/view/signup-1\"\n                className=\"underline underline-offset-4\"\n              >\n                Sign up\n              </Link>\n            </div>\n          </form>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/login-1/page": {
      "content": "import Container from \"@/components/Container\"\nimport { LoginForm } from \"./components/login-form\"\n\nexport default function LogInPage() {\n  return (\n    <div className=\"flex min-h-svh w-full items-center justify-center p-6 md:p-10\">\n      <Container className=\"w-full max-w-sm\">\n        <LoginForm />\n      </Container>\n    </div>\n  )\n}\n",
      "language": "tsx"
    }
  },
  "login-2": {
    "components": {
      "@/registry/view/login-2/components/login-form": {
        "content": "import { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { cn } from \"@/lib/utils\"\nimport { ArrowLeft, Eye, EyeOff } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { useState } from \"react\"\n\nexport function LoginForm({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  const [showPassword, setShowPassword] = useState(false)\n  const togglePasswordVisibility = () => setShowPassword((prev) => !prev)\n\n  return (\n    <div className={cn(\"flex flex-col gap-6 py-12\", className)} {...props}>\n      <Link\n        href=\"/\"\n        className=\"absolute top-4 left-4 text-foreground hover:text-primary transition-colors\"\n      >\n        <span className=\"flex items-center\">\n          <ArrowLeft className=\"mr-2 w-5 h-5\" />\n          Back to Home\n        </span>\n      </Link>\n      <Card className=\"overflow-hidden\">\n        <CardContent className=\"grid p-0 md:grid-cols-2\">\n          <form className=\"p-6 md:p-8\">\n            <div className=\"flex flex-col gap-6\">\n              <div className=\"flex flex-col items-center text-center\">\n                <h1 className=\"text-2xl font-bold\">Welcome back</h1>\n                <p className=\"text-balance text-muted-foreground\">\n                  Login to your Acme Inc account\n                </p>\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"m@example.com\"\n                  required\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <div className=\"flex items-center\">\n                  <Label htmlFor=\"password\">Password</Label>\n                  <Link\n                    href=\"#\"\n                    className=\"ml-auto text-sm underline-offset-2 hover:underline\"\n                  >\n                    Forgot your password?\n                  </Link>\n                </div>\n                <div className=\"relative\">\n                  <Input\n                    id=\"password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    required\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                    onClick={togglePasswordVisibility}\n                    aria-label={\n                      showPassword ? \"Hide password\" : \"Show password\"\n                    }\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\n                    ) : (\n                      <Eye className=\"h-5 w-5 text-muted-foreground\" />\n                    )}\n                    <span className=\"sr-only\">\n                      {showPassword ? \"Hide password\" : \"Show password\"}\n                    </span>\n                  </Button>\n                </div>\n              </div>\n              <Button type=\"submit\" className=\"w-full\">\n                Login\n              </Button>\n              <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\n                <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\n                  Or continue with\n                </span>\n              </div>\n              <div className=\"grid grid-cols-3 gap-4\">\n                <Button variant=\"outline\" className=\"w-full\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                    <path\n                      d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\n                      fill=\"currentColor\"\n                    />\n                  </svg>\n                  <span className=\"sr-only\">Login with Apple</span>\n                </Button>\n                <Button variant=\"outline\" className=\"w-full\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                    <path\n                      d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\n                      fill=\"currentColor\"\n                    />\n                  </svg>\n                  <span className=\"sr-only\">Login with Google</span>\n                </Button>\n                <Button variant=\"outline\" className=\"w-full\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    width={30}\n                    height={30}\n                  >\n                    <path\n                      d=\"M6.915 4.03c-1.968 0-3.683 1.28-4.871 3.113C.704 9.208 0 11.883 0 14.449c0 .706.07 1.369.21 1.973a6.624 6.624 0 0 0 .265.86 5.297 5.297 0 0 0 .371.761c.696 1.159 1.818 1.927 3.593 1.927 1.497 0 2.633-.671 3.965-2.444.76-1.012 1.144-1.626 2.663-4.32l.756-1.339.186-.325c.061.1.121.196.183.3l2.152 3.595c.724 1.21 1.665 2.556 2.47 3.314 1.046.987 1.992 1.22 3.06 1.22 1.075 0 1.876-.355 2.455-.843a3.743 3.743 0 0 0 .81-.973c.542-.939.861-2.127.861-3.745 0-2.72-.681-5.357-2.084-7.45-1.282-1.912-2.957-2.93-4.716-2.93-1.047 0-2.088.467-3.053 1.308-.652.57-1.257 1.29-1.82 2.05-.69-.875-1.335-1.547-1.958-2.056-1.182-.966-2.315-1.303-3.454-1.303zm10.16 2.053c1.147 0 2.188.758 2.992 1.999 1.132 1.748 1.647 4.195 1.647 6.4 0 1.548-.368 2.9-1.839 2.9-.58 0-1.027-.23-1.664-1.004-.496-.601-1.343-1.878-2.832-4.358l-.617-1.028a44.908 44.908 0 0 0-1.255-1.98c.07-.109.141-.224.211-.327 1.12-1.667 2.118-2.602 3.358-2.602zm-10.201.553c1.265 0 2.058.791 2.675 1.446.307.327.737.871 1.234 1.579l-1.02 1.566c-.757 1.163-1.882 3.017-2.837 4.338-1.191 1.649-1.81 1.817-2.486 1.817-.524 0-1.038-.237-1.383-.794-.263-.426-.464-1.13-.464-2.046 0-2.221.63-4.535 1.66-6.088.454-.687.964-1.226 1.533-1.533a2.264 2.264 0 0 1 1.088-.285z\"\n                      fill=\"currentColor\"\n                    />\n                  </svg>\n                  <span className=\"sr-only\">Login with Meta</span>\n                </Button>\n              </div>\n              <div className=\"text-center text-sm\">\n                Don&apos;t have an account?{\" \"}\n                <Link href=\"#\" className=\"underline underline-offset-4\">\n                  Sign up\n                </Link>\n              </div>\n            </div>\n          </form>\n          <div className=\"flex-1 hidden md:block relative\">\n            <img\n              src=\"/blocks/case-studies-1/image-1.jpg\"\n              alt=\"Art Lighting Showcase\"\n              className=\"absolute inset-0 h-full w-full object-cover\"\n            />\n            <div className=\"absolute inset-0 bg-background/60 backdrop-blur-sm flex flex-col justify-end p-8 text-foreground\">\n              <h2 className=\"text-3xl font-bold mb-2\">Join Alpha</h2>\n              <p className=\"text-sm\">\n                Create your account and Get your first custom MVP\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n      <div className=\"text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:text-primary\">\n        By clicking continue, you agree to our{\" \"}\n        <Link href=\"#\">Terms of Service</Link> and{\" \"}\n        <Link href=\"#\">Privacy Policy</Link>.\n      </div>\n    </div>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/login-2/page": {
      "content": "import Container from \"@/components/Container\"\nimport { LoginForm } from \"./components/login-form\"\n\nexport default function LogInPage() {\n  return (\n    <div className=\"flex min-h-svh flex-col items-center justify-center p-6 md:p-10 bg-gradient-to-br from-primary/20 via-background to-secondary/20\">\n      <Container className=\"w-full max-w-sm md:max-w-3xl\">\n        <LoginForm />\n      </Container>\n    </div>\n  )\n}\n",
      "language": "tsx"
    }
  },
  "login-3": {
    "components": {
      "@/registry/view/login-3/components/login-form": {
        "content": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { cn } from \"@/lib/utils\"\nimport { Eye, EyeOff } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { useState } from \"react\"\n\nexport function LoginForm({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<\"form\">) {\n  const [showPassword, setShowPassword] = useState(false)\n  const togglePasswordVisibility = () => setShowPassword((prev) => !prev)\n\n  return (\n    <form className={cn(\"flex flex-col gap-6\", className)} {...props}>\n      <div className=\"flex flex-col items-center gap-2 text-center\">\n        <h1 className=\"text-2xl font-bold\">Login to your account</h1>\n        <p className=\"text-balance text-sm text-muted-foreground\">\n          Enter your email below to login to your account\n        </p>\n      </div>\n      <div className=\"grid gap-6\">\n        <div className=\"grid gap-2\">\n          <Label htmlFor=\"email\">Email</Label>\n          <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\n        </div>\n        <div className=\"grid gap-2\">\n          <div className=\"flex items-center\">\n            <Label htmlFor=\"password\">Password</Label>\n            <Link\n              href=\"#\"\n              className=\"ml-auto text-sm underline-offset-2 hover:underline\"\n            >\n              Forgot your password?\n            </Link>\n          </div>\n          <div className=\"relative\">\n            <Input\n              id=\"password\"\n              type={showPassword ? \"text\" : \"password\"}\n              required\n            />\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\n              onClick={togglePasswordVisibility}\n              aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n            >\n              {showPassword ? (\n                <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\n              ) : (\n                <Eye className=\"h-5 w-5 text-muted-foreground\" />\n              )}\n              <span className=\"sr-only\">\n                {showPassword ? \"Hide password\" : \"Show password\"}\n              </span>\n            </Button>\n          </div>\n        </div>\n        <Button type=\"submit\" className=\"w-full\">\n          Login\n        </Button>\n        <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\n          <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\n            Or continue with\n          </span>\n        </div>\n        <Button variant=\"outline\" className=\"w-full\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n            <path\n              d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n              fill=\"currentColor\"\n            />\n          </svg>\n          Login with GitHub\n        </Button>\n      </div>\n      <div className=\"text-center text-sm\">\n        Don&apos;t have an account?{\" \"}\n        <a href=\"#\" className=\"underline underline-offset-4\">\n          Sign up\n        </a>\n      </div>\n    </form>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/login-3/page": {
      "content": "import { GalleryVerticalEnd } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { LoginForm } from \"./components/login-form\"\n\nexport default function LoginPage() {\n  return (\n    <div className=\"grid min-h-svh lg:grid-cols-2\">\n      <div className=\"flex flex-col gap-4 p-6 md:p-10\">\n        <div className=\"flex justify-center gap-2 md:justify-start\">\n          <Link href=\"#\" className=\"flex items-center gap-2 font-medium\">\n            <div className=\"flex h-6 w-6 items-center justify-center rounded-md bg-primary text-primary-foreground\">\n              <GalleryVerticalEnd className=\"size-4\" />\n            </div>\n            UniqueBrand.\n          </Link>\n        </div>\n        <div className=\"flex flex-1 items-center justify-center\">\n          <div className=\"w-full max-w-xs\">\n            <LoginForm />\n          </div>\n        </div>\n      </div>\n      <div className=\"relative hidden bg-muted lg:block\">\n        <img\n          src=\"/blocks/case-studies-1/image-1.jpg\"\n          alt=\"Image\"\n          className=\"absolute inset-0 h-full w-full object-cover dark:brightness-[0.2] dark:grayscale\"\n        />\n      </div>\n    </div>\n  )\n}\n",
      "language": "tsx"
    }
  },
  "login-4": {
    "components": {
      "@/registry/view/login-4/components/login-form": {
        "content": "\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { cn } from \"@/lib/utils\"\nimport { Eye, EyeOff, GalleryVerticalEnd } from \"lucide-react\"\nimport Link from \"next/link\"\nimport { useState } from \"react\"\n\nexport function LoginForm({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<\"div\">) {\n  const [showPassword, setShowPassword] = useState(false)\n  const togglePasswordVisibility = () => setShowPassword((prev) => !prev)\n\n  return (\n    <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\n      <form>\n        <div className=\"flex flex-col gap-6\">\n          <div className=\"flex flex-col items-center gap-2\">\n            <a\n              href=\"#\"\n              className=\"flex flex-col items-center gap-2 font-medium\"\n            >\n              <div className=\"flex h-8 w-8 items-center justify-center rounded-md\">\n                <GalleryVerticalEnd className=\"size-6\" />\n              </div>\n              <span className=\"sr-only\">Acme Inc.</span>\n            </a>\n            <h1 className=\"text-xl font-bold\">Welcome to Acme Inc.</h1>\n            <div className=\"text-center text-sm\">\n              Don&apos;t have an account?{\" \"}\n              <a href=\"#\" className=\"underline underline-offset-4\">\n                Sign up\n              </a>\n            </div>\n          </div>\n          <div className=\"flex flex-col gap-6\">\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"m@example.com\"\n                required\n              />\n            </div>\n            <div className=\"grid gap-2\">\n              <div className=\"flex items-center\">\n                <Label htmlFor=\"password\">Password</Label>\n                <Link\n                  href=\"#\"\n                  className=\"ml-auto text-sm underline-offset-2 hover:underline\"\n                >\n                  Forgot your password?\n                </Link>\n              </div>\n              <div className=\"relative\">\n                <Input\n                  id=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  required\n                />\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                  onClick={togglePasswordVisibility}\n                  aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-muted-foreground\" />\n                  )}\n                  <span className=\"sr-only\">\n                    {showPassword ? \"Hide password\" : \"Show password\"}\n                  </span>\n                </Button>\n              </div>\n            </div>\n            <Button type=\"submit\" className=\"w-full\">\n              Login\n            </Button>\n          </div>\n          <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\n            <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\n              Or\n            </span>\n          </div>\n          <div className=\"grid gap-4 sm:grid-cols-2\">\n            <Button variant=\"outline\" className=\"w-full\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                <path\n                  d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n              Continue with Apple\n            </Button>\n            <Button variant=\"outline\" className=\"w-full\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                <path\n                  d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n              Continue with Google\n            </Button>\n          </div>\n        </div>\n      </form>\n      <div className=\"text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:text-primary  \">\n        By clicking continue, you agree to our <a href=\"#\">Terms of Service</a>{\" \"}\n        and <a href=\"#\">Privacy Policy</a>.\n      </div>\n    </div>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/login-4/page": {
      "content": "import { LoginForm } from \"./components/login-form\"\n\nexport default function LoginPage() {\n  return (\n    <div className=\"flex min-h-svh flex-col items-center justify-center gap-6 bg-background p-6 md:p-10\">\n      <div className=\"w-full max-w-sm\">\n        <LoginForm />\n      </div>\n    </div>\n  )\n}\n",
      "language": "tsx"
    }
  },
  "navbar-1": {
    "components": {
      "@/registry/view/navbar-1/components/navbar": {
        "content": "import Link from \"next/link\"\nimport { Menu } from \"lucide-react\"\n\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n} from \"@/components/ui/navigation-menu\"\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\"\n\nimport {\n  defaultAuth,\n  defaultLogo,\n  defaultMenu,\n  defaultMobileExtraLinks,\n  MenuItem,\n} from \"../constant\"\n\ninterface NavbarProps {\n  logo?: {\n    url: string\n    alt: string\n    title: string\n  }\n  menu?: MenuItem[]\n  mobileExtraLinks?: {\n    name: string\n    url: string\n  }[]\n  auth?: {\n    login: {\n      text: string\n      url: string\n    }\n    signup: {\n      text: string\n      url: string\n    }\n  }\n}\n\nconst Navbar = ({\n  logo = defaultLogo,\n  menu = defaultMenu,\n  mobileExtraLinks = defaultMobileExtraLinks,\n  auth = defaultAuth,\n}: NavbarProps) => {\n  return (\n    <section className=\"py-4 border-b\">\n      <div className=\"container\">\n        {/* Desktop Navigation */}\n        <nav className=\"hidden justify-between lg:flex\">\n          <div className=\"flex items-center gap-6\">\n            <Link href={logo.url} className=\"flex items-center gap-2\">\n              <span className=\"text-lg font-semibold\">{logo.title}</span>\n            </Link>\n            <NavigationMenu>\n              <NavigationMenuList>\n                {menu.map((item) => renderMenuItem(item))}\n              </NavigationMenuList>\n            </NavigationMenu>\n          </div>\n          <div className=\"flex gap-2\">\n            <Button variant=\"outline\">{auth.login.text}</Button>\n            <Button>{auth.signup.text}</Button>\n          </div>\n        </nav>\n\n        {/* Mobile Navigation */}\n        <div className=\"block lg:hidden\">\n          <div className=\"flex items-center justify-between\">\n            <Link href={logo.url} className=\"flex items-center gap-2\">\n              <span className=\"text-lg font-semibold\">{logo.title}</span>\n            </Link>\n            <Sheet>\n              <SheetTrigger asChild>\n                <Button variant=\"outline\" size=\"icon\">\n                  <Menu className=\"h-5 w-5\" />\n                </Button>\n              </SheetTrigger>\n              <SheetContent className=\"overflow-y-auto\">\n                <SheetHeader>\n                  <SheetTitle>\n                    <Link href={logo.url} className=\"flex items-center gap-2\">\n                      <span className=\"text-lg font-semibold\">\n                        {logo.title}\n                      </span>\n                    </Link>\n                  </SheetTitle>\n                </SheetHeader>\n                <div className=\"my-6 flex flex-col gap-6\">\n                  <Accordion type=\"single\" collapsible className=\"w-full\">\n                    {menu.map((item) => renderMobileMenuItem(item))}\n                  </Accordion>\n                  <div className=\"border-t py-4\">\n                    <div className=\"grid grid-cols-2 gap-2\">\n                      {mobileExtraLinks.map((link, idx) => (\n                        <Link\n                          key={idx}\n                          className=\"inline-flex items-center justify-center rounded-md px-4 py-2 text-sm font-medium text-muted-foreground transition-colors hover:bg-muted hover:text-accent-foreground\"\n                          href={link.url}\n                        >\n                          {link.name}\n                        </Link>\n                      ))}\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col gap-3\">\n                    <Button variant=\"outline\">{auth.login.text}</Button>\n                    <Button>{auth.signup.text}</Button>\n                  </div>\n                </div>\n              </SheetContent>\n            </Sheet>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nconst renderMenuItem = (item: MenuItem) => {\n  if (item.items) {\n    return (\n      <NavigationMenuItem key={item.title}>\n        <NavigationMenuTrigger>{item.title}</NavigationMenuTrigger>\n        <NavigationMenuContent>\n          <ul className=\"w-80 p-3\">\n            {item.items.map((subItem) => (\n              <li key={subItem.title}>\n                <NavigationMenuLink asChild>\n                  <Link\n                    className=\"flex items-center gap-4 rounded-md p-3 transition-colors hover:bg-muted hover:text-accent-foreground\"\n                    href={subItem.url}\n                  >\n                    {subItem.icon}\n                    <div>\n                      <div className=\"text-sm font-semibold\">\n                        {subItem.title}\n                      </div>\n                      {subItem.description && (\n                        <p className=\"text-sm text-muted-foreground\">\n                          {subItem.description}\n                        </p>\n                      )}\n                    </div>\n                  </Link>\n                </NavigationMenuLink>\n              </li>\n            ))}\n          </ul>\n        </NavigationMenuContent>\n      </NavigationMenuItem>\n    )\n  }\n\n  return (\n    <NavigationMenuItem key={item.title}>\n      <NavigationMenuLink asChild>\n        <Link\n          className=\"group inline-flex items-center rounded-md px-4 py-2 text-sm font-medium transition-colors hover:bg-muted hover:text-accent-foreground\"\n          href={item.url}\n        >\n          {item.title}\n        </Link>\n      </NavigationMenuLink>\n    </NavigationMenuItem>\n  )\n}\n\nconst renderMobileMenuItem = (item: MenuItem) => {\n  if (item.items) {\n    return (\n      <AccordionItem key={item.title} value={item.title} className=\"border-b-0\">\n        <AccordionTrigger className=\"py-2 font-semibold\">\n          {item.title}\n        </AccordionTrigger>\n        <AccordionContent className=\"mt-2 flex flex-col gap-2\">\n          {item.items.map((subItem) => (\n            <Link\n              key={subItem.title}\n              className=\"flex items-center gap-4 rounded-md p-3 transition-colors hover:bg-muted hover:text-accent-foreground\"\n              href={subItem.url}\n            >\n              {subItem.icon}\n              <div>\n                <div className=\"text-sm font-semibold\">{subItem.title}</div>\n                {subItem.description && (\n                  <p className=\"text-sm text-muted-foreground\">\n                    {subItem.description}\n                  </p>\n                )}\n              </div>\n            </Link>\n          ))}\n        </AccordionContent>\n      </AccordionItem>\n    )\n  }\n\n  return (\n    <div key={item.title} className=\"py-2\">\n      <Link className=\"font-semibold\" href={item.url}>\n        {item.title}\n      </Link>\n    </div>\n  )\n}\n\nexport default Navbar\n",
        "language": "tsx"
      }
    },
    "constant": {
      "@/registry/view/navbar-1/constant/index": {
        "content": "import { Book, Sunset, Trees, Zap } from \"lucide-react\"\n\nexport interface MenuItem {\n  title: string\n  url: string\n  description?: string\n  icon?: React.ReactNode\n  items?: MenuItem[]\n}\n\nexport const defaultLogo = {\n  url: \"https://uniquebrand.com\",\n  alt: \"UniqueBrand Logo\",\n  title: \"UniqueBrand\",\n}\n\nexport const defaultMenu: MenuItem[] = [\n  { title: \"Dashboard\", url: \"/\" },\n  {\n    title: \"Services\",\n    url: \"#\",\n    items: [\n      {\n        title: \"Web Development\",\n        description: \"Responsive and modern websites\",\n        icon: <Zap className=\"h-5 w-5 shrink-0\" />,\n        url: \"/services/web-development\",\n      },\n      {\n        title: \"Mobile Apps\",\n        description: \"Innovative mobile solutions\",\n        icon: <Sunset className=\"h-5 w-5 shrink-0\" />,\n        url: \"/services/mobile-apps\",\n      },\n      {\n        title: \"UI/UX Design\",\n        description: \"User-centered design experiences\",\n        icon: <Book className=\"h-5 w-5 shrink-0\" />,\n        url: \"/services/library-ux-design\",\n      },\n      {\n        title: \"Consulting\",\n        description: \"Expert advice to grow your business\",\n        icon: <Trees className=\"h-5 w-5 shrink-0\" />,\n        url: \"/services/consulting\",\n      },\n    ],\n  },\n  {\n    title: \"About Us\",\n    url: \"/about\",\n  },\n  {\n    title: \"Contact\",\n    url: \"/contact\",\n  },\n  {\n    title: \"Blog\",\n    url: \"/blog\",\n  },\n]\n\nexport const defaultMobileExtraLinks = [\n  { name: \"Privacy Policy\", url: \"/privacy\" },\n  { name: \"Terms of Use\", url: \"/terms\" },\n  { name: \"Support\", url: \"/support\" },\n  { name: \"Careers\", url: \"/careers\" },\n]\n\nexport const defaultAuth = {\n  login: { text: \"Sign In\", url: \"/login\" },\n  signup: { text: \"Register\", url: \"/register\" },\n}\n",
        "language": "tsx"
      }
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/navbar-1/page": {
      "content": "import Navbar from \"./components/navbar\"\n\nconst page = () => {\n  return <Navbar />\n}\n\nexport default page\n",
      "language": "tsx"
    }
  },
  "new-collection-1": {
    "components": {
      "@/registry/view/new-collection-1/components/new-collection": {
        "content": "\"use client\"\n\nimport React, { useEffect, useRef } from \"react\"\nimport Link from \"next/link\"\nimport { gsap } from \"gsap\"\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\"\n\nimport Container from \"@/components/Container\"\n\ngsap.registerPlugin(ScrollTrigger)\nconst NewCollection = () => {\n  const sectionRef = useRef(null)\n  useEffect(() => {\n    const boxes = sectionRef.current.querySelectorAll(\".animate-box\")\n    boxes.forEach((box) => {\n      const button = box.querySelector(\".animate-button\")\n      const image = box.querySelector(\".animate-image\")\n      const text = box.querySelector(\".animate-text\")\n      const tl = gsap.timeline({\n        scrollTrigger: {\n          trigger: box,\n          start: \"top 80%\",\n          end: \"top 60%\",\n        },\n      })\n      tl.fromTo(\n        button,\n        {\n          opacity: 0,\n          scale: 0.5,\n        },\n        {\n          opacity: 1,\n          scale: 1,\n          duration: 0.5,\n          ease: \"power1.inOut\",\n        }\n      )\n        .fromTo(\n          image,\n          {\n            opacity: 0,\n            y: 20,\n          },\n          {\n            opacity: 1,\n            y: 0,\n            duration: 1,\n          },\n          \"-=0.2\"\n        )\n        .fromTo(\n          text,\n          {\n            opacity: 0,\n            y: 20,\n          },\n          {\n            opacity: 1,\n            y: 0,\n            duration: 1,\n          },\n          \"-=0.5\"\n        )\n    })\n  }, [])\n  return (\n    <section ref={sectionRef} className=\"py-12 md:py-24 lg:py-32 \">\n      <Container>\n        <div className=\"flex md:flex-row flex-col  items-start\">\n          <div className=\"w-full flex justify-between flex-col md:mb-0 mb-20 space-y-3\">\n            <Link className=\"animate-box\" href=\"Collection/spot\">\n              <div className=\"relative\">\n                <img\n                  alt=\"Line Up/Down LED Suspended Lamp\"\n                  className=\"object-cover w-full h-54 md:h-[500px] rounded-lg animate-image\"\n                  src=\"/blocks/new-collection/new-collection-3.jpg\"\n                />\n                <div\n                  className={`py-2 px-4 select-none bg-[linear-gradient(90deg,_transparent_0%,_#ffb96914_90%)] inline-flex w-fit items-center whitespace-nowrap rounded-full border text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent text-secondary dark:text-secondary-foreground absolute top-0 right-0 mt-4 mr-4 shadow-lg backdrop-blur-[6px] overflow-hidden  `}\n                >\n                  <p className=\"overflow-hidden\">NEW</p>\n                </div>\n              </div>\n              <div className=\"my-4 animate-text\">\n                <h2 className=\"text-sm sm:text-lg md:text-xl lg:text-2xl xl:text-3xl text-muted-foreground font-bold uppercase\">\n                  Halo — LED Ring Suspended Lamp\n                </h2>\n                <p className=\"block mt-2 text-sm sm:text-base md:text-lg hover:underline font-medium\">\n                  Discover more\n                </p>\n              </div>\n            </Link>\n            <Link className=\"animate-box\" href=\"Collection/hallo\">\n              <div className=\"relative\">\n                <img\n                  alt=\"Line Up/Down LED Suspended Lamp\"\n                  className=\"object-cover w-full h-55 md:h-[500px] rounded-lg animate-image\"\n                  src=\"/blocks/new-collection/new-collection-2.jpg\"\n                />\n                <div\n                  className={`py-2 px-4 select-none backdrop-blur-sm inline-flex text-[#fff] dark:text-secondary-foreground w-fit items-center whitespace-nowrap rounded-full border text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent text-secondary absolute top-0 right-0 mt-4 mr-4 shadow-lg overflow-hidden`}\n                >\n                  <p className=\"overflow-hidden\">NEW</p>\n                </div>\n              </div>\n              <div className=\"mt-4 animate-text absolute\">\n                <h2 className=\"text-muted-foreground text-sm sm:text-lg md:text-xl lg:text-2xl xl:text-3xl  font-bold uppercase\">\n                  Halo — LED Ring Suspended Lamp\n                </h2>\n                <p className=\"block mt-2 text-sm sm:text-base md:text-lg hover:underline  font-medium\">\n                  Discover more\n                </p>\n              </div>\n            </Link>\n          </div>\n          <Link\n            className=\"w-full animate-box  md:mt-0 md:ml-10\"\n            href=\"Collection/track\"\n          >\n            <div className=\"relative\">\n              <img\n                alt=\"Line Up/Down LED Suspended Lamp\"\n                className=\"object-cover w-full h-auto md:h-[500px] lg:h-[750px] rounded-lg animate-image\"\n                src=\"/blocks/new-collection/new-collection-1.jpg\"\n              />\n              <div\n                className={`py-2 px-4 select-none  bg-[linear-gradient(90deg,_transparent_0%,_#ffb96914_90%)] inline-flex text-[#FFF] dark:text-secondary-foreground w-fit items-center whitespace-nowrap rounded-full border text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent text-secondary absolute top-0 right-0 mt-4 mr-4 shadow-lg backdrop-blur-[6px] overflow-hidden  `}\n              >\n                <p className=\"overflow-hidden\">NEW</p>\n              </div>\n            </div>\n            <div className=\"mt-4 animate-text\">\n              <h2 className=\"text-sm sm:text-lg md:text-xl text-muted-foreground lg:text-2xl xl:text-3xl  font-bold uppercase\">\n                Line — Up/Down LED Suspended Lamp\n              </h2>\n              <p className=\"block mt-2 text-sm sm:text-base md:text-lg hover:underline  font-medium\">\n                Discover more\n              </p>\n            </div>\n          </Link>\n        </div>\n      </Container>\n    </section>\n  )\n}\n\nexport default NewCollection\n",
        "language": "jsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/new-collection-1/page": {
      "content": "import Container from \"@/components/Container\"\n\nimport NewCollection from \"./components/new-collection\"\n\nconst page = () => {\n  return (\n    <Container>\n      <NewCollection />\n    </Container>\n  )\n}\n\nexport default page\n",
      "language": "tsx"
    }
  },
  "orders-page-1": {
    "components": {
      "@/registry/view/orders-page-1/components/orders-page": {
        "content": "\r\n\"use client\"\r\n\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Tabs, TabsContainer, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport {\r\n    ArrowDown,\r\n    ArrowUp,\r\n    Bell,\r\n    Calendar,\r\n    Download,\r\n    Eye,\r\n    Filter,\r\n    MoreHorizontal,\r\n    Package,\r\n    Printer,\r\n    RefreshCw,\r\n    Search,\r\n    Settings,\r\n    Truck,\r\n    X\r\n} from \"lucide-react\"\r\nimport { useCallback, useMemo, useState } from \"react\"\r\nimport { formatDate, formatPrice } from \"../lib/utils\"\r\nimport { Sidebar } from \"./sidebar\"\r\n\r\ntype OrderStatus = \"awaiting_shipment\" | \"processing\" | \"fulfilled\" | \"cancelled\"\r\ntype SortField = \"id\" | \"customerName\" | \"totalPrice\" | \"createdAt\" | \"status\"\r\ntype SortDirection = \"asc\" | \"desc\"\r\n\r\ninterface Order {\r\n    id: number\r\n    customerName: string\r\n    customerEmail: string\r\n    customerAvatar?: string\r\n    customerPhone: string\r\n    productName: string\r\n    productImage?: string\r\n    productPrice: number\r\n    quantity: number\r\n    shippingPrice: number\r\n    discountRate: number\r\n    totalPrice: number\r\n    status: OrderStatus\r\n    createdAt: string\r\n    shippingAddress: string\r\n    trackingNumber?: string\r\n    paymentMethod: string\r\n    notes?: string\r\n}\r\n\r\nconst mockOrders: Order[] = [\r\n    {\r\n        id: 1001,\r\n        customerName: \"Ahmed Hassan\",\r\n        customerEmail: \"ahmed.hassan@email.com\",\r\n        customerPhone: \"+20 123 456 7890\",\r\n        customerAvatar: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100&h=100&fit=crop&crop=face\",\r\n        productName: \"iPhone 15 Pro Max\",\r\n        productImage: \"https://images.unsplash.com/photo-1592750475338-74b7b21085ab?w=100&h=100&fit=crop\",\r\n        productPrice: 1199,\r\n        quantity: 1,\r\n        shippingPrice: 25,\r\n        discountRate: 0.1,\r\n        totalPrice: 1104.1,\r\n        status: \"fulfilled\",\r\n        createdAt: \"2024-01-15T10:30:00Z\",\r\n        shippingAddress: \"123 Tahrir Square, Cairo, Egypt\",\r\n        trackingNumber: \"TRK001234567\",\r\n        paymentMethod: \"Credit Card\",\r\n        notes: \"Gift wrapping requested\"\r\n    },\r\n    {\r\n        id: 1002,\r\n        customerName: \"Fatima Al-Zahra\",\r\n        customerEmail: \"fatima.zahra@email.com\",\r\n        customerPhone: \"+20 987 654 3210\",\r\n        productName: \"MacBook Air M3\",\r\n        productImage: \"https://images.unsplash.com/photo-1517336714731-489689fd1ca8?w=100&h=100&fit=crop\",\r\n        productPrice: 1299,\r\n        quantity: 1,\r\n        shippingPrice: 0,\r\n        discountRate: 0,\r\n        totalPrice: 1299,\r\n        status: \"processing\",\r\n        createdAt: \"2024-01-14T14:20:00Z\",\r\n        shippingAddress: \"456 Zamalek District, Cairo, Egypt\",\r\n        paymentMethod: \"PayPal\",\r\n    },\r\n    {\r\n        id: 1003,\r\n        customerName: \"Omar Khaled\",\r\n        customerEmail: \"omar.khaled@email.com\",\r\n        customerPhone: \"+20 555 123 4567\",\r\n        customerAvatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\",\r\n        productName: \"AirPods Pro 2\",\r\n        productImage: \"https://images.unsplash.com/photo-1606220945770-b5b6c2c55bf1?w=100&h=100&fit=crop\",\r\n        productPrice: 249,\r\n        quantity: 2,\r\n        shippingPrice: 15,\r\n        discountRate: 0.05,\r\n        totalPrice: 487.1,\r\n        status: \"awaiting_shipment\",\r\n        createdAt: \"2024-01-14T09:15:00Z\",\r\n        shippingAddress: \"789 Nasr City, Cairo, Egypt\",\r\n        paymentMethod: \"Cash on Delivery\",\r\n    },\r\n    {\r\n        id: 1004,\r\n        customerName: \"Layla Mohammed\",\r\n        customerEmail: \"layla.mohammed@email.com\",\r\n        customerPhone: \"+20 111 222 3333\",\r\n        productName: \"iPad Pro 12.9\",\r\n        productImage: \"https://images.unsplash.com/photo-1544244015-0df4b3ffc6b0?w=100&h=100&fit=crop\",\r\n        productPrice: 1099,\r\n        quantity: 1,\r\n        shippingPrice: 20,\r\n        discountRate: 0.15,\r\n        totalPrice: 954.15,\r\n        status: \"cancelled\",\r\n        createdAt: \"2024-01-13T16:45:00Z\",\r\n        shippingAddress: \"321 Heliopolis, Cairo, Egypt\",\r\n        paymentMethod: \"Credit Card\",\r\n        notes: \"Customer requested cancellation\"\r\n    },\r\n    {\r\n        id: 1005,\r\n        customerName: \"Youssef Ali\",\r\n        customerEmail: \"youssef.ali@email.com\",\r\n        customerPhone: \"+20 444 555 6666\",\r\n        productName: \"Apple Watch Series 9\",\r\n        productImage: \"https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=100&h=100&fit=crop\",\r\n        productPrice: 399,\r\n        quantity: 1,\r\n        shippingPrice: 10,\r\n        discountRate: 0,\r\n        totalPrice: 409,\r\n        status: \"fulfilled\",\r\n        createdAt: \"2024-01-13T11:30:00Z\",\r\n        shippingAddress: \"654 Maadi, Cairo, Egypt\",\r\n        trackingNumber: \"TRK009876543\",\r\n        paymentMethod: \"Bank Transfer\",\r\n    },\r\n    {\r\n        id: 1006,\r\n        customerName: \"Nour Abdel Rahman\",\r\n        customerEmail: \"nour.abdel@email.com\",\r\n        customerPhone: \"+20 444 555 6666\",\r\n        productName: \"Magic Keyboard\",\r\n        productImage: \"https://images.unsplash.com/photo-1517336714731-489689fd1ca8?w=100&h=100&fit=crop\",\r\n        productPrice: 399,\r\n        quantity: 1,\r\n        shippingPrice: 10,\r\n        discountRate: 0,\r\n        totalPrice: 409,\r\n        status: \"fulfilled\",\r\n        createdAt: \"2024-01-13T11:30:00Z\",\r\n        shippingAddress: \"654 Maadi, Cairo, Egypt\",\r\n        trackingNumber: \"TRK009876543\",\r\n        paymentMethod: \"Bank Transfer\",\r\n    },\r\n];\r\n\r\nconst ORDER_STATUS_DETAILS: Record<OrderStatus, { label: string; badgeClass: string; icon?: React.ElementType; colorClass?: string; }> = {\r\n    awaiting_shipment: {\r\n        label: \"Awaiting Shipment\",\r\n        badgeClass: \"bg-blue-500 text-white hover:bg-blue-600\",\r\n        icon: Truck,\r\n        colorClass: \"text-blue-600\"\r\n    },\r\n    processing: {\r\n        label: \"Processing\",\r\n        badgeClass: \"bg-yellow-500 text-white hover:bg-yellow-600\",\r\n        icon: RefreshCw,\r\n        colorClass: \"text-yellow-600\"\r\n    },\r\n    fulfilled: {\r\n        label: \"Fulfilled\",\r\n        badgeClass: \"bg-green-500 text-white hover:bg-green-600\",\r\n        icon: Package,\r\n        colorClass: \"text-green-600\"\r\n    },\r\n    cancelled: {\r\n        label: \"Cancelled\",\r\n        badgeClass: \"bg-red-500 text-white hover:bg-red-600\",\r\n        icon: X,\r\n        colorClass: \"text-red-600\"\r\n    },\r\n};\r\n\r\nconst DATE_RANGE_OPTIONS = [\r\n    { value: \"all\", label: \"All Time\" },\r\n    { value: \"today\", label: \"Today\" },\r\n    { value: \"week\", label: \"This Week\" },\r\n    { value: \"month\", label: \"This Month\" },\r\n    { value: \"quarter\", label: \"This Quarter\" },\r\n];\r\n\r\nconst adminUser = {\r\n    name: \"Admin User\",\r\n    avatarUrl: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=100&h=100&fit=crop&crop=face\",\r\n    initials: \"AU\"\r\n};\r\n\r\n\r\ninterface OrdersHeaderProps {\r\n    searchQuery: string;\r\n    setSearchQuery: (query: string) => void;\r\n    dateRange: string;\r\n    setDateRange: (range: string) => void;\r\n    onRefresh: () => void;\r\n    onExport: () => void;\r\n}\r\n\r\nfunction OrdersHeader({\r\n    searchQuery,\r\n    setSearchQuery,\r\n    dateRange,\r\n    setDateRange,\r\n    onRefresh,\r\n    onExport\r\n}: OrdersHeaderProps) {\r\n    return (\r\n        <header className=\"sticky top-0 z-30 flex h-16 items-center gap-4 border-b bg-background px-4 sm:static sm:h-auto sm:border-0 sm:bg-transparent sm:px-2 lg:px-4 py-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n                <Package className=\"h-6 w-6 text-primary\" />\r\n                <h1 className=\"text-xl font-semibold tracking-tight\">Ecommerce Orders</h1>\r\n            </div>\r\n            <div className=\"ml-auto flex items-center gap-2 \">\r\n                <div className=\"relative\">\r\n                    <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\r\n                    <Input\r\n                        type=\"search\"\r\n                        placeholder=\"Search orders by ID, customer, product...\"\r\n                        value={searchQuery}\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                        className=\"pl-8 w-full md:w-64 lg:w-80\"\r\n                    />\r\n                </div>\r\n                <Select value={dateRange} onValueChange={setDateRange}>\r\n                    <SelectTrigger className=\"w-auto md:w-40\">\r\n                        <Calendar className=\"h-4 w-4 mr-0 md:mr-2\" />\r\n                        <span className=\"hidden md:inline\"><SelectValue /></span>\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                        {DATE_RANGE_OPTIONS.map(option => (\r\n                            <SelectItem key={option.value} value={option.value}>{option.label}</SelectItem>\r\n                        ))}\r\n                    </SelectContent>\r\n                </Select>\r\n                <Button onClick={onRefresh} variant=\"ghost\" size=\"icon\" aria-label=\"Refresh orders\">\r\n                    <RefreshCw className=\"h-4 w-4\" />\r\n                </Button>\r\n                <Button onClick={onExport} variant=\"outline\" size=\"sm\">\r\n                    <Download className=\"mr-2 h-4 w-4\" />\r\n                    Export\r\n                </Button>\r\n                <DropdownMenu>\r\n                    <DropdownMenuTrigger asChild>\r\n                        <Button variant=\"ghost\" size=\"icon\" className=\"relative\" aria-label=\"Notifications\">\r\n                            <Bell className=\"h-4 w-4\" />\r\n                        </Button>\r\n                    </DropdownMenuTrigger>\r\n                    <DropdownMenuContent align=\"end\" className=\"w-80\">\r\n                        <DropdownMenuItem>No new notifications</DropdownMenuItem>\r\n                    </DropdownMenuContent>\r\n                </DropdownMenu>\r\n                <DropdownMenu>\r\n                    <DropdownMenuTrigger asChild>\r\n                        <Button variant=\"ghost\" size=\"icon\" aria-label=\"User account\">\r\n                            <Avatar className=\"h-8 w-8\">\r\n                                <AvatarImage src={adminUser.avatarUrl} alt={adminUser.name} />\r\n                                <AvatarFallback>{adminUser.initials}</AvatarFallback>\r\n                            </Avatar>\r\n                        </Button>\r\n                    </DropdownMenuTrigger>\r\n                    <DropdownMenuContent align=\"end\">\r\n                        <DropdownMenuItem>My Profile</DropdownMenuItem>\r\n                        <DropdownMenuItem>Settings</DropdownMenuItem>\r\n                        <DropdownMenuItem>Logout</DropdownMenuItem>\r\n                    </DropdownMenuContent>\r\n                </DropdownMenu>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\ninterface OrdersStatsProps {\r\n    orders: Order[];\r\n}\r\n\r\nfunction OrdersStats({ orders }: OrdersStatsProps) {\r\n    const stats = useMemo(() => {\r\n        const initialCounts: Record<OrderStatus, number> = {\r\n            awaiting_shipment: 0,\r\n            processing: 0,\r\n            fulfilled: 0,\r\n            cancelled: 0,\r\n        };\r\n        const statusCounts = orders.reduce((acc, order) => {\r\n            acc[order.status]++;\r\n            return acc;\r\n        }, initialCounts);\r\n\r\n        const totalRevenue = orders\r\n            .filter(order => order.status !== \"cancelled\")\r\n            .reduce((sum, order) => sum + order.totalPrice, 0);\r\n\r\n        return {\r\n            totalOrders: orders.length,\r\n            ...statusCounts,\r\n            totalRevenue,\r\n        };\r\n    }, [orders]);\r\n\r\n    const statCards = [\r\n        { title: \"Total Orders\", value: stats.totalOrders, icon: Package, description: \"All orders in system\" },\r\n        {\r\n            title: ORDER_STATUS_DETAILS.fulfilled.label,\r\n            value: stats.fulfilled,\r\n            iconElement: <div className=\"h-4 w-4 rounded-full bg-green-500\" />,\r\n            valueClass: ORDER_STATUS_DETAILS.fulfilled.colorClass,\r\n            description: \"Completed orders\"\r\n        },\r\n        {\r\n            title: ORDER_STATUS_DETAILS.processing.label,\r\n            value: stats.processing,\r\n            iconElement: <div className=\"h-4 w-4 rounded-full bg-yellow-500\" />,\r\n            valueClass: ORDER_STATUS_DETAILS.processing.colorClass,\r\n            description: \"Being processed\"\r\n        },\r\n        {\r\n            title: ORDER_STATUS_DETAILS.awaiting_shipment.label,\r\n            value: stats.awaiting_shipment,\r\n            icon: ORDER_STATUS_DETAILS.awaiting_shipment.icon,\r\n            valueClass: ORDER_STATUS_DETAILS.awaiting_shipment.colorClass,\r\n            description: \"Ready to ship\"\r\n        },\r\n        {\r\n            title: ORDER_STATUS_DETAILS.cancelled.label,\r\n            value: stats.cancelled,\r\n            icon: ORDER_STATUS_DETAILS.cancelled.icon,\r\n            valueClass: ORDER_STATUS_DETAILS.cancelled.colorClass,\r\n            description: \"Cancelled orders\"\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"grid gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5\">\r\n            {statCards.map((card) => {\r\n                const IconComponent = card.icon;\r\n                return (\r\n                    <Card key={card.title}>\r\n                        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                            <CardTitle className=\"text-sm font-medium\">{card.title}</CardTitle>\r\n                            {IconComponent ? <IconComponent className={`h-4 w-4 text-muted-foreground ${card.valueClass || ''}`} /> : card.iconElement}\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                            <div className={`text-2xl font-bold ${card.valueClass || ''}`}>{card.value}</div>\r\n                            <p className=\"text-xs text-muted-foreground\">{card.description}</p>\r\n                        </CardContent>\r\n                    </Card>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface OrderActionsProps {\r\n    order: Order;\r\n}\r\n\r\nfunction OrderActions({ order }: OrderActionsProps) {\r\n    const handleViewOrder = useCallback(() => console.log(\"View order:\", order.id), [order.id]);\r\n    const handleEditOrder = useCallback(() => console.log(\"Edit order:\", order.id), [order.id]);\r\n    const handlePrintInvoice = useCallback(() => console.log(\"Print invoice:\", order.id), [order.id]);\r\n    const handleTrackShipment = useCallback(() => console.log(\"Track shipment:\", order.trackingNumber), [order.trackingNumber]);\r\n    const handleCancelOrder = useCallback(() => console.log(\"Cancel order:\", order.id), [order.id]);\r\n\r\n    return (\r\n        <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n                <Button variant=\"ghost\" size=\"icon\" aria-label={`Actions for order ${order.id}`}>\r\n                    <MoreHorizontal className=\"h-4 w-4\" />\r\n                    <span className=\"sr-only\">Order actions</span>\r\n                </Button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent align=\"end\" className=\"w-48\">\r\n                <DropdownMenuItem onClick={handleViewOrder}>\r\n                    <Eye className=\"mr-2 h-4 w-4\" /> View Details\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem onClick={handleEditOrder}>\r\n                    <Settings className=\"mr-2 h-4 w-4\" /> Edit Order\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem onClick={handlePrintInvoice}>\r\n                    <Printer className=\"mr-2 h-4 w-4\" /> Print Invoice\r\n                </DropdownMenuItem>\r\n                {order.trackingNumber && (\r\n                    <DropdownMenuItem onClick={handleTrackShipment}>\r\n                        <Truck className=\"mr-2 h-4 w-4\" /> Track Shipment\r\n                    </DropdownMenuItem>\r\n                )}\r\n                {order.status !== \"cancelled\" && order.status !== \"fulfilled\" && (\r\n                    <DropdownMenuItem onClick={handleCancelOrder} className=\"text-red-600 hover:!text-red-600 focus:text-red-600\">\r\n                        <X className=\"mr-2 h-4 w-4\" /> Cancel Order\r\n                    </DropdownMenuItem>\r\n                )}\r\n            </DropdownMenuContent>\r\n        </DropdownMenu>\r\n    );\r\n}\r\n\r\ninterface OrderRowProps {\r\n    order: Order;\r\n}\r\n\r\nfunction OrderRow({ order }: OrderRowProps) {\r\n    const customerInitials = useMemo(() =>\r\n        order.customerName\r\n            .split(\" \")\r\n            .map((n) => n[0])\r\n            .join(\"\")\r\n            .toUpperCase(),\r\n        [order.customerName]\r\n    );\r\n\r\n    const handleImageError = useCallback((event: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n        event.currentTarget.src = \"https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=100&h=100&fit=crop\";\r\n    }, []);\r\n\r\n    const handleAvatarError = useCallback((event: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n        (event.target as HTMLImageElement).style.display = 'none';\r\n    }, []);\r\n\r\n    return (\r\n        <TableRow className=\"hover:bg-muted/50\">\r\n            <TableCell className=\"font-medium text-nowrap\">#{order.id}</TableCell>\r\n            <TableCell className=\"min-w-[200px]\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <Avatar className=\"h-9 w-9\">\r\n                        <AvatarImage\r\n                            src={order.customerAvatar}\r\n                            alt={`${order.customerName}'s avatar`}\r\n                            onError={handleAvatarError}\r\n                        />\r\n                        <AvatarFallback>{customerInitials}</AvatarFallback>\r\n                    </Avatar>\r\n                    <div>\r\n                        <div className=\"font-medium truncate\" title={order.customerName}>{order.customerName}</div>\r\n                        <div className=\"text-sm text-muted-foreground truncate\" title={order.customerEmail}>{order.customerEmail}</div>\r\n                    </div>\r\n                </div>\r\n            </TableCell>\r\n            <TableCell className=\"min-w-[180px]\">\r\n                <div className=\"flex items-center gap-3\">\r\n                    <img\r\n                        src={order.productImage || \"https://images.unsplash.com/photo-1560472354-b33ff0c44a43?w=100&h=100&fit=crop\"}\r\n                        alt={order.productName}\r\n                        className=\"h-10 w-10 rounded-md object-cover\"\r\n                        onError={handleImageError}\r\n                        loading=\"lazy\"\r\n                    />\r\n                    <span className=\"font-medium text-nowrap truncate\" title={order.productName}>{order.productName}</span>\r\n                </div>\r\n            </TableCell>\r\n            <TableCell className=\"text-right text-nowrap\">\r\n                {order.discountRate > 0 ? (\r\n                    <>\r\n                        <div className=\"line-through text-xs text-muted-foreground\">\r\n                            {formatPrice(order.productPrice)}\r\n                        </div>\r\n                        <div className=\"font-medium\">\r\n                            {formatPrice(order.productPrice * (1 - order.discountRate))}\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <div className=\"font-medium\">{formatPrice(order.productPrice)}</div>\r\n                )}\r\n            </TableCell>\r\n            <TableCell className=\"text-center text-nowrap\">\r\n                {order.discountRate > 0 ? (\r\n                    <Badge variant=\"secondary\">{Math.round(order.discountRate * 100)}% OFF</Badge>\r\n                ) : (\r\n                    <span className=\"text-muted-foreground\">-</span>\r\n                )}\r\n            </TableCell>\r\n            <TableCell className=\"text-center\">{order.quantity}</TableCell>\r\n            <TableCell className=\"text-right text-nowrap\">\r\n                {order.shippingPrice > 0 ? formatPrice(order.shippingPrice) : <Badge variant=\"outline\">Free</Badge>}\r\n            </TableCell>\r\n            <TableCell className=\"text-right font-semibold text-base text-nowrap\">{formatPrice(order.totalPrice)}</TableCell>\r\n            <TableCell className=\"text-nowrap\">{formatDate(order.createdAt)}</TableCell>\r\n            <TableCell className=\"text-nowrap\">\r\n                <Badge className={ORDER_STATUS_DETAILS[order.status].badgeClass}>\r\n                    {ORDER_STATUS_DETAILS[order.status].label}\r\n                </Badge>\r\n            </TableCell>\r\n            <TableCell className=\"text-nowrap\">{order.paymentMethod}</TableCell>\r\n            <TableCell className=\"text-center text-nowrap\">\r\n                {order.trackingNumber ? (\r\n                    <Badge variant=\"outline\" className=\"font-mono text-xs\">\r\n                        {order.trackingNumber}\r\n                    </Badge>\r\n                ) : (\r\n                    <span className=\"text-muted-foreground\">-</span>\r\n                )}\r\n            </TableCell>\r\n            <TableCell className=\"text-center\">\r\n                <OrderActions order={order} />\r\n            </TableCell>\r\n        </TableRow>\r\n    );\r\n}\r\n\r\nexport default function OrdersPage() {\r\n    const [activeFilter, setActiveFilter] = useState<OrderStatus | \"all\">(\"all\")\r\n    const [searchQuery, setSearchQuery] = useState(\"\")\r\n    const [dateRange, setDateRange] = useState(\"all\")\r\n    const [sortField, setSortField] = useState<SortField>(\"createdAt\")\r\n    const [sortDirection, setSortDirection] = useState<SortDirection>(\"desc\")\r\n\r\n    const [orders, setOrders] = useState<Order[]>(mockOrders);\r\n\r\n    const orderCountsByStatus = useMemo(() => {\r\n        const counts: Record<OrderStatus | \"all\", number> = {\r\n            all: orders.length,\r\n            awaiting_shipment: 0,\r\n            processing: 0,\r\n            fulfilled: 0,\r\n            cancelled: 0,\r\n        };\r\n        orders.forEach(order => {\r\n            if (counts[order.status] !== undefined) {\r\n                counts[order.status]++;\r\n            }\r\n        });\r\n        return counts;\r\n    }, [orders]);\r\n\r\n    const filteredAndSortedOrders = useMemo(() => {\r\n        let processedOrders = [...orders];\r\n\r\n        if (activeFilter !== \"all\") {\r\n            processedOrders = processedOrders.filter(order => order.status === activeFilter);\r\n        }\r\n\r\n        if (dateRange !== \"all\") {\r\n            const now = new Date();\r\n            let startDateFilter: Date | null = null;\r\n\r\n            switch (dateRange) {\r\n                case \"today\":\r\n                    startDateFilter = new Date(now.getFullYear(), now.getMonth(), now.getDate(), 0, 0, 0, 0);\r\n                    break;\r\n                case \"week\":\r\n                    const firstDayOfWeek = new Date(now);\r\n                    firstDayOfWeek.setDate(now.getDate() - now.getDay());\r\n                    firstDayOfWeek.setHours(0, 0, 0, 0);\r\n                    startDateFilter = firstDayOfWeek;\r\n                    break;\r\n                case \"month\":\r\n                    startDateFilter = new Date(now.getFullYear(), now.getMonth(), 1);\r\n                    break;\r\n                case \"quarter\":\r\n                    const currentQuarter = Math.floor(now.getMonth() / 3);\r\n                    startDateFilter = new Date(now.getFullYear(), currentQuarter * 3, 1);\r\n                    break;\r\n            }\r\n            if (startDateFilter) {\r\n                processedOrders = processedOrders.filter(order => new Date(order.createdAt) >= startDateFilter!);\r\n            }\r\n        }\r\n\r\n        if (searchQuery) {\r\n            const query = searchQuery.toLowerCase().trim();\r\n            processedOrders = processedOrders.filter(order =>\r\n                order.id.toString().includes(query) ||\r\n                order.customerName.toLowerCase().includes(query) ||\r\n                order.customerEmail.toLowerCase().includes(query) ||\r\n                order.productName.toLowerCase().includes(query) ||\r\n                (order.trackingNumber && order.trackingNumber.toLowerCase().includes(query))\r\n            );\r\n        }\r\n\r\n        processedOrders.sort((a, b) => {\r\n            const valA = a[sortField];\r\n            const valB = b[sortField];\r\n\r\n            let comparison = 0;\r\n\r\n            if (typeof valA === 'number' && typeof valB === 'number') {\r\n                comparison = valA - valB;\r\n            } else if (sortField === 'createdAt') {\r\n                comparison = new Date(valA as string).getTime() - new Date(valB as string).getTime();\r\n            } else if (typeof valA === 'string' && typeof valB === 'string') {\r\n                comparison = valA.toLowerCase().localeCompare(valB.toLowerCase());\r\n            } else {\r\n                if (valA > valB) comparison = 1;\r\n                else if (valA < valB) comparison = -1;\r\n            }\r\n\r\n            return sortDirection === \"asc\" ? comparison : -comparison;\r\n        });\r\n\r\n        return processedOrders;\r\n    }, [orders, activeFilter, searchQuery, dateRange, sortField, sortDirection]);\r\n\r\n    const handleRefresh = useCallback(() => {\r\n        console.log(\"Refreshing orders...\");\r\n        setOrders([...mockOrders]);\r\n        setSearchQuery(\"\");\r\n        setActiveFilter(\"all\");\r\n        setDateRange(\"all\");\r\n        setSortField(\"createdAt\");\r\n        setSortDirection(\"desc\");\r\n    }, []);\r\n\r\n    const handleExport = useCallback(() => {\r\n        console.log(\"Exporting orders...\", filteredAndSortedOrders);\r\n        if (filteredAndSortedOrders.length > 0) {\r\n            const headers = Object.keys(filteredAndSortedOrders[0]).join(\",\");\r\n            const rows = filteredAndSortedOrders.map(order =>\r\n                Object.values(order).map(val => typeof val === 'string' ? `\"${val.replace(/\"/g, '\"\"')}\"` : val).join(\",\")\r\n            ).join(\"\\n\");\r\n            const csvContent = `data:text/csv;charset=utf-8,${headers}\\n${rows}`;\r\n            const encodedUri = encodeURI(csvContent);\r\n            const link = document.createElement(\"a\");\r\n            link.setAttribute(\"href\", encodedUri);\r\n            link.setAttribute(\"download\", `orders_export_${new Date().toISOString().split('T')[0]}.csv`);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        } else {\r\n            console.warn(\"No data to export.\");\r\n        }\r\n    }, [filteredAndSortedOrders]);\r\n\r\n    const handleSort = useCallback((field: SortField) => {\r\n        if (sortField === field) {\r\n            setSortDirection(prev => prev === \"asc\" ? \"desc\" : \"asc\");\r\n        } else {\r\n            setSortField(field);\r\n            setSortDirection(\"desc\");\r\n        }\r\n    }, [sortField]);\r\n\r\n    const SortIndicator = useCallback(({ field }: { field: SortField }) => {\r\n        if (sortField !== field) return null;\r\n        const Icon = sortDirection === \"asc\" ? ArrowUp : ArrowDown;\r\n        return <Icon className=\"ml-1 h-3 w-3 text-muted-foreground\" />;\r\n    }, [sortField, sortDirection]);\r\n\r\n    const tableHeaders: Array<{ key: SortField | string; label: string; sortable?: boolean; className?: string, cellClassName?: string }> = [\r\n        { key: \"id\", label: \"Order ID\", sortable: true, className: \"w-[100px]\" },\r\n        { key: \"customerName\", label: \"Customer\", sortable: true },\r\n        { key: \"productName\", label: \"Product\" },\r\n        { key: \"productPrice\", label: \"Unit Price\", sortable: true, className: \"text-right\" },\r\n        { key: \"discountRate\", label: \"Discount\", className: \"text-center\" },\r\n        { key: \"quantity\", label: \"Qty\", className: \"text-center\" },\r\n        { key: \"shippingPrice\", label: \"Shipping\", className: \"text-right\" },\r\n        { key: \"totalPrice\", label: \"Total\", sortable: true, className: \"text-right font-semibold\" },\r\n        { key: \"createdAt\", label: \"Date\", sortable: true },\r\n        { key: \"status\", label: \"Status\", sortable: true },\r\n        { key: \"paymentMethod\", label: \"Payment\" },\r\n        { key: \"trackingNumber\", label: \"Tracking\", className: \"text-center\" },\r\n        { key: \"actions\", label: \"Actions\", className: \"text-center w-[50px]\" },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Sidebar />\r\n            <div className=\"min-h-screen\">\r\n                <OrdersHeader\r\n                    searchQuery={searchQuery}\r\n                    setSearchQuery={setSearchQuery}\r\n                    dateRange={dateRange}\r\n                    setDateRange={setDateRange}\r\n                    onRefresh={handleRefresh}\r\n                    onExport={handleExport}\r\n                />\r\n                <main className=\"flex flex-col gap-6 p-4 sm:p-6 lg:p-8\">\r\n                    <div className=\"flex flex-col gap-6\">\r\n                        <div>\r\n                            <h2 className=\"text-2xl lg:text-3xl font-bold tracking-tight\">Orders</h2>\r\n                            <p className=\"text-muted-foreground\">\r\n                                Manage, track, and process all customer orders efficiently.\r\n                            </p>\r\n                        </div>\r\n                        <OrdersStats orders={orders} />\r\n                        <Tabs value={activeFilter} onValueChange={(value) => setActiveFilter(value as OrderStatus | \"all\")} className=\"pt-4\">\r\n                            <TabsList>\r\n                                <TabsContainer>\r\n                                    <TabsTrigger value=\"all\">All Orders ({orderCountsByStatus.all})</TabsTrigger>\r\n                                    {Object.keys(ORDER_STATUS_DETAILS).map(statusKey => (\r\n                                        <TabsTrigger key={statusKey} value={statusKey}>\r\n                                            {ORDER_STATUS_DETAILS[statusKey as OrderStatus].label} ({orderCountsByStatus[statusKey as OrderStatus]})\r\n                                        </TabsTrigger>\r\n                                    ))}\r\n                                </TabsContainer>\r\n                            </TabsList>\r\n                        </Tabs>\r\n                        <Card>\r\n                            <CardHeader className=\"px-7\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div>\r\n                                        <CardTitle>Orders Overview</CardTitle>\r\n                                        <CardDescription>\r\n                                            Detailed list of all customer orders and their statuses.\r\n                                        </CardDescription>\r\n                                    </div>\r\n                                    <Button variant=\"outline\" size=\"sm\" onClick={() => console.log(\"Advanced Filters Clicked\")}>\r\n                                        <Filter className=\"mr-2 h-4 w-4\" />\r\n                                        Advanced Filters\r\n                                    </Button>\r\n                                </div>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <div className=\"overflow-x-auto\">\r\n                                    <Table>\r\n                                        <TableHeader>\r\n                                            <TableRow>\r\n                                                {tableHeaders.map(th => (\r\n                                                    <TableHead\r\n                                                        key={th.key}\r\n                                                        className={`${th.className || ''} ${th.sortable ? 'cursor-pointer hover:bg-muted' : ''} text-nowrap`}\r\n                                                        onClick={th.sortable ? () => handleSort(th.key as SortField) : undefined}\r\n                                                        aria-sort={th.sortable && sortField === th.key ? (sortDirection === 'asc' ? 'ascending' : 'descending') : 'none'}\r\n                                                    >\r\n                                                        <div className=\"flex items-center\">\r\n                                                            {th.label}\r\n                                                            {th.sortable && <SortIndicator field={th.key as SortField} />}\r\n                                                        </div>\r\n                                                    </TableHead>\r\n                                                ))}\r\n                                            </TableRow>\r\n                                        </TableHeader>\r\n                                        <TableBody>\r\n                                            {filteredAndSortedOrders.length > 0 ? (\r\n                                                filteredAndSortedOrders.map((order) => (\r\n                                                    <OrderRow key={order.id} order={order} />\r\n                                                ))\r\n                                            ) : (\r\n                                                <TableRow>\r\n                                                    <TableCell colSpan={tableHeaders.length} className=\"h-24 text-center\">\r\n                                                        <div className=\"flex flex-col items-center justify-center space-y-2 py-8\">\r\n                                                            <Package className=\"h-12 w-12 text-muted-foreground\" />\r\n                                                            <h3 className=\"text-lg font-medium\">No orders found.</h3>\r\n                                                            <p className=\"text-muted-foreground text-sm\">\r\n                                                                {searchQuery ? \"Try adjusting your search or filter criteria.\" : \"No orders match the current filters.\"}\r\n                                                            </p>\r\n                                                            {(searchQuery || activeFilter !== 'all' || dateRange !== 'all') &&\r\n                                                                <Button variant=\"outline\" size=\"sm\" onClick={handleRefresh} className=\"mt-2\">\r\n                                                                    Clear Filters & Search\r\n                                                                </Button>\r\n                                                            }\r\n                                                        </div>\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </>\r\n    )\r\n}",
        "language": "tsx"
      },
      "@/registry/view/orders-page-1/components/sidebar": {
        "content": "\"use client\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { motion } from \"framer-motion\"\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\r\nimport Link from \"next/link\"\r\nimport { usePathname } from \"next/navigation\"\r\nimport { useState } from \"react\"\r\nimport { DASHBOARDS } from \"../constant/index\"\r\n\r\ninterface SidebarProps {\r\n    className?: string\r\n}\r\n\r\nexport function Sidebar({ className }: SidebarProps) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const pathname = usePathname()\r\n\r\n    const toggleSidebar = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    const sidebarVariants = {\r\n        open: {\r\n            width: 280,\r\n            opacity: 1,\r\n            transition: {\r\n                duration: 0.3,\r\n                ease: \"easeInOut\",\r\n            },\r\n        },\r\n        closed: {\r\n            width: 0,\r\n            opacity: 0,\r\n            transition: {\r\n                duration: 0.3,\r\n                ease: \"easeInOut\",\r\n            },\r\n        },\r\n    }\r\n\r\n    const contentVariants = {\r\n        open: {\r\n            opacity: 1,\r\n            x: 0,\r\n            transition: {\r\n                duration: 0.3,\r\n                delay: 0.1,\r\n            },\r\n        },\r\n        closed: {\r\n            opacity: 0,\r\n            x: -20,\r\n            transition: {\r\n                duration: 0.2,\r\n            },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <motion.aside\r\n                initial={false}\r\n                animate={isOpen ? \"open\" : \"closed\"}\r\n                variants={sidebarVariants}\r\n                className={cn(\r\n                    \"fixed left-0 top-0 z-40 h-screen bg-white border-r border-gray-200 shadow-lg overflow-hidden\",\r\n                    className,\r\n                )}\r\n            >\r\n                <motion.div variants={contentVariants} className=\"flex h-full flex-col w-[280px]\">\r\n                    <div className=\"flex items-center justify-between p-6 border-b border-gray-100\">\r\n                        <div className=\"flex items-center gap-3\">\r\n                            <div className=\"w-8 h-8 bg-gradient-to-br from-blue-600 to-blue-700 rounded-lg flex items-center justify-center\">\r\n                                <span className=\"text-white font-bold text-sm\">A</span>\r\n                            </div>\r\n                            <div>\r\n                                <h2 className=\"text-lg font-bold text-gray-900\">Admin Panel</h2>\r\n                                <p className=\"text-xs text-gray-500\">Ecommerce Dashboard</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <nav className=\"flex-1 p-4 space-y-2\">\r\n                        <div className=\"mb-4\">\r\n                            <p className=\"text-xs font-semibold text-gray-400 uppercase tracking-wider mb-3\">Main Menu</p>\r\n                        </div>\r\n                        {DASHBOARDS.map((item) => {\r\n                            const isActive = pathname === item.url || pathname.startsWith(item.url + \"/\")\r\n                            return (\r\n                                <Link\r\n                                    key={item.name}\r\n                                    href={item.url}\r\n                                    className={cn(\"flex items-center gap-3 px-3 py-2.5 rounded-lg transition-all duration-200 group\", {\r\n                                        \"bg-blue-50 text-blue-700 border border-blue-200\": isActive,\r\n                                        \"text-gray-600 hover:bg-gray-50 hover:text-gray-900\": !isActive,\r\n                                    })}\r\n                                >\r\n                                    <div\r\n                                        className={cn(\"flex items-center justify-center w-5 h-5 transition-colors\", {\r\n                                            \"text-blue-600\": isActive,\r\n                                            \"text-gray-400 group-hover:text-gray-600\": !isActive,\r\n                                        })}\r\n                                    >\r\n                                        {item.icon}\r\n                                    </div>\r\n                                    <span className=\"font-medium text-sm\">{item.name}</span>\r\n                                    {item.badge && (\r\n                                        <span className=\"ml-auto bg-red-100 text-red-600 text-xs px-2 py-0.5 rounded-full\">\r\n                                            {item.badge}\r\n                                        </span>\r\n                                    )}\r\n                                </Link>\r\n                            )\r\n                        })}\r\n                    </nav>\r\n                    <div className=\"p-4 border-t border-gray-100\">\r\n                        <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-4\">\r\n                            <div className=\"flex items-center gap-3\">\r\n                                <div className=\"w-10 h-10 bg-gradient-to-br from-blue-600 to-indigo-600 rounded-full flex items-center justify-center\">\r\n                                    <span className=\"text-white font-bold text-sm\">JD</span>\r\n                                </div>\r\n                                <div className=\"flex-1 min-w-0\">\r\n                                    <p className=\"text-sm font-medium text-gray-900 truncate\">John Doe</p>\r\n                                    <p className=\"text-xs text-gray-500 truncate\">john@example.com</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </motion.div>\r\n            </motion.aside>\r\n            <Button\r\n                onClick={toggleSidebar}\r\n                size=\"sm\"\r\n                className={cn(\r\n                    \"fixed top-4 z-50 rounded-r-lg bg-blue-600 hover:bg-blue-700 text-white transition-all duration-300 shadow-lg\",\r\n                    {\r\n                        \"left-[280px]\": isOpen,\r\n                        \"left-0\": !isOpen,\r\n                    },\r\n                )}\r\n                aria-label={isOpen ? \"Close sidebar\" : \"Open sidebar\"}\r\n            >\r\n                {isOpen ? <ChevronLeft className=\"w-4 h-4\" /> : <ChevronRight className=\"w-4 h-4\" />}\r\n            </Button>\r\n            {isOpen && (\r\n                <motion.div\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    exit={{ opacity: 0 }}\r\n                    className=\"fixed inset-0 z-30 bg-black/20 backdrop-blur-sm lg:hidden\"\r\n                    onClick={toggleSidebar}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {
      "@/registry/view/orders-page-1/constant/index": {
        "content": "import { BarChart3, Bell, CreditCard, Home, Package, Settings, ShoppingCart, Star, Truck, Users } from \"lucide-react\"\r\nimport type React from \"react\"\r\n\r\nexport interface DashboardItem {\r\n    name: string\r\n    icon: React.ReactNode\r\n    url: string\r\n    badge?: string | number\r\n}\r\n\r\nexport const DASHBOARDS: DashboardItem[] = [\r\n    {\r\n        name: \"Dashboard\",\r\n        icon: <Home className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard\",\r\n    },\r\n    {\r\n        name: \"Orders\",\r\n        icon: <ShoppingCart className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/orders\",\r\n        badge: \"12\",\r\n    },\r\n    {\r\n        name: \"Products\",\r\n        icon: <Package className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/products\",\r\n    },\r\n    {\r\n        name: \"Customers\",\r\n        icon: <Users className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/customers\",\r\n    },\r\n    {\r\n        name: \"Analytics\",\r\n        icon: <BarChart3 className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/analytics\",\r\n    },\r\n    {\r\n        name: \"Payments\",\r\n        icon: <CreditCard className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/payments\",\r\n    },\r\n    {\r\n        name: \"Shipping\",\r\n        icon: <Truck className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/shipping\",\r\n    },\r\n    {\r\n        name: \"Reviews\",\r\n        icon: <Star className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/reviews\",\r\n        badge: \"3\",\r\n    },\r\n    {\r\n        name: \"Notifications\",\r\n        icon: <Bell className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/notifications\",\r\n        badge: \"5\",\r\n    },\r\n    {\r\n        name: \"Settings\",\r\n        icon: <Settings className=\"h-5 w-5\" />,\r\n        url: \"/admin/dashboard/settings\",\r\n    },\r\n]\r\n",
        "language": "tsx"
      }
    },
    "lib": {
      "@/registry/view/orders-page-1/lib/utils.ts": {
        "content": "// this for formatting the price in the product overview page for your country currency\nexport const formatPrice = (price: number) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"EGP\",\n    useGrouping: false,\n  })\n  return formatter.format(price)\n}\n\nexport const formatDate = (dateString: string): string => {\n    if (!dateString) return 'N/A';\n    try {\n        return new Date(dateString).toLocaleDateString('en-US', {\n            year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit'\n        });\n    } catch (e) {\n        return 'Invalid Date';\n    }\n};",
        "language": "typescript"
      }
    },
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/orders-page-1/page": {
      "content": "import OrdersPage from \"./components/orders-page\";\r\n\r\nexport default function page() {\r\n    return (\r\n        <div className=\"min-h-screen bg-background\">\r\n            <OrdersPage />\r\n        </div>\r\n    )\r\n}",
      "language": "tsx"
    }
  },
  "orders-page-2": {
    "components": {
      "@/registry/view/orders-page-2/components/orders-header": {
        "content": "import { SidebarTrigger } from \"@/components/ui/sidebar\"\r\nimport { Separator } from \"@/components/ui/separator\"\r\n\r\nexport function OrdersHeader() {\r\n    return (\r\n        <header className=\"group-has-data-[collapsible=icon]/sidebar-wrapper:h-12 flex h-12 shrink-0 items-center gap-2 border-b transition-[width,height] ease-linear px-4 lg:px-6\">\r\n            <div className=\"flex w-full items-center gap-1\">\r\n                <SidebarTrigger className=\"-ml-1\" />\r\n                <Separator\r\n                    orientation=\"vertical\"\r\n                    className=\"mx-2 data-[orientation=vertical]:h-4\"\r\n                />\r\n                <h1 className=\"text-base font-medium\">Orders</h1>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {
      "@/registry/view/orders-page-2/lib/utils.ts": {
        "content": "// this for formatting the price in the product overview page for your country currency\nexport const formatPrice = (price: number) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"EGP\",\n    useGrouping: false,\n  })\n  return formatter.format(price)\n}\n",
        "language": "typescript"
      }
    },
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/orders-page-2/page": {
      "content": "\"use client\"\r\n\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport {\r\n    DropdownMenu,\r\n    DropdownMenuContent,\r\n    DropdownMenuItem,\r\n    DropdownMenuSeparator,\r\n    DropdownMenuTrigger\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { SidebarInset, SidebarProvider } from \"@/components/ui/sidebar\"\r\nimport { ArrowUpDown, Download, Eye, Filter, MoreHorizontal, Search, Trash2 } from \"lucide-react\"\r\nimport Link from \"next/link\"\r\nimport { useState } from \"react\"\r\nimport DashboardSidebar from \"../dashboard-2/components/dashboard-sidebar\"\r\nimport { OrdersHeader } from \"./components/orders-header\"\r\nimport { formatPrice } from \"./lib/utils\"\r\n\r\nconst orders = [\r\n    {\r\n        id: \"ORD-7352\",\r\n        date: \"2025-04-24\",\r\n        customer: \"Emma Johnson\",\r\n        email: \"emma.j@example.com\",\r\n        amount: 235.89,\r\n        status: \"Delivered\",\r\n        items: 3,\r\n    },\r\n    {\r\n        id: \"ORD-7351\",\r\n        date: \"2025-04-23\",\r\n        customer: \"Michael Chen\",\r\n        email: \"michael.c@example.com\",\r\n        amount: 125.99,\r\n        status: \"Processing\",\r\n        items: 2,\r\n    },\r\n    {\r\n        id: \"ORD-7350\",\r\n        date: \"2025-04-23\",\r\n        customer: \"Sophia Martinez\",\r\n        email: \"sophia.m@example.com\",\r\n        amount: 432.20,\r\n        status: \"Shipped\",\r\n        items: 5,\r\n    },\r\n    {\r\n        id: \"ORD-7349\",\r\n        date: \"2025-04-22\",\r\n        customer: \"James Wilson\",\r\n        email: \"james.w@example.com\",\r\n        amount: 76.45,\r\n        status: \"Delivered\",\r\n        items: 1,\r\n    },\r\n    {\r\n        id: \"ORD-7348\",\r\n        date: \"2025-04-21\",\r\n        customer: \"Olivia Brown\",\r\n        email: \"olivia.b@example.com\",\r\n        amount: 189.50,\r\n        status: \"Processing\",\r\n        items: 3,\r\n    },\r\n    {\r\n        id: \"ORD-7347\",\r\n        date: \"2025-04-20\",\r\n        customer: \"William Davis\",\r\n        email: \"william.d@example.com\",\r\n        amount: 312.75,\r\n        status: \"Delivered\",\r\n        items: 4,\r\n    },\r\n    {\r\n        id: \"ORD-7346\",\r\n        date: \"2025-04-19\",\r\n        customer: \"Ava Garcia\",\r\n        email: \"ava.g@example.com\",\r\n        amount: 94.20,\r\n        status: \"Shipped\",\r\n        items: 2,\r\n    },\r\n    {\r\n        id: \"ORD-7345\",\r\n        date: \"2025-04-18\",\r\n        customer: \"Noah Rodriguez\",\r\n        email: \"noah.r@example.com\",\r\n        amount: 156.30,\r\n        status: \"Delivered\",\r\n        items: 3,\r\n    },\r\n    {\r\n        id: \"ORD-7344\",\r\n        date: \"2025-04-17\",\r\n        customer: \"Isabella Lopez\",\r\n        email: \"isabella.l@example.com\",\r\n        amount: 210.45,\r\n        status: \"Processing\",\r\n        items: 2,\r\n    },\r\n    {\r\n        id: \"ORD-7343\",\r\n        date: \"2025-04-16\",\r\n        customer: \"Liam Gonzalez\",\r\n        email: \"liam.g@example.com\",\r\n        amount: 178.90,\r\n        status: \"Shipped\",\r\n        items: 3,\r\n    },\r\n]\r\n\r\nexport default function Page() {\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n    const [statusFilter, setStatusFilter] = useState(\"all\")\r\n    const [dateFilter, setDateFilter] = useState(\"all\")\r\n\r\n    const filteredOrders = orders.filter((order) => {\r\n        const matchesSearch =\r\n            order.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n            order.customer.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n            order.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n\r\n        const matchesStatus = statusFilter === \"all\" || order.status.toLowerCase() === statusFilter.toLowerCase()\r\n        let matchesDate = true\r\n        if (dateFilter === \"today\") {\r\n            matchesDate = order.date === \"2025-04-24\"\r\n        } else if (dateFilter === \"yesterday\") {\r\n            matchesDate = order.date === \"2025-04-23\"\r\n        } else if (dateFilter === \"week\") {\r\n\r\n            matchesDate = true\r\n        }\r\n\r\n        return matchesSearch && matchesStatus && matchesDate\r\n    })\r\n\r\n    return (\r\n        <SidebarProvider>\r\n            <DashboardSidebar variant=\"inset\" />\r\n            <SidebarInset>\r\n                <OrdersHeader />\r\n                <div className=\"flex flex-1 flex-col px-4 lg:px-6\">\r\n                    <div className=\"flex flex-1 flex-col gap-2\">\r\n                        <div className=\"flex flex-col gap-3 py-3 md:gap-6 md:py-6\">\r\n                            <div className=\"flex flex-col gap-4\">\r\n                                <div>\r\n                                    <h1 className=\"text-2xl md:text-3xl font-bold tracking-tight text-foreground\">Orders Management</h1>\r\n                                    <p className=\"mt-1 text-muted-foreground\">View and manage all customer orders</p>\r\n                                </div>\r\n                            </div>\r\n                            <Card className=\"overflow-hidden border-border shadow-sm\">\r\n                                <CardContent className=\"p-6\">\r\n                                    <div className=\"flex flex-col gap-6 md:flex-row md:items-center\">\r\n                                        <div className=\"flex-1 md:max-w-md\">\r\n                                            <div className=\"relative\">\r\n                                                <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\r\n                                                <Input\r\n                                                    type=\"search\"\r\n                                                    placeholder=\"Search by order ID, customer name or email...\"\r\n                                                    className=\"pl-10 bg-background\"\r\n                                                    value={searchTerm}\r\n                                                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex flex-wrap items-center gap-3\">\r\n                                            <Select value={statusFilter} onValueChange={setStatusFilter}>\r\n                                                <SelectTrigger className=\"w-[180px] bg-background\">\r\n                                                    <SelectValue placeholder=\"Filter by status\" />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent>\r\n                                                    <SelectItem value=\"all\">All Statuses</SelectItem>\r\n                                                    <SelectItem value=\"processing\">Processing</SelectItem>\r\n                                                    <SelectItem value=\"shipped\">Shipped</SelectItem>\r\n                                                    <SelectItem value=\"delivered\">Delivered</SelectItem>\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                            <Select value={dateFilter} onValueChange={setDateFilter}>\r\n                                                <SelectTrigger className=\"w-[180px] bg-background\">\r\n                                                    <SelectValue placeholder=\"Filter by date\" />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent>\r\n                                                    <SelectItem value=\"all\">All Dates</SelectItem>\r\n                                                    <SelectItem value=\"today\">Today</SelectItem>\r\n                                                    <SelectItem value=\"yesterday\">Yesterday</SelectItem>\r\n                                                    <SelectItem value=\"week\">This Week</SelectItem>\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                            <Button variant=\"outline\" size=\"icon\" className=\"h-10 w-10 rounded-full\">\r\n                                                <Filter className=\"h-4 w-4\" />\r\n                                                <span className=\"sr-only\">More filters</span>\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n                            <Card className=\"overflow-hidden border-border shadow-sm\">\r\n                                <CardHeader className=\"bg-muted/40 px-6 py-5 border-b border-border\">\r\n                                    <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-2\">\r\n                                        <div>\r\n                                            <CardTitle className=\"text-xl font-semibold\">All Orders</CardTitle>\r\n                                            <CardDescription className=\"mt-1\">\r\n                                                Showing {filteredOrders.length} of {orders.length} total orders\r\n                                            </CardDescription>\r\n                                        </div>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            <Button variant=\"outline\" size=\"sm\">\r\n                                                <Filter className=\"mr-2 h-3.5 w-3.5\" />\r\n                                                Filter\r\n                                            </Button>\r\n                                            <Button variant=\"outline\" size=\"sm\">\r\n                                                <Download className=\"mr-2 h-3.5 w-3.5\" />\r\n                                                Export\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </CardHeader>\r\n                                <CardContent className=\"p-0\">\r\n                                    <div className=\"overflow-x-auto\">\r\n                                        <Table>\r\n                                            <TableHeader className=\"bg-muted/30\">\r\n                                                <TableRow className=\"hover:bg-muted/20\">\r\n                                                    <TableHead className=\"w-[100px] font-medium\">\r\n                                                        <Button variant=\"ghost\" className=\"hover:bg-transparent font-medium\">\r\n                                                            Order ID\r\n                                                            <ArrowUpDown className=\"ml-2 h-3.5 w-3.5 text-muted-foreground\" />\r\n                                                        </Button>\r\n                                                    </TableHead>\r\n                                                    <TableHead className=\"font-medium\">\r\n                                                        <Button variant=\"ghost\" className=\" hover:bg-transparent font-medium\">\r\n                                                            Date\r\n                                                            <ArrowUpDown className=\"ml-2 h-3.5 w-3.5 text-muted-foreground\" />\r\n                                                        </Button>\r\n                                                    </TableHead>\r\n                                                    <TableHead className=\"font-medium\">Customer</TableHead>\r\n                                                    <TableHead className=\"font-medium\">Items</TableHead>\r\n                                                    <TableHead className=\"font-medium\">\r\n                                                        <Button variant=\"ghost\" className=\" hover:bg-transparent font-medium\">\r\n                                                            Status\r\n                                                            <ArrowUpDown className=\"ml-2 h-3.5 w-3.5 text-muted-foreground\" />\r\n                                                        </Button>\r\n                                                    </TableHead>\r\n                                                    <TableHead className=\"text-right font-medium\">\r\n                                                        <Button variant=\"ghost\" className=\" hover:bg-transparent font-medium\">\r\n                                                            Amount\r\n                                                            <ArrowUpDown className=\"ml-2 h-3.5 w-3.5 text-muted-foreground\" />\r\n                                                        </Button>\r\n                                                    </TableHead>\r\n                                                    <TableHead className=\"w-[50px]\"></TableHead>\r\n                                                </TableRow>\r\n                                            </TableHeader>\r\n                                            <TableBody>\r\n                                                {filteredOrders.length === 0 ? (\r\n                                                    <TableRow>\r\n                                                        <TableCell colSpan={7} className=\"h-24 text-center\">\r\n                                                            <div className=\"flex flex-col items-center justify-center text-muted-foreground\">\r\n                                                                <Search className=\"h-8 w-8 mb-2 opacity-50\" />\r\n                                                                <p>No orders found matching your criteria.</p>\r\n                                                                <Button\r\n                                                                    variant=\"link\"\r\n                                                                    onClick={() => {\r\n                                                                        setSearchTerm(\"\")\r\n                                                                        setStatusFilter(\"all\")\r\n                                                                        setDateFilter(\"all\")\r\n                                                                    }}\r\n                                                                >\r\n                                                                    Clear all filters\r\n                                                                </Button>\r\n                                                            </div>\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                ) : (\r\n                                                    filteredOrders.map((order) => (\r\n                                                        <TableRow key={order.id} className=\"hover:bg-muted/20\">\r\n                                                            <TableCell className=\"font-medium py-2 px-6\">{order.id}</TableCell>\r\n                                                            <TableCell className=\"py-2 px-6 text-nowrap\">{order.date}</TableCell>\r\n                                                            <TableCell className=\"py-2 px-6\">\r\n                                                                <div>\r\n                                                                    <div className=\"font-medium\">{order.customer}</div>\r\n                                                                    <div className=\"text-sm text-muted-foreground\">{order.email}</div>\r\n                                                                </div>\r\n                                                            </TableCell>\r\n                                                            <TableCell className=\"py-2 px-6\">\r\n                                                                <Badge variant=\"outline\" className=\"bg-background text-nowrap\">\r\n                                                                    {order.items} items\r\n                                                                </Badge>\r\n                                                            </TableCell>\r\n                                                            <TableCell className=\"py-2 px-6\">\r\n                                                                <Badge\r\n                                                                    variant={\r\n                                                                        order.status === \"Delivered\"\r\n                                                                            ? \"default\"\r\n                                                                            : order.status === \"Processing\"\r\n                                                                                ? \"secondary\"\r\n                                                                                : \"outline\"\r\n                                                                    }\r\n                                                                    className={\r\n                                                                        order.status === \"Delivered\"\r\n                                                                            ? \"bg-green-100 text-green-800 hover:bg-green-100\"\r\n                                                                            : order.status === \"Processing\"\r\n                                                                                ? \"bg-amber-100 text-amber-800 hover:bg-amber-100\"\r\n                                                                                : \"bg-blue-100 text-blue-800 hover:bg-blue-100\"\r\n                                                                    }\r\n                                                                >\r\n                                                                    {order.status}\r\n                                                                </Badge>\r\n                                                            </TableCell>\r\n                                                            <TableCell className=\"text-right font-medium py-2 px-6\">{formatPrice(order?.amount)}</TableCell>\r\n                                                            <TableCell className=\"py-2 px-6\">\r\n                                                                <DropdownMenu>\r\n                                                                    <DropdownMenuTrigger asChild>\r\n                                                                        <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8 rounded-full\">\r\n                                                                            <MoreHorizontal className=\"h-4 w-4\" />\r\n                                                                            <span className=\"sr-only\">Open menu</span>\r\n                                                                        </Button>\r\n                                                                    </DropdownMenuTrigger>\r\n                                                                    <DropdownMenuContent align=\"end\" className=\"w-[180px]\">\r\n                                                                        <DropdownMenuItem asChild>\r\n                                                                            <Link href={`/dashboard/orders/${order.id}`} className=\"flex items-center\">\r\n                                                                                <Eye className=\"mr-2 h-4 w-4\" />\r\n                                                                                View details\r\n                                                                            </Link>\r\n                                                                        </DropdownMenuItem>\r\n                                                                        <DropdownMenuItem className=\"flex items-center\">\r\n                                                                            <Download className=\"mr-2 h-4 w-4\" />\r\n                                                                            Download invoice\r\n                                                                        </DropdownMenuItem>\r\n                                                                        <DropdownMenuSeparator />\r\n                                                                        <DropdownMenuItem className=\"text-destructive flex items-center\">\r\n                                                                            <Trash2 className=\"mr-2 h-4 w-4\" />\r\n                                                                            Delete order\r\n                                                                        </DropdownMenuItem>\r\n                                                                    </DropdownMenuContent>\r\n                                                                </DropdownMenu>\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))\r\n                                                )}\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </SidebarInset>\r\n        </SidebarProvider>\r\n    )\r\n}\r\n",
      "language": "tsx"
    }
  },
  "orders-page-3": {
    "components": {
      "@/registry/view/orders-page-3/components/header": {
        "content": "import { SidebarTrigger } from \"@/components/ui/sidebar\"\r\nimport { Separator } from \"@/components/ui/separator\"\r\n\r\nexport function Header() {\r\n    return (\r\n        <header className=\"group-has-data-[collapsible=icon]/sidebar-wrapper:h-12 flex h-12 shrink-0 items-center gap-2 border-b transition-[width,height] ease-linear px-4 lg:px-6\">\r\n            <div className=\"flex w-full items-center gap-1\">\r\n                <SidebarTrigger className=\"-ml-1\" />\r\n                <Separator\r\n                    orientation=\"vertical\"\r\n                    className=\"mx-2 data-[orientation=vertical]:h-4\"\r\n                />\r\n                <h1 className=\"text-base font-medium\">Orders</h1>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n",
        "language": "tsx"
      },
      "@/registry/view/orders-page-3/components/nav-documents": {
        "content": "\"use client\"\n\nimport {\n  FolderIcon,\n  MoreHorizontalIcon,\n  ShareIcon,\n  type LucideIcon,\n} from \"lucide-react\"\n\nimport {\n  SidebarGroup,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport Link from \"next/link\"\n\nexport function NavDocuments({\n  items,\n}: {\n  items: {\n    name: string\n    url: string\n    icon: LucideIcon\n  }[]\n}) {\n  const { isMobile } = useSidebar()\n\n  return (\n    <SidebarGroup className=\"group-data-[collapsible=icon]:hidden\">\n      <SidebarGroupLabel>Documents</SidebarGroupLabel>\n      <SidebarMenu>\n        {items.map((item) => (\n          <SidebarMenuItem key={item.name}>\n            <SidebarMenuButton asChild>\n              <Link\n                href={item.url}>\n                <item.icon />\n                <span>{item.name}</span>\n              </Link>\n            </SidebarMenuButton>\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <SidebarMenuAction\n                  showOnHover\n                  className=\"rounded-sm data-[state=open]:bg-accent\"\n                >\n                  <MoreHorizontalIcon />\n                  <span className=\"sr-only\">More</span>\n                </SidebarMenuAction>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent\n                className=\"w-24 rounded-lg\"\n                side={isMobile ? \"bottom\" : \"right\"}\n                align={isMobile ? \"end\" : \"start\"}\n              >\n                <DropdownMenuItem>\n                  <FolderIcon />\n                  <span>Open</span>\n                </DropdownMenuItem>\n                <DropdownMenuItem>\n                  <ShareIcon />\n                  <span>Share</span>\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </SidebarMenuItem>\n        ))}\n        <SidebarMenuItem>\n          <SidebarMenuButton className=\"text-sidebar-foreground/70\">\n            <MoreHorizontalIcon className=\"text-sidebar-foreground/70\" />\n            <span>More</span>\n          </SidebarMenuButton>\n        </SidebarMenuItem>\n      </SidebarMenu>\n    </SidebarGroup>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/orders-page-3/components/nav-secondary": {
        "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { LucideIcon } from \"lucide-react\"\n\nimport {\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n} from \"@/components/ui/sidebar\"\n\nexport function NavSecondary({\n  items,\n  ...props\n}: {\n  items: {\n    title: string\n    url: string\n    icon: LucideIcon\n  }[]\n} & React.ComponentPropsWithoutRef<typeof SidebarGroup>) {\n  return (\n    <SidebarGroup {...props}>\n      <SidebarGroupContent>\n        <SidebarMenu>\n          {items.map((item) => (\n            <SidebarMenuItem key={item.title}>\n              <SidebarMenuButton asChild>\n                <a href={item.url}>\n                  <item.icon />\n                  <span>{item.title}</span>\n                </a>\n              </SidebarMenuButton>\n            </SidebarMenuItem>\n          ))}\n        </SidebarMenu>\n      </SidebarGroupContent>\n    </SidebarGroup>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/orders-page-3/components/nav-user": {
        "content": "\"use client\"\n\nimport {\n  BellIcon,\n  CreditCardIcon,\n  LogOutIcon,\n  MoreVerticalIcon,\n  UserCircleIcon,\n} from \"lucide-react\"\n\nimport {\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/components/ui/sidebar\"\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/components/ui/avatar\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\n\nexport function NavUser({\n  user,\n}: {\n  user: {\n    name: string\n    email: string\n    avatar: string\n  }\n}) {\n  const { isMobile } = useSidebar()\n\n  return (\n    <SidebarMenu>\n      <SidebarMenuItem>\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <SidebarMenuButton\n              size=\"lg\"\n              className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n            >\n              <Avatar className=\"h-8 w-8 rounded-lg grayscale\">\n                <AvatarImage src={user.avatar} alt={user.name} />\n                <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n              </Avatar>\n              <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                <span className=\"truncate font-medium\">{user.name}</span>\n                <span className=\"truncate text-xs text-muted-foreground\">\n                  {user.email}\n                </span>\n              </div>\n              <MoreVerticalIcon className=\"ml-auto size-4\" />\n            </SidebarMenuButton>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent\n            className=\"w-[--radix-dropdown-menu-trigger-width] min-w-56 rounded-lg\"\n            side={isMobile ? \"bottom\" : \"right\"}\n            align=\"end\"\n            sideOffset={4}\n          >\n            <DropdownMenuLabel className=\"p-0 font-normal\">\n              <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\n                <Avatar className=\"h-8 w-8 rounded-lg\">\n                  <AvatarImage src={user.avatar} alt={user.name} />\n                  <AvatarFallback className=\"rounded-lg\">CN</AvatarFallback>\n                </Avatar>\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                  <span className=\"truncate font-medium\">{user.name}</span>\n                  <span className=\"truncate text-xs text-muted-foreground\">\n                    {user.email}\n                  </span>\n                </div>\n              </div>\n            </DropdownMenuLabel>\n            <DropdownMenuSeparator />\n            <DropdownMenuGroup>\n              <DropdownMenuItem>\n                <UserCircleIcon />\n                Account\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <CreditCardIcon />\n                Billing\n              </DropdownMenuItem>\n              <DropdownMenuItem>\n                <BellIcon />\n                Notifications\n              </DropdownMenuItem>\n            </DropdownMenuGroup>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>\n              <LogOutIcon />\n              Log out\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </SidebarMenuItem>\n    </SidebarMenu>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/orders-page-3/components/orders-cards": {
        "content": "import { Badge } from \"@/components/ui/badge\"\r\nimport { Card, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { TrendingDownIcon, TrendingUpIcon } from \"lucide-react\"\r\nimport { formatPrice } from \"../../orders-page-2/lib/utils\"\r\n\r\nexport function OrdersCards() {\r\n    return (\r\n        <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4\">\r\n            <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm \">\r\n                <CardHeader className=\"relative\">\r\n                    <CardDescription>Total Orders</CardDescription>\r\n                    <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">2,543</CardTitle>\r\n                    <div className=\"absolute right-4 top-4\">\r\n                        <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\r\n                            <TrendingUpIcon className=\"size-3\" />\r\n                            +15.3%\r\n                        </Badge>\r\n                    </div>\r\n                </CardHeader>\r\n                <CardFooter className=\"flex-col items-start gap-1 text-sm\">\r\n                    <div className=\"line-clamp-1 flex gap-2 font-medium\">\r\n                        Increased from last month <TrendingUpIcon className=\"size-4\" />\r\n                    </div>\r\n                    <div className=\"text-muted-foreground\">245 more orders than previous period</div>\r\n                </CardFooter>\r\n            </Card>\r\n            <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm \">\r\n                <CardHeader className=\"relative\">\r\n                    <CardDescription>Average Order Value</CardDescription>\r\n                    <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">\r\n                        {formatPrice(89.5)}\r\n                    </CardTitle>\r\n                    <div className=\"absolute right-4 top-4\">\r\n                        <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\r\n                            <TrendingUpIcon className=\"size-3\" />\r\n                            +5.2%\r\n                        </Badge>\r\n                    </div>\r\n                </CardHeader>\r\n                <CardFooter className=\"flex-col items-start gap-1 text-sm\">\r\n                    <div className=\"line-clamp-1 flex gap-2 font-medium\">\r\n                        Slight increase <TrendingUpIcon className=\"size-4\" />\r\n                    </div>\r\n                    <div className=\"text-muted-foreground\">{formatPrice(4.5)} higher than last month</div>\r\n                </CardFooter>\r\n            </Card>\r\n            <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm\">\r\n                <CardHeader className=\"relative\">\r\n                    <CardDescription>Pending Orders</CardDescription>\r\n                    <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">78</CardTitle>\r\n                    <div className=\"absolute right-4 top-4\">\r\n                        <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\r\n                            <TrendingDownIcon className=\"size-3\" />\r\n                            -8.3%\r\n                        </Badge>\r\n                    </div>\r\n                </CardHeader>\r\n                <CardFooter className=\"flex-col items-start gap-1 text-sm\">\r\n                    <div className=\"line-clamp-1 flex gap-2 font-medium\">\r\n                        Improved processing time <TrendingDownIcon className=\"size-4\" />\r\n                    </div>\r\n                    <div className=\"text-muted-foreground\">Faster fulfillment than previous month</div>\r\n                </CardFooter>\r\n            </Card>\r\n            <Card className=\"bg-gradient-to-t from-primary/5 to-card dark:from-primary/10 shadow-sm\">\r\n                <CardHeader className=\"relative\">\r\n                    <CardDescription>Conversion Rate</CardDescription>\r\n                    <CardTitle className=\"@[250px]/card:text-3xl text-2xl font-semibold tabular-nums\">3.8%</CardTitle>\r\n                    <div className=\"absolute right-4 top-4\">\r\n                        <Badge variant=\"outline\" className=\"flex gap-1 rounded-lg text-xs\">\r\n                            <TrendingUpIcon className=\"size-3\" />\r\n                            +0.5%\r\n                        </Badge>\r\n                    </div>\r\n                </CardHeader>\r\n                <CardFooter className=\"flex-col items-start gap-1 text-sm\">\r\n                    <div className=\"line-clamp-1 flex gap-2 font-medium\">\r\n                        Steady improvement <TrendingUpIcon className=\"size-4\" />\r\n                    </div>\r\n                    <div className=\"text-muted-foreground\">Cart abandonment rate decreased</div>\r\n                </CardFooter>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n",
        "language": "tsx"
      },
      "@/registry/view/orders-page-3/components/orders-chart": {
        "content": "\"use client\"\r\n\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { type ChartConfig, ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { ToggleGroup, ToggleGroupItem } from \"@/components/ui/toggle-group\"\r\nimport { useIsMobile } from \"@/hooks/use-mobile\"\r\nimport * as React from \"react\"\r\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\r\n\r\nconst chartData = [\r\n    { date: \"2024-04-01\", completed: 42, pending: 15, shipped: 25, processing: 18, cancelled: 5 },\r\n    { date: \"2024-04-02\", completed: 37, pending: 18, shipped: 22, processing: 15, cancelled: 3 },\r\n    { date: \"2024-04-03\", completed: 45, pending: 12, shipped: 28, processing: 20, cancelled: 4 },\r\n    { date: \"2024-04-04\", completed: 52, pending: 26, shipped: 30, processing: 22, cancelled: 6 },\r\n    { date: \"2024-04-05\", completed: 63, pending: 29, shipped: 35, processing: 25, cancelled: 8 },\r\n    { date: \"2024-04-06\", completed: 71, pending: 34, shipped: 40, processing: 30, cancelled: 7 },\r\n    { date: \"2024-04-07\", completed: 55, pending: 18, shipped: 32, processing: 24, cancelled: 5 },\r\n    { date: \"2024-04-08\", completed: 69, pending: 32, shipped: 38, processing: 28, cancelled: 9 },\r\n    { date: \"2024-04-09\", completed: 39, pending: 11, shipped: 25, processing: 18, cancelled: 4 },\r\n    { date: \"2024-04-10\", completed: 51, pending: 19, shipped: 30, processing: 22, cancelled: 6 },\r\n    { date: \"2024-04-11\", completed: 67, pending: 35, shipped: 36, processing: 27, cancelled: 8 },\r\n    { date: \"2024-04-12\", completed: 52, pending: 21, shipped: 31, processing: 23, cancelled: 5 },\r\n    { date: \"2024-04-13\", completed: 72, pending: 38, shipped: 40, processing: 30, cancelled: 9 },\r\n    { date: \"2024-04-14\", completed: 47, pending: 22, shipped: 28, processing: 21, cancelled: 6 },\r\n    { date: \"2024-04-15\", completed: 40, pending: 17, shipped: 25, processing: 19, cancelled: 4 },\r\n    { date: \"2024-04-16\", completed: 48, pending: 19, shipped: 29, processing: 22, cancelled: 5 },\r\n    { date: \"2024-04-17\", completed: 76, pending: 36, shipped: 42, processing: 32, cancelled: 10 },\r\n    { date: \"2024-04-18\", completed: 74, pending: 41, shipped: 40, processing: 30, cancelled: 9 },\r\n    { date: \"2024-04-19\", completed: 53, pending: 18, shipped: 32, processing: 24, cancelled: 6 },\r\n    { date: \"2024-04-20\", completed: 39, pending: 15, shipped: 24, processing: 18, cancelled: 4 },\r\n    { date: \"2024-04-21\", completed: 47, pending: 20, shipped: 28, processing: 21, cancelled: 5 },\r\n    { date: \"2024-04-22\", completed: 54, pending: 17, shipped: 32, processing: 24, cancelled: 6 },\r\n    { date: \"2024-04-23\", completed: 48, pending: 23, shipped: 29, processing: 22, cancelled: 5 },\r\n    { date: \"2024-04-24\", completed: 67, pending: 29, shipped: 38, processing: 28, cancelled: 8 },\r\n    { date: \"2024-04-25\", completed: 55, pending: 25, shipped: 33, processing: 25, cancelled: 7 },\r\n    { date: \"2024-04-26\", completed: 35, pending: 13, shipped: 22, processing: 16, cancelled: 4 },\r\n    { date: \"2024-04-27\", completed: 83, pending: 42, shipped: 45, processing: 34, cancelled: 10 },\r\n    { date: \"2024-04-28\", completed: 42, pending: 18, shipped: 26, processing: 19, cancelled: 5 },\r\n    { date: \"2024-04-29\", completed: 65, pending: 24, shipped: 37, processing: 28, cancelled: 8 },\r\n    { date: \"2024-04-30\", completed: 84, pending: 38, shipped: 46, processing: 35, cancelled: 11 },\r\n    { date: \"2024-05-01\", completed: 55, pending: 22, shipped: 33, processing: 25, cancelled: 6 },\r\n    { date: \"2024-05-02\", completed: 63, pending: 31, shipped: 36, processing: 27, cancelled: 8 },\r\n    { date: \"2024-05-03\", completed: 57, pending: 19, shipped: 34, processing: 25, cancelled: 7 },\r\n    { date: \"2024-05-04\", completed: 85, pending: 42, shipped: 47, processing: 35, cancelled: 10 },\r\n    { date: \"2024-05-05\", completed: 91, pending: 39, shipped: 50, processing: 38, cancelled: 12 },\r\n    { date: \"2024-05-06\", completed: 98, pending: 52, shipped: 54, processing: 40, cancelled: 13 },\r\n    { date: \"2024-05-07\", completed: 78, pending: 30, shipped: 43, processing: 32, cancelled: 10 },\r\n    { date: \"2024-05-08\", completed: 49, pending: 21, shipped: 30, processing: 22, cancelled: 6 },\r\n    { date: \"2024-05-09\", completed: 57, pending: 18, shipped: 34, processing: 25, cancelled: 7 },\r\n    { date: \"2024-05-10\", completed: 63, pending: 33, shipped: 36, processing: 27, cancelled: 8 },\r\n    { date: \"2024-05-11\", completed: 75, pending: 27, shipped: 42, processing: 31, cancelled: 9 },\r\n    { date: \"2024-05-12\", completed: 57, pending: 24, shipped: 34, processing: 25, cancelled: 7 },\r\n    { date: \"2024-05-13\", completed: 57, pending: 16, shipped: 34, processing: 25, cancelled: 7 },\r\n    { date: \"2024-05-14\", completed: 88, pending: 49, shipped: 48, processing: 36, cancelled: 11 },\r\n    { date: \"2024-05-15\", completed: 93, pending: 38, shipped: 51, processing: 38, cancelled: 12 },\r\n    { date: \"2024-05-16\", completed: 78, pending: 40, shipped: 43, processing: 32, cancelled: 10 },\r\n    { date: \"2024-05-17\", completed: 99, pending: 42, shipped: 54, processing: 41, cancelled: 13 },\r\n    { date: \"2024-05-18\", completed: 75, pending: 35, shipped: 42, processing: 31, cancelled: 9 },\r\n    { date: \"2024-05-19\", completed: 55, pending: 18, shipped: 33, processing: 25, cancelled: 7 },\r\n    { date: \"2024-05-20\", completed: 57, pending: 23, shipped: 34, processing: 25, cancelled: 7 },\r\n    { date: \"2024-05-21\", completed: 32, pending: 14, shipped: 20, processing: 15, cancelled: 4 },\r\n    { date: \"2024-05-22\", completed: 31, pending: 12, shipped: 19, processing: 14, cancelled: 4 },\r\n    { date: \"2024-05-23\", completed: 62, pending: 29, shipped: 35, processing: 26, cancelled: 8 },\r\n    { date: \"2024-05-24\", completed: 64, pending: 22, shipped: 36, processing: 27, cancelled: 8 },\r\n    { date: \"2024-05-25\", completed: 61, pending: 25, shipped: 35, processing: 26, cancelled: 8 },\r\n    { date: \"2024-05-26\", completed: 53, pending: 17, shipped: 32, processing: 24, cancelled: 7 },\r\n    { date: \"2024-05-27\", completed: 90, pending: 46, shipped: 49, processing: 37, cancelled: 11 },\r\n    { date: \"2024-05-28\", completed: 53, pending: 19, shipped: 32, processing: 24, cancelled: 7 },\r\n    { date: \"2024-05-29\", completed: 38, pending: 13, shipped: 23, processing: 17, cancelled: 5 },\r\n    { date: \"2024-05-30\", completed: 70, pending: 28, shipped: 39, processing: 29, cancelled: 9 },\r\n    { date: \"2024-05-31\", completed: 58, pending: 23, shipped: 34, processing: 26, cancelled: 7 },\r\n    { date: \"2024-06-01\", completed: 58, pending: 20, shipped: 34, processing: 26, cancelled: 7 },\r\n    { date: \"2024-06-02\", completed: 90, pending: 41, shipped: 49, processing: 37, cancelled: 11 },\r\n    { date: \"2024-06-03\", completed: 43, pending: 16, shipped: 26, processing: 20, cancelled: 5 },\r\n    { date: \"2024-06-04\", completed: 89, pending: 38, shipped: 49, processing: 37, cancelled: 11 },\r\n    { date: \"2024-06-05\", completed: 38, pending: 14, shipped: 23, processing: 17, cancelled: 5 },\r\n    { date: \"2024-06-06\", completed: 64, pending: 25, shipped: 36, processing: 27, cancelled: 8 },\r\n    { date: \"2024-06-07\", completed: 73, pending: 37, shipped: 40, processing: 30, cancelled: 9 },\r\n    { date: \"2024-06-08\", completed: 85, pending: 32, shipped: 47, processing: 35, cancelled: 11 },\r\n    { date: \"2024-06-09\", completed: 98, pending: 48, shipped: 54, processing: 40, cancelled: 12 },\r\n    { date: \"2024-06-10\", completed: 55, pending: 20, shipped: 33, processing: 25, cancelled: 7 },\r\n    { date: \"2024-06-11\", completed: 42, pending: 15, shipped: 26, processing: 19, cancelled: 5 },\r\n    { date: \"2024-06-12\", completed: 92, pending: 42, shipped: 50, processing: 38, cancelled: 12 },\r\n    { date: \"2024-06-13\", completed: 41, pending: 13, shipped: 25, processing: 19, cancelled: 5 },\r\n    { date: \"2024-06-14\", completed: 86, pending: 38, shipped: 47, processing: 35, cancelled: 11 },\r\n    { date: \"2024-06-15\", completed: 67, pending: 35, shipped: 38, processing: 28, cancelled: 8 },\r\n    { date: \"2024-06-16\", completed: 71, pending: 31, shipped: 40, processing: 30, cancelled: 9 },\r\n    { date: \"2024-06-17\", completed: 95, pending: 52, shipped: 52, processing: 39, cancelled: 12 },\r\n    { date: \"2024-06-18\", completed: 47, pending: 17, shipped: 29, processing: 21, cancelled: 6 },\r\n    { date: \"2024-06-19\", completed: 71, pending: 29, shipped: 40, processing: 30, cancelled: 9 },\r\n    { date: \"2024-06-20\", completed: 88, pending: 45, shipped: 48, processing: 36, cancelled: 11 },\r\n    { date: \"2024-06-21\", completed: 59, pending: 21, shipped: 35, processing: 26, cancelled: 7 },\r\n    { date: \"2024-06-22\", completed: 67, pending: 27, shipped: 38, processing: 28, cancelled: 8 },\r\n    { date: \"2024-06-23\", completed: 100, pending: 53, shipped: 55, processing: 41, cancelled: 13 },\r\n    { date: \"2024-06-24\", completed: 52, pending: 18, shipped: 31, processing: 23, cancelled: 6 },\r\n    { date: \"2024-06-25\", completed: 51, pending: 19, shipped: 31, processing: 23, cancelled: 6 },\r\n    { date: \"2024-06-26\", completed: 84, pending: 38, shipped: 46, processing: 35, cancelled: 10 },\r\n    { date: \"2024-06-27\", completed: 88, pending: 49, shipped: 48, processing: 36, cancelled: 11 },\r\n    { date: \"2024-06-28\", completed: 49, pending: 20, shipped: 30, processing: 22, cancelled: 6 },\r\n    { date: \"2024-06-29\", completed: 43, pending: 16, shipped: 26, processing: 20, cancelled: 5 },\r\n    { date: \"2024-06-30\", completed: 86, pending: 40, shipped: 47, processing: 35, cancelled: 11 },\r\n]\r\n\r\nconst chartConfig = {\r\n    orders: {\r\n        label: \"Orders\",\r\n    },\r\n    completed: {\r\n        label: \"Completed\",\r\n        color: \"hsl(var(--chart-1))\",\r\n    },\r\n    shipped: {\r\n        label: \"Shipped\",\r\n        color: \"hsl(var(--chart-3))\",\r\n    },\r\n    processing: {\r\n        label: \"Processing\",\r\n        color: \"hsl(var(--chart-4))\",\r\n    },\r\n    pending: {\r\n        label: \"Pending\",\r\n        color: \"hsl(var(--chart-2))\",\r\n    },\r\n    cancelled: {\r\n        label: \"Cancelled\",\r\n        color: \"hsl(var(--chart-5))\",\r\n    },\r\n} satisfies ChartConfig\r\n\r\nexport function OrdersChart() {\r\n    const isMobile = useIsMobile()\r\n    const [timeRange, setTimeRange] = React.useState(\"30d\")\r\n\r\n    React.useEffect(() => {\r\n        if (isMobile) {\r\n            setTimeRange(\"7d\")\r\n        }\r\n    }, [isMobile])\r\n\r\n    const filteredData = chartData.filter((item) => {\r\n        const date = new Date(item.date)\r\n        const referenceDate = new Date(\"2024-06-30\")\r\n        let daysToSubtract = 90\r\n        if (timeRange === \"30d\") {\r\n            daysToSubtract = 30\r\n        } else if (timeRange === \"7d\") {\r\n            daysToSubtract = 7\r\n        }\r\n        const startDate = new Date(referenceDate)\r\n        startDate.setDate(startDate.getDate() - daysToSubtract)\r\n        return date >= startDate\r\n    })\r\n\r\n    return (\r\n        <Card className=\"@container/card\">\r\n            <CardHeader className=\"relative\">\r\n                <CardTitle>Order Trends</CardTitle>\r\n                <CardDescription>\r\n                    <span className=\"@[540px]/card:block hidden\">Order status breakdown over time</span>\r\n                    <span className=\"@[540px]/card:hidden\">Order status over time</span>\r\n                </CardDescription>\r\n                <div className=\"absolute right-4 top-4\">\r\n                    <ToggleGroup\r\n                        type=\"single\"\r\n                        value={timeRange}\r\n                        onValueChange={setTimeRange}\r\n                        variant=\"outline\"\r\n                        className=\"@[767px]/card:flex hidden\"\r\n                    >\r\n                        <ToggleGroupItem value=\"90d\" className=\"h-8 px-2.5\">\r\n                            Last 3 months\r\n                        </ToggleGroupItem>\r\n                        <ToggleGroupItem value=\"30d\" className=\"h-8 px-2.5\">\r\n                            Last 30 days\r\n                        </ToggleGroupItem>\r\n                        <ToggleGroupItem value=\"7d\" className=\"h-8 px-2.5\">\r\n                            Last 7 days\r\n                        </ToggleGroupItem>\r\n                    </ToggleGroup>\r\n                    <Select value={timeRange} onValueChange={setTimeRange}>\r\n                        <SelectTrigger className=\"@[767px]/card:hidden flex w-40\" aria-label=\"Select a time range\">\r\n                            <SelectValue placeholder=\"Last 3 months\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent className=\"rounded-xl\">\r\n                            <SelectItem value=\"90d\" className=\"rounded-lg\">\r\n                                Last 3 months\r\n                            </SelectItem>\r\n                            <SelectItem value=\"30d\" className=\"rounded-lg\">\r\n                                Last 30 days\r\n                            </SelectItem>\r\n                            <SelectItem value=\"7d\" className=\"rounded-lg\">\r\n                                Last 7 days\r\n                            </SelectItem>\r\n                        </SelectContent>\r\n                    </Select>\r\n                </div>\r\n            </CardHeader>\r\n            <CardContent className=\"px-2 pt-4 sm:px-6 sm:pt-6\">\r\n                <ChartContainer config={chartConfig} className=\"aspect-auto h-[300px] w-full\">\r\n                    <AreaChart data={filteredData}>\r\n                        <defs>\r\n                            <linearGradient id=\"fillCompleted\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"5%\" stopColor=\"var(--color-completed)\" stopOpacity={1.0} />\r\n                                <stop offset=\"95%\" stopColor=\"var(--color-completed)\" stopOpacity={0.1} />\r\n                            </linearGradient>\r\n                            <linearGradient id=\"fillShipped\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"5%\" stopColor=\"var(--color-shipped)\" stopOpacity={0.9} />\r\n                                <stop offset=\"95%\" stopColor=\"var(--color-shipped)\" stopOpacity={0.1} />\r\n                            </linearGradient>\r\n                            <linearGradient id=\"fillProcessing\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"5%\" stopColor=\"var(--color-processing)\" stopOpacity={0.9} />\r\n                                <stop offset=\"95%\" stopColor=\"var(--color-processing)\" stopOpacity={0.1} />\r\n                            </linearGradient>\r\n                            <linearGradient id=\"fillPending\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"5%\" stopColor=\"var(--color-pending)\" stopOpacity={0.8} />\r\n                                <stop offset=\"95%\" stopColor=\"var(--color-pending)\" stopOpacity={0.1} />\r\n                            </linearGradient>\r\n                            <linearGradient id=\"fillCancelled\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                                <stop offset=\"5%\" stopColor=\"var(--color-cancelled)\" stopOpacity={0.7} />\r\n                                <stop offset=\"95%\" stopColor=\"var(--color-cancelled)\" stopOpacity={0.1} />\r\n                            </linearGradient>\r\n                        </defs>\r\n                        <CartesianGrid vertical={false} />\r\n                        <XAxis\r\n                            dataKey=\"date\"\r\n                            tickLine={false}\r\n                            axisLine={false}\r\n                            tickMargin={8}\r\n                            minTickGap={32}\r\n                            tickFormatter={(value) => {\r\n                                const date = new Date(value)\r\n                                return date.toLocaleDateString(\"en-US\", {\r\n                                    month: \"short\",\r\n                                    day: \"numeric\",\r\n                                })\r\n                            }}\r\n                        />\r\n                        <ChartTooltip\r\n                            cursor={false}\r\n                            content={\r\n                                <ChartTooltipContent\r\n                                    labelFormatter={(value) => {\r\n                                        return new Date(value).toLocaleDateString(\"en-US\", {\r\n                                            month: \"short\",\r\n                                            day: \"numeric\",\r\n                                        })\r\n                                    }}\r\n                                    indicator=\"dot\"\r\n                                />\r\n                            }\r\n                        />\r\n                        <Area\r\n                            dataKey=\"cancelled\"\r\n                            type=\"natural\"\r\n                            fill=\"url(#fillCancelled)\"\r\n                            stroke=\"var(--color-cancelled)\"\r\n                            stackId=\"a\"\r\n                        />\r\n                        <Area dataKey=\"pending\" type=\"natural\" fill=\"url(#fillPending)\" stroke=\"var(--color-pending)\" stackId=\"a\" />\r\n                        <Area\r\n                            dataKey=\"processing\"\r\n                            type=\"natural\"\r\n                            fill=\"url(#fillProcessing)\"\r\n                            stroke=\"var(--color-processing)\"\r\n                            stackId=\"a\"\r\n                        />\r\n                        <Area dataKey=\"shipped\" type=\"natural\" fill=\"url(#fillShipped)\" stroke=\"var(--color-shipped)\" stackId=\"a\" />\r\n                        <Area\r\n                            dataKey=\"completed\"\r\n                            type=\"natural\"\r\n                            fill=\"url(#fillCompleted)\"\r\n                            stroke=\"var(--color-completed)\"\r\n                            stackId=\"a\"\r\n                        />\r\n                    </AreaChart>\r\n                </ChartContainer>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n",
        "language": "tsx"
      },
      "@/registry/view/orders-page-3/components/orders-stats": {
        "content": "\"use client\"\r\n\r\nimport { ArrowDownIcon, ArrowUpIcon, DollarSignIcon, PackageIcon, ShoppingCartIcon, TruckIcon } from \"lucide-react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\n\r\nexport function OrdersStats() {\r\n    return (\r\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n            <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">Total Orders</CardTitle>\r\n                    <ShoppingCartIcon className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"text-2xl font-bold\">1,284</div>\r\n                    <div className=\"flex items-center text-xs text-muted-foreground\">\r\n                        <ArrowUpIcon className=\"mr-1 h-3 w-3 text-green-500\" />\r\n                        <span className=\"text-green-500\">12%</span>\r\n                        <span className=\"ml-1\">from last month</span>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">Pending Orders</CardTitle>\r\n                    <PackageIcon className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"text-2xl font-bold\">145</div>\r\n                    <div className=\"flex items-center text-xs text-muted-foreground\">\r\n                        <ArrowUpIcon className=\"mr-1 h-3 w-3 text-amber-500\" />\r\n                        <span className=\"text-amber-500\">8%</span>\r\n                        <span className=\"ml-1\">from last month</span>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">Shipped Orders</CardTitle>\r\n                    <TruckIcon className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"text-2xl font-bold\">842</div>\r\n                    <div className=\"flex items-center text-xs text-muted-foreground\">\r\n                        <ArrowUpIcon className=\"mr-1 h-3 w-3 text-green-500\" />\r\n                        <span className=\"text-green-500\">16%</span>\r\n                        <span className=\"ml-1\">from last month</span>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Card>\r\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                    <CardTitle className=\"text-sm font-medium\">Revenue</CardTitle>\r\n                    <DollarSignIcon className=\"h-4 w-4 text-muted-foreground\" />\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"text-2xl font-bold\">$48,294</div>\r\n                    <div className=\"flex items-center text-xs text-muted-foreground\">\r\n                        <ArrowDownIcon className=\"mr-1 h-3 w-3 text-red-500\" />\r\n                        <span className=\"text-red-500\">3%</span>\r\n                        <span className=\"ml-1\">from last month</span>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n",
        "language": "tsx"
      },
      "@/registry/view/orders-page-3/components/orders-table": {
        "content": "\"use client\"\r\n\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Checkbox } from \"@/components/ui/checkbox\"\r\nimport {\r\n    Dialog,\r\n    DialogContent,\r\n    DialogDescription,\r\n    DialogFooter,\r\n    DialogHeader,\r\n    DialogTitle,\r\n} from \"@/components/ui/dialog\"\r\nimport {\r\n    DropdownMenu,\r\n    DropdownMenuCheckboxItem,\r\n    DropdownMenuContent,\r\n    DropdownMenuItem,\r\n    DropdownMenuSeparator,\r\n    DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport {\r\n    Sheet,\r\n    SheetClose,\r\n    SheetContent,\r\n    SheetDescription,\r\n    SheetFooter,\r\n    SheetHeader,\r\n    SheetTitle,\r\n} from \"@/components/ui/sheet\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/custom-tabs\"\r\nimport { Separator } from \"@/components/ui/separator\"\r\nimport { toast } from \"sonner\"\r\nimport {\r\n    closestCenter,\r\n    DndContext,\r\n    type DragEndEvent,\r\n    KeyboardSensor,\r\n    MouseSensor,\r\n    TouchSensor,\r\n    type UniqueIdentifier,\r\n    useSensor,\r\n    useSensors,\r\n} from \"@dnd-kit/core\"\r\nimport { restrictToVerticalAxis } from \"@dnd-kit/modifiers\"\r\nimport { arrayMove, SortableContext, useSortable, verticalListSortingStrategy } from \"@dnd-kit/sortable\"\r\nimport { CSS } from \"@dnd-kit/utilities\"\r\nimport {\r\n    type ColumnDef,\r\n    type ColumnFiltersState,\r\n    flexRender,\r\n    getCoreRowModel,\r\n    getFacetedRowModel,\r\n    getFacetedUniqueValues,\r\n    getFilteredRowModel,\r\n    getPaginationRowModel,\r\n    getSortedRowModel,\r\n    type Row,\r\n    type SortingState,\r\n    useReactTable,\r\n    type VisibilityState,\r\n} from \"@tanstack/react-table\"\r\nimport {\r\n    CheckCircle2Icon,\r\n    ChevronDownIcon,\r\n    ChevronLeftIcon,\r\n    ChevronRightIcon,\r\n    ChevronsLeftIcon,\r\n    ChevronsRightIcon,\r\n    ClockIcon,\r\n    ColumnsIcon,\r\n    CreditCardIcon,\r\n    FilterIcon,\r\n    GripVerticalIcon,\r\n    HomeIcon,\r\n    MailIcon,\r\n    MapPinIcon,\r\n    MoreVerticalIcon,\r\n    PackageIcon,\r\n    PhoneIcon,\r\n    PlusIcon,\r\n    SearchIcon,\r\n    TruckIcon,\r\n    UserIcon,\r\n    XCircleIcon,\r\n} from \"lucide-react\"\r\nimport * as React from \"react\"\r\nimport { z } from \"zod\"\r\nimport { formatPrice } from \"../../orders-page-2/lib/utils\"\r\n\r\nexport const orderItemSchema = z.object({\r\n    id: z.number(),\r\n    name: z.string(),\r\n    price: z.number(),\r\n    quantity: z.number(),\r\n    total: z.number(),\r\n})\r\n\r\nexport const orderAddressSchema = z.object({\r\n    street: z.string(),\r\n    city: z.string(),\r\n    state: z.string(),\r\n    zipCode: z.string(),\r\n    country: z.string(),\r\n})\r\n\r\nexport const orderCustomerSchema = z.object({\r\n    name: z.string(),\r\n    email: z.string(),\r\n    phone: z.string().optional(),\r\n})\r\n\r\nexport const orderSchema = z.object({\r\n    id: z.number(),\r\n    orderNumber: z.string(),\r\n    customer: z.string(),\r\n    customerDetails: orderCustomerSchema.optional(),\r\n    date: z.string(),\r\n    status: z.string(),\r\n    total: z.number(),\r\n    items: z.number(),\r\n    orderItems: z.array(orderItemSchema).optional(),\r\n    paymentMethod: z.string(),\r\n    shippingAddress: orderAddressSchema.optional(),\r\n    billingAddress: orderAddressSchema.optional(),\r\n    notes: z.string().optional(),\r\n})\r\n\r\nfunction DragHandle({ id }: { id: number }) {\r\n    const { attributes, listeners } = useSortable({\r\n        id,\r\n    })\r\n\r\n    return (\r\n        <Button\r\n            {...attributes}\r\n            {...listeners}\r\n            variant=\"ghost\"\r\n            size=\"icon\"\r\n            className=\"size-7 text-muted-foreground hover:bg-transparent\"\r\n        >\r\n            <GripVerticalIcon className=\"size-3 text-muted-foreground\" />\r\n            <span className=\"sr-only\">Drag to reorder</span>\r\n        </Button>\r\n    )\r\n}\r\n\r\nconst getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n        case \"Completed\":\r\n            return <CheckCircle2Icon className=\"text-green-500 dark:text-green-400\" />\r\n        case \"Processing\":\r\n            return <ClockIcon className=\"text-amber-500 dark:text-amber-400\" />\r\n        case \"Shipped\":\r\n            return <TruckIcon className=\"text-blue-500 dark:text-blue-400\" />\r\n        case \"Cancelled\":\r\n            return <XCircleIcon className=\"text-red-500 dark:text-red-400\" />\r\n        default:\r\n            return <PackageIcon />\r\n    }\r\n}\r\n\r\nconst getStatusColor = (status: string) => {\r\n    switch (status) {\r\n        case \"Completed\":\r\n            return \"text-green-500 dark:text-green-400\"\r\n        case \"Processing\":\r\n            return \"text-amber-500 dark:text-amber-400 \"\r\n        case \"Shipped\":\r\n            return \"text-blue-500 dark:text-blue-400\"\r\n        case \"Cancelled\":\r\n            return \"text-red-500 dark:text-red-400\"\r\n        default:\r\n            return \"text-muted-foreground\"\r\n    }\r\n}\r\n\r\nfunction OrderDetails({ order, onClose }: { order: z.infer<typeof orderSchema>; onClose: () => void }) {\r\n    return (\r\n        <SheetContent className=\"sm:max-w-xl\">\r\n            <SheetHeader>\r\n                <SheetTitle>Order #{order.orderNumber}</SheetTitle>\r\n                <SheetDescription>\r\n                    Placed on {new Date(order.date).toLocaleDateString()} • {order.status}\r\n                </SheetDescription>\r\n            </SheetHeader>\r\n\r\n            <Tabs defaultValue=\"details\" className=\"mt-6\">\r\n                <TabsList className=\"grid w-full grid-cols-3\">\r\n                    <TabsTrigger value=\"details\">Details</TabsTrigger>\r\n                    <TabsTrigger value=\"items\">Items</TabsTrigger>\r\n                    <TabsTrigger value=\"customer\">Customer</TabsTrigger>\r\n                </TabsList>\r\n\r\n                <TabsContent value=\"details\" className=\"space-y-4 pt-4\">\r\n                    <div className=\"grid gap-4\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"font-medium\">Status</div>\r\n                            <Badge variant=\"outline\" className={`flex gap-1 px-1.5 ${getStatusColor(order.status)} [&_svg]:size-3`}>\r\n                                {getStatusIcon(order.status)}\r\n                                {order.status}\r\n                            </Badge>\r\n                        </div>\r\n                        <Separator />\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"font-medium\">Order Date</div>\r\n                            <div>{new Date(order.date).toLocaleDateString()}</div>\r\n                        </div>\r\n                        <Separator />\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"font-medium\">Payment Method</div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                                <CreditCardIcon className=\"h-4 w-4\" />\r\n                                {order.paymentMethod}\r\n                            </div>\r\n                        </div>\r\n                        <Separator />\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"font-medium\">Total Amount</div>\r\n                            <div className=\"font-semibold\">{formatPrice(order.total)}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {order.shippingAddress && (\r\n                        <div className=\"mt-6 rounded-lg border p-4\">\r\n                            <h4 className=\"mb-2 flex items-center gap-2 font-medium\">\r\n                                <MapPinIcon className=\"h-4 w-4\" /> Shipping Address\r\n                            </h4>\r\n                            <div className=\"text-sm text-muted-foreground\">\r\n                                <p>{order.shippingAddress.street}</p>\r\n                                <p>\r\n                                    {order.shippingAddress.city}, {order.shippingAddress.state} {order.shippingAddress.zipCode}\r\n                                </p>\r\n                                <p>{order.shippingAddress.country}</p>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {order.notes && (\r\n                        <div className=\"mt-4 rounded-lg border p-4\">\r\n                            <h4 className=\"mb-2 font-medium\">Order Notes</h4>\r\n                            <p className=\"text-sm text-muted-foreground\">{order.notes}</p>\r\n                        </div>\r\n                    )}\r\n                </TabsContent>\r\n\r\n                <TabsContent value=\"items\" className=\"pt-4\">\r\n                    {order.orderItems && order.orderItems.length > 0 ? (\r\n                        <div className=\"rounded-md border\">\r\n                            <Table>\r\n                                <TableHeader>\r\n                                    <TableRow>\r\n                                        <TableHead>Item</TableHead>\r\n                                        <TableHead className=\"text-right\">Qty</TableHead>\r\n                                        <TableHead className=\"text-right\">Price</TableHead>\r\n                                        <TableHead className=\"text-right\">Total</TableHead>\r\n                                    </TableRow>\r\n                                </TableHeader>\r\n                                <TableBody>\r\n                                    {order.orderItems.map((item) => (\r\n                                        <TableRow key={item.id}>\r\n                                            <TableCell>{item.name}</TableCell>\r\n                                            <TableCell className=\"text-right\">{item.quantity}</TableCell>\r\n                                            <TableCell className=\"text-right\">{formatPrice(item.price)}</TableCell>\r\n                                            <TableCell className=\"text-right\">{formatPrice(item.total)}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"flex h-[200px] items-center justify-center rounded-md border border-dashed\">\r\n                            <p className=\"text-sm text-muted-foreground\">No items available</p>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"mt-4 space-y-2 text-right\">\r\n                        <div className=\"flex justify-between text-sm\">\r\n                            <span>Subtotal:</span>\r\n                            <span>{formatPrice(order.total * 0.9)}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between text-sm\">\r\n                            <span>Tax:</span>\r\n                            <span>{formatPrice(order.total * 0.1)}</span>\r\n                        </div>\r\n                        <Separator />\r\n                        <div className=\"flex justify-between font-medium\">\r\n                            <span>Total:</span>\r\n                            <span>{formatPrice(order.total)}</span>\r\n                        </div>\r\n                    </div>\r\n                </TabsContent>\r\n\r\n                <TabsContent value=\"customer\" className=\"space-y-4 pt-4\">\r\n                    {order.customerDetails ? (\r\n                        <div className=\"space-y-4\">\r\n                            <div className=\"flex items-center gap-4\">\r\n                                <div className=\"flex h-12 w-12 items-center justify-center rounded-full bg-muted\">\r\n                                    <UserIcon className=\"h-6 w-6 text-muted-foreground\" />\r\n                                </div>\r\n                                <div>\r\n                                    <h4 className=\"font-medium\">{order.customerDetails.name}</h4>\r\n                                    <p className=\"text-sm text-muted-foreground\">Customer</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"grid gap-2\">\r\n                                <div className=\"flex items-center gap-2 text-sm\">\r\n                                    <MailIcon className=\"h-4 w-4 text-muted-foreground\" />\r\n                                    <span>{order.customerDetails.email}</span>\r\n                                </div>\r\n                                {order.customerDetails.phone && (\r\n                                    <div className=\"flex items-center gap-2 text-sm\">\r\n                                        <PhoneIcon className=\"h-4 w-4 text-muted-foreground\" />\r\n                                        <span>{order.customerDetails.phone}</span>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {order.billingAddress && (\r\n                                <div className=\"mt-4 rounded-lg border p-4\">\r\n                                    <h4 className=\"mb-2 flex items-center gap-2 font-medium\">\r\n                                        <HomeIcon className=\"h-4 w-4\" /> Billing Address\r\n                                    </h4>\r\n                                    <div className=\"text-sm text-muted-foreground\">\r\n                                        <p>{order.billingAddress.street}</p>\r\n                                        <p>\r\n                                            {order.billingAddress.city}, {order.billingAddress.state} {order.billingAddress.zipCode}\r\n                                        </p>\r\n                                        <p>{order.billingAddress.country}</p>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"flex h-[200px] items-center justify-center rounded-md border border-dashed\">\r\n                            <p className=\"text-sm text-muted-foreground\">No customer details available</p>\r\n                        </div>\r\n                    )}\r\n                </TabsContent>\r\n            </Tabs>\r\n\r\n            <SheetFooter className=\"mt-6\">\r\n                <SheetClose asChild>\r\n                    <Button variant=\"outline\" onClick={onClose}>\r\n                        Close\r\n                    </Button>\r\n                </SheetClose>\r\n            </SheetFooter>\r\n        </SheetContent>\r\n    )\r\n}\r\n\r\nfunction UpdateStatusDialog({\r\n    order,\r\n    isOpen,\r\n    onClose,\r\n    onUpdateStatus,\r\n}: {\r\n    order: z.infer<typeof orderSchema> | null\r\n    isOpen: boolean\r\n    onClose: () => void\r\n    onUpdateStatus: (orderId: number, newStatus: string) => void\r\n}) {\r\n    const [status, setStatus] = React.useState<string>(order?.status || \"\")\r\n\r\n    React.useEffect(() => {\r\n        if (order) {\r\n            setStatus(order.status)\r\n        }\r\n    }, [order])\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n        if (order) {\r\n            onUpdateStatus(order.id, status)\r\n            onClose()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog open={isOpen} onOpenChange={(open) => !open && onClose()}>\r\n            <DialogContent className=\"sm:max-w-md\">\r\n                <DialogHeader>\r\n                    <DialogTitle>Update Order Status</DialogTitle>\r\n                    <DialogDescription>\r\n                        Change the status for order #{order?.orderNumber}. This will be reflected immediately.\r\n                    </DialogDescription>\r\n                </DialogHeader>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"grid gap-4 py-4\">\r\n                        <div className=\"grid gap-2\">\r\n                            <Label htmlFor=\"status\">Status</Label>\r\n                            <Select value={status} onValueChange={setStatus}>\r\n                                <SelectTrigger id=\"status\">\r\n                                    <SelectValue placeholder=\"Select new status\" />\r\n                                </SelectTrigger>\r\n                                <SelectContent>\r\n                                    <SelectItem value=\"Processing\">Processing</SelectItem>\r\n                                    <SelectItem value=\"Shipped\">Shipped</SelectItem>\r\n                                    <SelectItem value=\"Completed\">Completed</SelectItem>\r\n                                    <SelectItem value=\"Cancelled\">Cancelled</SelectItem>\r\n                                </SelectContent>\r\n                            </Select>\r\n                        </div>\r\n                        <div className=\"grid gap-2\">\r\n                            <Label htmlFor=\"notes\">Notes (Optional)</Label>\r\n                            <Input id=\"notes\" placeholder=\"Add notes about this status change\" />\r\n                        </div>\r\n                    </div>\r\n                    <DialogFooter>\r\n                        <Button type=\"button\" variant=\"outline\" onClick={onClose}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type=\"submit\">Update Status</Button>\r\n                    </DialogFooter>\r\n                </form>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nfunction DraggableRow({ row }: { row: Row<z.infer<typeof orderSchema>> }) {\r\n    const { transform, transition, setNodeRef, isDragging } = useSortable({\r\n        id: row.original.id,\r\n    })\r\n\r\n    return (\r\n        <TableRow\r\n            data-state={row.getIsSelected() && \"selected\"}\r\n            data-dragging={isDragging}\r\n            ref={setNodeRef}\r\n            className=\"relative z-0 data-[dragging=true]:z-10 data-[dragging=true]:opacity-80\"\r\n            style={{\r\n                transform: CSS.Transform.toString(transform),\r\n                transition: transition,\r\n            }}\r\n        >\r\n            {row.getVisibleCells().map((cell) => (\r\n                <TableCell key={cell.id}>{flexRender(cell.column.columnDef.cell, cell.getContext())}</TableCell>\r\n            ))}\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport function OrdersTable({\r\n    data: initialData,\r\n}: {\r\n    data: z.infer<typeof orderSchema>[]\r\n}) {\r\n    // Create a mutable copy of initialData to work with\r\n    const [allOrders, setAllOrders] = React.useState(() => [...initialData])\r\n    const [data, setData] = React.useState(() => [...initialData])\r\n    const [rowSelection, setRowSelection] = React.useState({})\r\n    const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({})\r\n    const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([])\r\n    const [sorting, setSorting] = React.useState<SortingState>([])\r\n    const [pagination, setPagination] = React.useState({\r\n        pageIndex: 0,\r\n        pageSize: 10,\r\n    })\r\n    const [searchQuery, setSearchQuery] = React.useState(\"\")\r\n    const [statusFilter, setStatusFilter] = React.useState(\"all\")\r\n    const [dateFilter, setDateFilter] = React.useState(\"all\")\r\n    const [selectedOrder, setSelectedOrder] = React.useState<z.infer<typeof orderSchema> | null>(null)\r\n    const [isUpdateStatusOpen, setIsUpdateStatusOpen] = React.useState(false)\r\n    const [isOrderDetailsOpen, setIsOrderDetailsOpen] = React.useState(false)\r\n    const sortableId = React.useId()\r\n    const sensors = useSensors(useSensor(MouseSensor, {}), useSensor(TouchSensor, {}), useSensor(KeyboardSensor, {}))\r\n\r\n    const dataIds = React.useMemo<UniqueIdentifier[]>(() => data?.map(({ id }) => id) || [], [data])\r\n    const columns = React.useMemo<ColumnDef<z.infer<typeof orderSchema>>[]>(\r\n        () => [\r\n            {\r\n                id: \"drag\",\r\n                header: () => null,\r\n                cell: ({ row }) => <DragHandle id={row.original.id} />,\r\n            },\r\n            {\r\n                id: \"select\",\r\n                header: ({ table }) => (\r\n                    <div className=\"flex items-center justify-center\">\r\n                        <Checkbox\r\n                            checked={table.getIsAllPageRowsSelected() || (table.getIsSomePageRowsSelected() && \"indeterminate\")}\r\n                            onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\r\n                            aria-label=\"Select all\"\r\n                        />\r\n                    </div>\r\n                ),\r\n                cell: ({ row }) => (\r\n                    <div className=\"flex items-center justify-center\">\r\n                        <Checkbox\r\n                            checked={row.getIsSelected()}\r\n                            onCheckedChange={(value) => row.toggleSelected(!!value)}\r\n                            aria-label=\"Select row\"\r\n                        />\r\n                    </div>\r\n                ),\r\n                enableSorting: false,\r\n                enableHiding: false,\r\n            },\r\n            {\r\n                accessorKey: \"orderNumber\",\r\n                header: \"Order #\",\r\n                cell: ({ row }) => {\r\n                    return (\r\n                        <Button\r\n                            variant=\"link\"\r\n                            className=\"p-0 font-medium text-foreground\"\r\n                            onClick={() => handleViewOrderDetails(row.original)}\r\n                        >\r\n                            {row.original.orderNumber}\r\n                        </Button>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                accessorKey: \"customer\",\r\n                header: \"Customer\",\r\n                cell: ({ row }) => <div>{row.original.customer}</div>,\r\n            },\r\n            {\r\n                accessorKey: \"date\",\r\n                header: \"Date\",\r\n                cell: ({ row }) => {\r\n                    const date = new Date(row.original.date)\r\n                    return (\r\n                        <div className=\"text-muted-foreground\">\r\n                            {date.toLocaleDateString(\"en-US\", {\r\n                                month: \"short\",\r\n                                day: \"numeric\",\r\n                                year: \"numeric\",\r\n                            })}\r\n                        </div>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                accessorKey: \"status\",\r\n                header: \"Status\",\r\n                cell: ({ row }) => (\r\n                    <Badge\r\n                        variant=\"outline\"\r\n                        className={`flex gap-1 px-1.5 ${getStatusColor(row.original.status)} [&_svg]:size-3`}\r\n                    >\r\n                        {getStatusIcon(row.original.status)}\r\n                        {row.original.status}\r\n                    </Badge>\r\n                ),\r\n            },\r\n            {\r\n                accessorKey: \"total\",\r\n                header: () => <div className=\"text-right\">Total</div>,\r\n                cell: ({ row }) => <div className=\"text-right font-medium\">{formatPrice(row.original.total)}</div>,\r\n            },\r\n            {\r\n                accessorKey: \"items\",\r\n                header: () => <div className=\"text-center\">Items</div>,\r\n                cell: ({ row }) => <div className=\"text-center\">{row.original.items}</div>,\r\n            },\r\n            {\r\n                accessorKey: \"paymentMethod\",\r\n                header: \"Payment\",\r\n                cell: ({ row }) => <div>{row.original.paymentMethod}</div>,\r\n            },\r\n            {\r\n                id: \"actions\",\r\n                cell: ({ row }) => (\r\n                    <DropdownMenu>\r\n                        <DropdownMenuTrigger asChild>\r\n                            <Button\r\n                                variant=\"ghost\"\r\n                                className=\"flex size-8 text-muted-foreground data-[state=open]:bg-muted\"\r\n                                size=\"icon\"\r\n                            >\r\n                                <MoreVerticalIcon />\r\n                                <span className=\"sr-only\">Open menu</span>\r\n                            </Button>\r\n                        </DropdownMenuTrigger>\r\n                        <DropdownMenuContent align=\"end\" className=\"w-40\">\r\n                            <DropdownMenuItem onClick={() => handleViewOrderDetails(row.original)}>View details</DropdownMenuItem>\r\n                            <DropdownMenuItem onClick={() => handleUpdateStatus(row.original)}>Update status</DropdownMenuItem>\r\n                            <DropdownMenuItem>Contact customer</DropdownMenuItem>\r\n                            <DropdownMenuSeparator />\r\n                            <DropdownMenuItem\r\n                                className=\"text-red-500 dark:text-red-400\"\r\n                                onClick={() => handleQuickStatusUpdate(row.original.id, \"Cancelled\")}\r\n                            >\r\n                                Cancel order\r\n                            </DropdownMenuItem>\r\n                        </DropdownMenuContent>\r\n                    </DropdownMenu>\r\n                ),\r\n            },\r\n        ],\r\n        [],\r\n    )\r\n\r\n    // Apply filters when search query, status filter, or date filter changes\r\n    React.useEffect(() => {\r\n        const filteredData = allOrders.filter((order) => {\r\n            const matchesSearch =\r\n                searchQuery === \"\" ||\r\n                order.orderNumber.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                order.customer.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                order.paymentMethod.toLowerCase().includes(searchQuery.toLowerCase())\r\n\r\n            const matchesStatus = statusFilter === \"all\" || order.status.toLowerCase() === statusFilter.toLowerCase()\r\n\r\n            let matchesDate = true\r\n            const orderDate = new Date(order.date)\r\n            const today = new Date()\r\n            today.setHours(0, 0, 0, 0)\r\n\r\n            if (dateFilter === \"today\") {\r\n                const todayString = today.toISOString().split(\"T\")[0]\r\n                matchesDate = order.date === todayString\r\n            } else if (dateFilter === \"yesterday\") {\r\n                const yesterday = new Date(today)\r\n                yesterday.setDate(yesterday.getDate() - 1)\r\n                const yesterdayString = yesterday.toISOString().split(\"T\")[0]\r\n                matchesDate = order.date === yesterdayString\r\n            } else if (dateFilter === \"week\") {\r\n                const weekAgo = new Date(today)\r\n                weekAgo.setDate(weekAgo.getDate() - 7)\r\n                matchesDate = orderDate >= weekAgo\r\n            }\r\n\r\n            return matchesSearch && matchesStatus && matchesDate\r\n        })\r\n\r\n        setData(filteredData)\r\n    }, [searchQuery, statusFilter, dateFilter, allOrders])\r\n\r\n    const handleViewOrderDetails = (order: z.infer<typeof orderSchema>) => {\r\n        setSelectedOrder(order)\r\n        setIsOrderDetailsOpen(true)\r\n    }\r\n\r\n    const handleUpdateStatus = (order: z.infer<typeof orderSchema>) => {\r\n        setSelectedOrder(order)\r\n        setIsUpdateStatusOpen(true)\r\n    }\r\n\r\n    const handleQuickStatusUpdate = (orderId: number, newStatus: string) => {\r\n        updateOrderStatus(orderId, newStatus)\r\n    }\r\n\r\n    const updateOrderStatus = (orderId: number, newStatus: string) => {\r\n        // Update both the filtered data and the full data set\r\n        setData((prevData) =>\r\n            prevData.map((order) => {\r\n                if (order.id === orderId) {\r\n                    return { ...order, status: newStatus }\r\n                }\r\n                return order\r\n            }),\r\n        )\r\n\r\n        // Update the allOrders state instead of mutating initialData\r\n        setAllOrders((prevOrders) =>\r\n            prevOrders.map((order) => {\r\n                if (order.id === orderId) {\r\n                    return { ...order, status: newStatus }\r\n                }\r\n                return order\r\n            }),\r\n        )\r\n\r\n        // Find the order to show in the toast notification\r\n        const orderToUpdate = allOrders.find((order) => order.id === orderId)\r\n\r\n        if (orderToUpdate) {\r\n            toast.success(\"Order status updated\", {\r\n                description: `Order #${orderToUpdate.orderNumber} is now ${newStatus}`,\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleDragEnd(event: DragEndEvent) {\r\n        const { active, over } = event\r\n        if (active && over && active.id !== over.id) {\r\n            setData((data) => {\r\n                const oldIndex = dataIds.indexOf(active.id)\r\n                const newIndex = dataIds.indexOf(over.id)\r\n                return arrayMove(data, oldIndex, newIndex)\r\n            })\r\n        }\r\n    }\r\n\r\n    const table = useReactTable({\r\n        data,\r\n        columns,\r\n        getCoreRowModel: getCoreRowModel(),\r\n        getPaginationRowModel: getPaginationRowModel(),\r\n        getSortedRowModel: getSortedRowModel(),\r\n        getFilteredRowModel: getFilteredRowModel(),\r\n        getFacetedRowModel: getFacetedRowModel(),\r\n        getFacetedUniqueValues: getFacetedUniqueValues(),\r\n        onColumnVisibilityChange: setColumnVisibility,\r\n        onColumnFiltersChange: setColumnFilters,\r\n        onSortingChange: setSorting,\r\n        onRowSelectionChange: setRowSelection,\r\n        onPaginationChange: setPagination,\r\n        state: {\r\n            columnVisibility,\r\n            columnFilters,\r\n            sorting,\r\n            rowSelection,\r\n            pagination,\r\n        },\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex w-full flex-col justify-start gap-6\">\r\n                <div className=\"flex flex-col gap-4 sm:flex-row sm:items-center sm:justify-between\">\r\n                    <div className=\"relative w-full max-w-sm\">\r\n                        <SearchIcon className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\r\n                        <Input\r\n                            type=\"search\"\r\n                            placeholder=\"Search by order ID, customer name..,.\"\r\n                            className=\"pl-8\"\r\n                            value={searchQuery}\r\n                            onChange={(e) => setSearchQuery(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <DropdownMenu>\r\n                            <DropdownMenuTrigger asChild>\r\n                                <Button variant=\"outline\" size=\"sm\" className=\"h-8 gap-1\">\r\n                                    <FilterIcon className=\"h-3.5 w-3.5\" />\r\n                                    <span>Filter</span>\r\n                                    <ChevronDownIcon className=\"h-3.5 w-3.5\" />\r\n                                </Button>\r\n                            </DropdownMenuTrigger>\r\n                            <DropdownMenuContent align=\"end\" className=\"w-56\">\r\n                                <div className=\"p-2\">\r\n                                    <p className=\"mb-2 text-sm font-medium\">Status</p>\r\n                                    <Select value={statusFilter} onValueChange={setStatusFilter}>\r\n                                        <SelectTrigger className=\"w-full\">\r\n                                            <SelectValue placeholder=\"Filter by status\" />\r\n                                        </SelectTrigger>\r\n                                        <SelectContent>\r\n                                            <SelectItem value=\"all\">All Statuses</SelectItem>\r\n                                            <SelectItem value=\"completed\">Completed</SelectItem>\r\n                                            <SelectItem value=\"processing\">Processing</SelectItem>\r\n                                            <SelectItem value=\"shipped\">Shipped</SelectItem>\r\n                                            <SelectItem value=\"cancelled\">Cancelled</SelectItem>\r\n                                        </SelectContent>\r\n                                    </Select>\r\n                                </div>\r\n                                <DropdownMenuSeparator />\r\n                                <div className=\"p-2\">\r\n                                    <p className=\"mb-2 text-sm font-medium\">Date</p>\r\n                                    <Select value={dateFilter} onValueChange={setDateFilter}>\r\n                                        <SelectTrigger className=\"w-full\">\r\n                                            <SelectValue placeholder=\"Filter by date\" />\r\n                                        </SelectTrigger>\r\n                                        <SelectContent>\r\n                                            <SelectItem value=\"all\">All Time</SelectItem>\r\n                                            <SelectItem value=\"today\">Today</SelectItem>\r\n                                            <SelectItem value=\"yesterday\">Yesterday</SelectItem>\r\n                                            <SelectItem value=\"week\">Last 7 days</SelectItem>\r\n                                        </SelectContent>\r\n                                    </Select>\r\n                                </div>\r\n                            </DropdownMenuContent>\r\n                        </DropdownMenu>\r\n                        <DropdownMenu>\r\n                            <DropdownMenuTrigger asChild>\r\n                                <Button variant=\"outline\" size=\"sm\" className=\"h-8 gap-1\">\r\n                                    <ColumnsIcon className=\"h-3.5 w-3.5\" />\r\n                                    <span className=\"hidden sm:inline\">Columns</span>\r\n                                    <ChevronDownIcon className=\"h-3.5 w-3.5\" />\r\n                                </Button>\r\n                            </DropdownMenuTrigger>\r\n                            <DropdownMenuContent align=\"end\" className=\"w-56\">\r\n                                {table\r\n                                    .getAllColumns()\r\n                                    .filter((column) => typeof column.accessorFn !== \"undefined\" && column.getCanHide())\r\n                                    .map((column) => {\r\n                                        return (\r\n                                            <DropdownMenuCheckboxItem\r\n                                                key={column.id}\r\n                                                className=\"capitalize\"\r\n                                                checked={column.getIsVisible()}\r\n                                                onCheckedChange={(value) => column.toggleVisibility(!!value)}\r\n                                            >\r\n                                                {column.id}\r\n                                            </DropdownMenuCheckboxItem>\r\n                                        )\r\n                                    })}\r\n                            </DropdownMenuContent>\r\n                        </DropdownMenu>\r\n                        <Button variant=\"outline\" size=\"sm\" className=\"h-8 gap-1\">\r\n                            <PlusIcon className=\"h-3.5 w-3.5\" />\r\n                            <span className=\"hidden sm:inline\">New Order</span>\r\n                            <span className=\"sm:hidden\">New</span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"relative flex flex-col gap-4 overflow-auto\">\r\n                    <div className=\"overflow-hidden rounded-lg border\">\r\n                        <DndContext\r\n                            collisionDetection={closestCenter}\r\n                            modifiers={[restrictToVerticalAxis]}\r\n                            onDragEnd={handleDragEnd}\r\n                            sensors={sensors}\r\n                            id={sortableId}\r\n                        >\r\n                            <div className=\"overflow-auto custom-scrollbar\">\r\n                                <div className=\"flex items-center\">\r\n                                    <Table>\r\n                                        <TableHeader className=\"sticky top-0 z-10 bg-muted\">\r\n                                            {table.getHeaderGroups().map((headerGroup) => (\r\n                                                <TableRow key={headerGroup.id}>\r\n                                                    {headerGroup.headers.map((header) => {\r\n                                                        return (\r\n                                                            <TableHead key={header.id} colSpan={header.colSpan}>\r\n                                                                {header.isPlaceholder\r\n                                                                    ? null\r\n                                                                    : flexRender(header.column.columnDef.header, header.getContext())}\r\n                                                            </TableHead>\r\n                                                        )\r\n                                                    })}\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableHeader>\r\n                                        <TableBody className=\"**:data-[slot=table-cell]:first:w-8\">\r\n                                            {table.getRowModel().rows?.length ? (\r\n                                                <SortableContext items={dataIds} strategy={verticalListSortingStrategy}>\r\n                                                    {table.getRowModel().rows.map((row) => (\r\n                                                        <DraggableRow key={row.id} row={row} />\r\n                                                    ))}\r\n                                                </SortableContext>\r\n                                            ) : (\r\n                                                <TableRow>\r\n                                                    <TableCell colSpan={columns.length} className=\"h-24 text-center\">\r\n                                                        No orders found.\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            )}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </div>\r\n                            </div>\r\n                        </DndContext>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between px-4\">\r\n                        <div className=\"hidden flex-1 text-sm text-muted-foreground lg:flex\">\r\n                            {table.getFilteredSelectedRowModel().rows.length} of {table.getFilteredRowModel().rows.length} order(s)\r\n                            selected.\r\n                        </div>\r\n                        <div className=\"flex w-full items-center gap-8 lg:w-fit\">\r\n                            <div className=\"hidden items-center gap-2 lg:flex\">\r\n                                <Select\r\n                                    value={`${table.getState().pagination.pageSize}`}\r\n                                    onValueChange={(value) => {\r\n                                        table.setPageSize(Number(value))\r\n                                    }}\r\n                                >\r\n                                    <SelectTrigger className=\"w-20\" id=\"rows-per-page\">\r\n                                        <SelectValue placeholder={table.getState().pagination.pageSize} />\r\n                                    </SelectTrigger>\r\n                                    <SelectContent side=\"top\">\r\n                                        {[10, 20, 30, 40, 50].map((pageSize) => (\r\n                                            <SelectItem key={pageSize} value={`${pageSize}`}>\r\n                                                {pageSize}\r\n                                            </SelectItem>\r\n                                        ))}\r\n                                    </SelectContent>\r\n                                </Select>\r\n                                <span className=\"text-sm text-muted-foreground\">per page</span>\r\n                            </div>\r\n                            <div className=\"flex w-fit items-center justify-center text-sm font-medium\">\r\n                                Page {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\r\n                            </div>\r\n                            <div className=\"ml-auto flex items-center gap-2 lg:ml-0\">\r\n                                <Button\r\n                                    variant=\"outline\"\r\n                                    className=\"hidden h-8 w-8 p-0 lg:flex\"\r\n                                    onClick={() => table.setPageIndex(0)}\r\n                                    disabled={!table.getCanPreviousPage()}\r\n                                >\r\n                                    <span className=\"sr-only\">Go to first page</span>\r\n                                    <ChevronsLeftIcon />\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"outline\"\r\n                                    className=\"size-8\"\r\n                                    size=\"icon\"\r\n                                    onClick={() => table.previousPage()}\r\n                                    disabled={!table.getCanPreviousPage()}\r\n                                >\r\n                                    <span className=\"sr-only\">Go to previous page</span>\r\n                                    <ChevronLeftIcon />\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"outline\"\r\n                                    className=\"size-8\"\r\n                                    size=\"icon\"\r\n                                    onClick={() => table.nextPage()}\r\n                                    disabled={!table.getCanNextPage()}\r\n                                >\r\n                                    <span className=\"sr-only\">Go to next page</span>\r\n                                    <ChevronRightIcon />\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"outline\"\r\n                                    className=\"hidden size-8 lg:flex\"\r\n                                    size=\"icon\"\r\n                                    onClick={() => table.setPageIndex(table.getPageCount() - 1)}\r\n                                    disabled={!table.getCanNextPage()}\r\n                                >\r\n                                    <span className=\"sr-only\">Go to last page</span>\r\n                                    <ChevronsRightIcon />\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Sheet open={isOrderDetailsOpen} onOpenChange={setIsOrderDetailsOpen}>\r\n                {selectedOrder && <OrderDetails order={selectedOrder} onClose={() => setIsOrderDetailsOpen(false)} />}\r\n            </Sheet>\r\n            <UpdateStatusDialog\r\n                order={selectedOrder}\r\n                isOpen={isUpdateStatusOpen}\r\n                onClose={() => setIsUpdateStatusOpen(false)}\r\n                onUpdateStatus={updateOrderStatus}\r\n            />\r\n        </>\r\n    )\r\n}\r\n",
        "language": "tsx"
      },
      "@/registry/view/orders-page-3/components/sidebar": {
        "content": "\"use client\"\r\n\r\nimport {\r\n    Sidebar,\r\n    SidebarContent,\r\n    SidebarFooter,\r\n    SidebarHeader,\r\n    SidebarMenu,\r\n    SidebarMenuButton,\r\n    SidebarMenuItem,\r\n} from \"@/components/ui/sidebar\"\r\nimport {\r\n    ArrowUpCircleIcon,\r\n    BarChartIcon,\r\n    CameraIcon,\r\n    ClipboardListIcon,\r\n    DatabaseIcon,\r\n    FileCodeIcon,\r\n    FileIcon,\r\n    FileTextIcon,\r\n    FolderIcon,\r\n    HelpCircleIcon,\r\n    LayoutDashboardIcon,\r\n    ListIcon,\r\n    Package2,\r\n    SearchIcon,\r\n    SettingsIcon,\r\n    UsersIcon,\r\n} from \"lucide-react\"\r\nimport Link from \"next/link\"\r\nimport * as React from \"react\"\r\nimport { NavMain } from \"../../dashboard-2/components/nav-main\"\r\nimport { NavDocuments } from \"./nav-documents\"\r\nimport { NavSecondary } from \"./nav-secondary\"\r\nimport { NavUser } from \"./nav-user\"\r\n\r\nconst data = {\r\n    user: {\r\n        name: \"john\",\r\n        email: \"john@example.com\",\r\n        avatar: \"/avatars/shadcn.jpg\",\r\n    },\r\n    navMain: [\r\n        {\r\n            title: \"Dashboard\",\r\n            url: \"#\",\r\n            icon: LayoutDashboardIcon,\r\n        },\r\n        {\r\n            title: \"Orders\",\r\n            url: \"#\",\r\n            icon: Package2,\r\n        },\r\n        {\r\n            title: \"Lifecycle\",\r\n            url: \"#\",\r\n            icon: ListIcon,\r\n        },\r\n        {\r\n            title: \"Analytics\",\r\n            url: \"#\",\r\n            icon: BarChartIcon,\r\n        },\r\n        {\r\n            title: \"Projects\",\r\n            url: \"#\",\r\n            icon: FolderIcon,\r\n        },\r\n        {\r\n            title: \"Team\",\r\n            url: \"#\",\r\n            icon: UsersIcon,\r\n        },\r\n    ],\r\n    navClouds: [\r\n        {\r\n            title: \"Capture\",\r\n            icon: CameraIcon,\r\n            isActive: true,\r\n            url: \"#\",\r\n            items: [\r\n                {\r\n                    title: \"Active Proposals\",\r\n                    url: \"#\",\r\n                },\r\n                {\r\n                    title: \"Archived\",\r\n                    url: \"#\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            title: \"Proposal\",\r\n            icon: FileTextIcon,\r\n            url: \"#\",\r\n            items: [\r\n                {\r\n                    title: \"Active Proposals\",\r\n                    url: \"#\",\r\n                },\r\n                {\r\n                    title: \"Archived\",\r\n                    url: \"#\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            title: \"Prompts\",\r\n            icon: FileCodeIcon,\r\n            url: \"#\",\r\n            items: [\r\n                {\r\n                    title: \"Active Proposals\",\r\n                    url: \"#\",\r\n                },\r\n                {\r\n                    title: \"Archived\",\r\n                    url: \"#\",\r\n                },\r\n            ],\r\n        },\r\n    ],\r\n    navSecondary: [\r\n        {\r\n            title: \"Settings\",\r\n            url: \"#\",\r\n            icon: SettingsIcon,\r\n        },\r\n        {\r\n            title: \"Get Help\",\r\n            url: \"#\",\r\n            icon: HelpCircleIcon,\r\n        },\r\n        {\r\n            title: \"Search\",\r\n            url: \"#\",\r\n            icon: SearchIcon,\r\n        },\r\n    ],\r\n    documents: [\r\n        {\r\n            name: \"Data Library\",\r\n            url: \"#\",\r\n            icon: DatabaseIcon,\r\n        },\r\n        {\r\n            name: \"Reports\",\r\n            url: \"#\",\r\n            icon: ClipboardListIcon,\r\n        },\r\n        {\r\n            name: \"Word Assistant\",\r\n            url: \"#\",\r\n            icon: FileIcon,\r\n        },\r\n    ],\r\n}\r\n\r\nexport function OrdersSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\r\n    return (\r\n        <Sidebar collapsible=\"offcanvas\" {...props}>\r\n            <SidebarHeader>\r\n                <SidebarMenu>\r\n                    <SidebarMenuItem>\r\n                        <SidebarMenuButton\r\n                            asChild\r\n                            className=\"data-[slot=sidebar-menu-button]:!p-1.5\"\r\n                        >\r\n                            <Link href=\"#\">\r\n                                <ArrowUpCircleIcon className=\"h-5 w-5\" />\r\n                                <span className=\"text-base font-semibold\">Acme Inc.</span>\r\n                            </Link>\r\n                        </SidebarMenuButton>\r\n                    </SidebarMenuItem>\r\n                </SidebarMenu>\r\n            </SidebarHeader>\r\n            <SidebarContent className=\"hide-scrollbar\">\r\n                <NavMain items={data.navMain} />\r\n                <NavDocuments items={data.documents} />\r\n                <NavSecondary items={data.navSecondary} className=\"mt-auto\" />\r\n            </SidebarContent>\r\n            <SidebarFooter>\r\n                <NavUser user={data.user} />\r\n            </SidebarFooter>\r\n        </Sidebar>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {
      "@/registry/view/orders-page-3/constant/data.json": {
        "content": "[\r\n    {\r\n        \"id\": 1,\r\n        \"orderNumber\": \"ORD-2024-001\",\r\n        \"customer\": \"John Smith\",\r\n        \"date\": \"2024-06-28\",\r\n        \"status\": \"Completed\",\r\n        \"total\": 129.99,\r\n        \"items\": 3,\r\n        \"paymentMethod\": \"Credit Card\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"orderNumber\": \"ORD-2024-002\",\r\n        \"customer\": \"Sarah Johnson\",\r\n        \"date\": \"2024-06-27\",\r\n        \"status\": \"Processing\",\r\n        \"total\": 79.5,\r\n        \"items\": 2,\r\n        \"paymentMethod\": \"PayPal\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"orderNumber\": \"ORD-2024-003\",\r\n        \"customer\": \"Michael Brown\",\r\n        \"date\": \"2024-06-26\",\r\n        \"status\": \"Shipped\",\r\n        \"total\": 245.75,\r\n        \"items\": 5,\r\n        \"paymentMethod\": \"Credit Card\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"orderNumber\": \"ORD-2024-004\",\r\n        \"customer\": \"Emily Davis\",\r\n        \"date\": \"2024-06-25\",\r\n        \"status\": \"Completed\",\r\n        \"total\": 59.99,\r\n        \"items\": 1,\r\n        \"paymentMethod\": \"Credit Card\"\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"orderNumber\": \"ORD-2024-005\",\r\n        \"customer\": \"Robert Wilson\",\r\n        \"date\": \"2024-06-24\",\r\n        \"status\": \"Cancelled\",\r\n        \"total\": 189.95,\r\n        \"items\": 4,\r\n        \"paymentMethod\": \"PayPal\"\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"orderNumber\": \"ORD-2024-006\",\r\n        \"customer\": \"Jennifer Taylor\",\r\n        \"date\": \"2024-06-23\",\r\n        \"status\": \"Processing\",\r\n        \"total\": 149.99,\r\n        \"items\": 3,\r\n        \"paymentMethod\": \"Credit Card\"\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"orderNumber\": \"ORD-2024-007\",\r\n        \"customer\": \"David Martinez\",\r\n        \"date\": \"2024-06-22\",\r\n        \"status\": \"Shipped\",\r\n        \"total\": 99.5,\r\n        \"items\": 2,\r\n        \"paymentMethod\": \"PayPal\"\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"orderNumber\": \"ORD-2024-008\",\r\n        \"customer\": \"Lisa Anderson\",\r\n        \"date\": \"2024-06-21\",\r\n        \"status\": \"Completed\",\r\n        \"total\": 299.99,\r\n        \"items\": 6,\r\n        \"paymentMethod\": \"Credit Card\"\r\n    },\r\n    {\r\n        \"id\": 9,\r\n        \"orderNumber\": \"ORD-2024-009\",\r\n        \"customer\": \"James Thomas\",\r\n        \"date\": \"2024-06-20\",\r\n        \"status\": \"Processing\",\r\n        \"total\": 49.95,\r\n        \"items\": 1,\r\n        \"paymentMethod\": \"PayPal\"\r\n    },\r\n    {\r\n        \"id\": 10,\r\n        \"orderNumber\": \"ORD-2024-010\",\r\n        \"customer\": \"Patricia White\",\r\n        \"date\": \"2024-06-19\",\r\n        \"status\": \"Shipped\",\r\n        \"total\": 179.99,\r\n        \"items\": 4,\r\n        \"paymentMethod\": \"Credit Card\"\r\n    },\r\n    {\r\n        \"id\": 11,\r\n        \"orderNumber\": \"ORD-2024-011\",\r\n        \"customer\": \"Richard Harris\",\r\n        \"date\": \"2024-06-18\",\r\n        \"status\": \"Completed\",\r\n        \"total\": 89.95,\r\n        \"items\": 2,\r\n        \"paymentMethod\": \"PayPal\"\r\n    },\r\n    {\r\n        \"id\": 12,\r\n        \"orderNumber\": \"ORD-2024-012\",\r\n        \"customer\": \"Elizabeth Clark\",\r\n        \"date\": \"2024-06-17\",\r\n        \"status\": \"Cancelled\",\r\n        \"total\": 159.99,\r\n        \"items\": 3,\r\n        \"paymentMethod\": \"Credit Card\"\r\n    }\r\n]",
        "language": "json"
      }
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/orders-page-3/page": {
      "content": "import { SidebarInset, SidebarProvider } from \"@/components/ui/sidebar\"\r\nimport { Header } from \"./components/header\"\r\nimport { OrdersCards } from \"./components/orders-cards\"\r\nimport { OrdersChart } from \"./components/orders-chart\"\r\nimport { OrdersTable } from \"./components/orders-table\"\r\nimport { OrdersSidebar } from \"./components/sidebar\"\r\nimport ordersData from \"./constant/data.json\"\r\n\r\nexport default function OrdersPage() {\r\n    return (\r\n        <SidebarProvider>\r\n            <OrdersSidebar variant=\"inset\" />\r\n            <SidebarInset>\r\n                <Header />\r\n                <div className=\"flex flex-1 flex-col px-4 lg:px-6\">\r\n                    <div className=\"flex flex-1 flex-col gap-2\">\r\n                        <div className=\"flex flex-col gap-4 py-4 md:gap-6 md:py-6\">\r\n                            <OrdersCards />\r\n                            <div>\r\n                                <OrdersChart />\r\n                            </div>\r\n                            <OrdersTable data={ordersData} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </SidebarInset>\r\n        </SidebarProvider>\r\n    )\r\n}\r\n",
      "language": "tsx"
    }
  },
  "pricing-1": {
    "components": {
      "@/registry/view/pricing-1/components/pricing-section": {
        "content": "import { Check, HelpCircle, ChevronRight } from \"lucide-react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\r\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\"\r\n\r\n\r\nexport default function PricingSection() {\r\n    return (\r\n        <div className=\"w-full bg-background\">\r\n            <div className=\"mx-auto max-w-7xl px-4 py-24 sm:px-6 lg:px-8\">\r\n                <div className=\"text-center\">\r\n                    <h2 className=\"text-3xl font-semibold tracking-tight text-foreground sm:text-4xl md:text-5xl\">\r\n                        Choose the right plan for you\r\n                    </h2>\r\n                    <p className=\"mx-auto mt-4 max-w-2xl text-lg text-muted-foreground\">\r\n                        Select a plan that fits your needs. All plans include a 14-day free trial.\r\n                    </p>\r\n                </div>\r\n                <div className=\"mt-16 grid grid-cols-1 gap-y-8 sm:grid-cols-2 sm:gap-6 lg:grid-cols-4 xl:gap-x-8\">\r\n                    <div className=\"relative flex flex-col overflow-hidden rounded-2xl border border-border bg-card transition-all duration-200 hover:shadow-md\">\r\n                        <div className=\"p-6 sm:p-8\">\r\n                            <h3 className=\"text-2xl font-semibold text-card-foreground\">Free</h3>\r\n                            <p className=\"mt-2 text-sm text-muted-foreground\">\r\n                                For personal use only with limited features and support\r\n                            </p>\r\n                            <div className=\"mt-6 flex items-baseline\">\r\n                                <span className=\"text-5xl font-bold tracking-tight text-card-foreground\">$0</span>\r\n                            </div>\r\n                            <p className=\"mt-1 text-sm text-muted-foreground\">Includes 1 user.</p>\r\n                        </div>\r\n                        <div className=\"flex flex-1 flex-col justify-between p-6 sm:p-8\">\r\n                            <Button variant=\"outline\" className=\"w-full rounded-full\">\r\n                                Get Started\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"relative flex flex-col overflow-hidden rounded-2xl border border-border bg-accent transition-all duration-200 hover:shadow-md\">\r\n                        <div className=\"absolute right-4 top-4 rounded-full bg-primary px-3 py-1 text-xs font-medium text-primary-foreground\">\r\n                            Popular\r\n                        </div>\r\n                        <div className=\"p-6 sm:p-8\">\r\n                            <h3 className=\"text-2xl font-semibold text-accent-foreground\">Pro</h3>\r\n                            <p className=\"mt-2 text-sm text-muted-foreground\">\r\n                                For small businesses with all the features and support\r\n                            </p>\r\n                            <div className=\"mt-6 flex items-baseline\">\r\n                                <span className=\"text-5xl font-bold tracking-tight text-accent-foreground\">$29</span>\r\n                                <span className=\"ml-1 text-sm text-muted-foreground\">per user, per month</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-1 flex-col justify-between p-6 sm:p-8\">\r\n                            <Button className=\"w-full rounded-full\">Purchase</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"relative flex flex-col overflow-hidden rounded-2xl border border-border bg-card transition-all duration-200 hover:shadow-md\">\r\n                        <div className=\"p-6 sm:p-8\">\r\n                            <h3 className=\"text-2xl font-semibold text-card-foreground\">Premium</h3>\r\n                            <p className=\"mt-2 text-sm text-muted-foreground\">\r\n                                For teams and organizations with advanced features and support\r\n                            </p>\r\n                            <div className=\"mt-6 flex items-baseline\">\r\n                                <span className=\"text-5xl font-bold tracking-tight text-card-foreground\">$59</span>\r\n                                <span className=\"ml-1 text-sm text-muted-foreground\">per user, per month</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-1 flex-col justify-between p-6 sm:p-8\">\r\n                            <Button variant=\"outline\" className=\"w-full rounded-full\">\r\n                                Purchase\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"relative flex flex-col overflow-hidden rounded-2xl border border-border bg-card transition-all duration-200 hover:shadow-md\">\r\n                        <div className=\"p-6 sm:p-8\">\r\n                            <h3 className=\"text-2xl font-semibold text-card-foreground\">Enterprise</h3>\r\n                            <p className=\"mt-2 text-sm text-muted-foreground\">\r\n                                For large companies with custom features and support and a dedicated account manager\r\n                            </p>\r\n                            <div className=\"mt-6 flex items-baseline\">\r\n                                <span className=\"text-2xl font-bold tracking-tight text-card-foreground\">Custom pricing</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex flex-1 flex-col justify-between p-6 sm:p-8\">\r\n                            <Button variant=\"outline\" className=\"w-full rounded-full\">\r\n                                Contact sales\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-16 overflow-hidden rounded-2xl border border-border\">\r\n                    <div className=\"grid grid-cols-1 divide-y divide-border lg:grid-cols-4 lg:divide-x lg:divide-y-0\">\r\n                        <div className=\"p-6 sm:p-8 bg-card\">\r\n                            <h3 className=\"text-lg font-semibold text-card-foreground\">Features</h3>\r\n                            <ul className=\"mt-6 space-y-4\">\r\n                                <FeatureItem feature=\"Live Collaboration\" />\r\n                                <FeatureItem feature=\"1 GB Storage\" />\r\n                                <FeatureItem feature=\"2 Projects\" />\r\n                                <FeatureItem feature=\"Basic Support\" />\r\n                                <FeatureItem feature=\"Limited Customization\" tooltip=\"Basic theme options only\" />\r\n                                <FeatureItem feature=\"Limited Integration\" tooltip=\"Connect with up to 2 services\" />\r\n                                <FeatureItem feature=\"Limited API Access\" tooltip=\"100 requests per day\" />\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"bg-accent p-6 sm:p-8\">\r\n                            <h3 className=\"text-lg font-semibold text-accent-foreground\">Everything in Free, and:</h3>\r\n                            <ul className=\"mt-6 space-y-4\">\r\n                                <FeatureItem feature=\"2 Team Members\" />\r\n                                <FeatureItem feature=\"10 GB Storage\" />\r\n                                <FeatureItem feature=\"10 Projects\" />\r\n                                <FeatureItem feature=\"Priority Support\" tooltip=\"Response within 24 hours\" />\r\n                                <FeatureItem feature=\"Full Customization\" tooltip=\"Complete theme control\" />\r\n                                <FeatureItem feature=\"Full Integration\" tooltip=\"Connect with up to 10 services\" />\r\n                                <FeatureItem feature=\"Full API Access\" tooltip=\"10,000 requests per day\" />\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"p-6 sm:p-8 bg-card\">\r\n                            <h3 className=\"text-lg font-semibold text-card-foreground\">Everything in Pro, and:</h3>\r\n                            <ul className=\"mt-6 space-y-4\">\r\n                                <FeatureItem feature=\"5 Team Members\" />\r\n                                <FeatureItem feature=\"50 GB Storage\" />\r\n                                <FeatureItem feature=\"50 Projects\" />\r\n                                <FeatureItem feature=\"Dedicated Support\" tooltip=\"Response within 8 hours\" />\r\n                                <FeatureItem feature=\"Advanced Customization\" tooltip=\"White-labeling options\" />\r\n                                <FeatureItem feature=\"Analytics\" tooltip=\"Advanced usage metrics and insights\" />\r\n                                <FeatureItem feature=\"Reports\" tooltip=\"Custom reporting tools\" />\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"p-6 sm:p-8 bg-card\">\r\n                            <h3 className=\"text-lg font-semibold text-card-foreground\">Everything in Premium, and:</h3>\r\n                            <ul className=\"mt-6 space-y-4\">\r\n                                <FeatureItem feature=\"10+ Team Members\" />\r\n                                <FeatureItem feature=\"100+ GB Storage\" />\r\n                                <FeatureItem feature=\"100+ Projects\" />\r\n                                <FeatureItem feature=\"Dedicated Account Manager\" />\r\n                                <FeatureItem feature=\"Custom Features\" tooltip=\"Bespoke development for your needs\" />\r\n                                <FeatureItem feature=\"Custom Support\" tooltip=\"24/7 priority support\" />\r\n                                <FeatureItem feature=\"Custom Integration\" tooltip=\"Enterprise API and custom integrations\" />\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-16\">\r\n                    <h3 className=\"text-2xl font-semibold text-foreground\">Frequently asked questions</h3>\r\n                    <div className=\"mt-6\">\r\n                        <Accordion type=\"single\" collapsible className=\"w-full\">\r\n                            <AccordionItem value=\"item-1\">\r\n                                <AccordionTrigger className=\"text-left\">How does the 14-day trial work?</AccordionTrigger>\r\n                                <AccordionContent>\r\n                                    You can try any plan for 14 days with full access to all features. No credit card required. At the\r\n                                    end of your trial, you can choose to subscribe or downgrade to the free plan.\r\n                                </AccordionContent>\r\n                            </AccordionItem>\r\n                            <AccordionItem value=\"item-2\">\r\n                                <AccordionTrigger className=\"text-left\">Can I change plans later?</AccordionTrigger>\r\n                                <AccordionContent>\r\n                                    Yes, you can upgrade, downgrade, or cancel your plan at any time. Changes to your subscription will\r\n                                    take effect immediately.\r\n                                </AccordionContent>\r\n                            </AccordionItem>\r\n                            <AccordionItem value=\"item-3\">\r\n                                <AccordionTrigger className=\"text-left\">What payment methods do you accept?</AccordionTrigger>\r\n                                <AccordionContent>\r\n                                    We accept all major credit cards, PayPal, and Apple Pay. For Enterprise plans, we also offer\r\n                                    invoicing.\r\n                                </AccordionContent>\r\n                            </AccordionItem>\r\n                            <AccordionItem value=\"item-4\">\r\n                                <AccordionTrigger className=\"text-left\">Is there a discount for annual billing?</AccordionTrigger>\r\n                                <AccordionContent>\r\n                                    Yes, you can save 20% by choosing annual billing on any paid plan. The discount will be applied\r\n                                    automatically at checkout.\r\n                                </AccordionContent>\r\n                            </AccordionItem>\r\n                        </Accordion>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-16 rounded-2xl bg-accent p-8 text-center\">\r\n                    <h3 className=\"text-2xl font-semibold text-accent-foreground\">Still have questions?</h3>\r\n                    <p className=\"mt-2 text-muted-foreground\">\r\n                        Our team is here to help you find the perfect plan for your needs.\r\n                    </p>\r\n                    <div className=\"mt-6\">\r\n                        <Button className=\"rounded-full\">\r\n                            Contact us\r\n                            <ChevronRight className=\"ml-2 h-4 w-4\" />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction FeatureItem({ feature, tooltip }: { feature: string; tooltip?: string }) {\r\n    return (\r\n        <li className=\"flex items-center\">\r\n            <Check className=\"h-5 w-5 text-primary\" />\r\n            <span className=\"ml-2 text-sm text-foreground\">{feature}</span>\r\n            {tooltip && (\r\n                <TooltipProvider>\r\n                    <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                            <button className=\"ml-1\">\r\n                                <HelpCircle className=\"h-4 w-4 text-muted-foreground\" />\r\n                            </button>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent className=\"max-w-xs\">\r\n                            <p>{tooltip}</p>\r\n                        </TooltipContent>\r\n                    </Tooltip>\r\n                </TooltipProvider>\r\n            )}\r\n        </li>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/pricing-1/page": {
      "content": "import PricingSection from \"./components/pricing-section\";\r\n\r\nexport default function page() {\r\n    return (\r\n        <div className=\"py-10 md:py-12 lgLpy-16\">\r\n            <PricingSection />\r\n        </div>\r\n    )\r\n}",
      "language": "tsx"
    }
  },
  "pricing-2": {
    "components": {
      "@/registry/view/pricing-2/components/billing-toggle": {
        "content": "\"use client\"\r\n\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Switch } from \"@/components/ui/switch\"\r\n\r\ninterface BillingToggleProps {\r\n    billingCycle: \"monthly\" | \"yearly\"\r\n    setBillingCycle: (value: \"monthly\" | \"yearly\") => void\r\n}\r\n\r\nexport function BillingToggle({ billingCycle, setBillingCycle }: BillingToggleProps) {\r\n    return (\r\n        <div className=\"flex items-center justify-center space-x-4\">\r\n            <Label\r\n                htmlFor=\"billing-toggle\"\r\n                className={`cursor-pointer text-sm font-medium ${billingCycle === \"monthly\" ? \"text-foreground\" : \"text-muted-foreground\"\r\n                    }`}\r\n            >\r\n                Monthly\r\n            </Label>\r\n            <Switch\r\n                id=\"billing-toggle\"\r\n                checked={billingCycle === \"yearly\"}\r\n                onCheckedChange={(checked) => setBillingCycle(checked ? \"yearly\" : \"monthly\")}\r\n                className=\"data-[state=checked]:bg-primary\"\r\n            />\r\n            <Label\r\n                htmlFor=\"billing-toggle\"\r\n                className={`cursor-pointer text-sm font-medium ${billingCycle === \"yearly\" ? \"text-foreground\" : \"text-muted-foreground\"\r\n                    }`}\r\n            >\r\n                Yearly\r\n            </Label>\r\n        </div>\r\n    )\r\n}\r\n",
        "language": "tsx"
      },
      "@/registry/view/pricing-2/components/pricing-section": {
        "content": "\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport { Check, HelpCircle } from \"lucide-react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\r\nimport { BillingToggle } from \"./billing-toggle\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst plans = [\r\n    {\r\n        name: \"Free\",\r\n        description: \"For individuals just getting started\",\r\n        monthlyPrice: 0,\r\n        yearlyPrice: 0,\r\n        features: [\r\n            \"1 user\",\r\n            \"5 projects\",\r\n            \"Up to 1GB storage\",\r\n            \"Basic support\",\r\n            { name: \"Limited API access\", tooltip: \"Up to 100 requests per day\" },\r\n            { name: \"Community access\", tooltip: \"Access to our community forums\" },\r\n        ],\r\n        cta: \"Get Started\",\r\n        popular: false,\r\n    },\r\n    {\r\n        name: \"Pro\",\r\n        description: \"For professionals and small teams\",\r\n        monthlyPrice: 15,\r\n        yearlyPrice: 144,\r\n        features: [\r\n            \"Up to 5 users\",\r\n            \"20 projects\",\r\n            \"Up to 10GB storage\",\r\n            \"Priority support\",\r\n            { name: \"Advanced API access\", tooltip: \"Up to 10,000 requests per day\" },\r\n            { name: \"Team collaboration\", tooltip: \"Real-time collaboration features\" },\r\n            \"Custom domains\",\r\n        ],\r\n        cta: \"Subscribe\",\r\n        popular: true,\r\n    },\r\n    {\r\n        name: \"Premium\",\r\n        description: \"For growing teams with advanced needs\",\r\n        monthlyPrice: 30,\r\n        yearlyPrice: 288,\r\n        features: [\r\n            \"Up to 10 users\",\r\n            \"Unlimited projects\",\r\n            \"Up to 100GB storage\",\r\n            \"24/7 phone support\",\r\n            { name: \"Enterprise API access\", tooltip: \"Unlimited API requests\" },\r\n            { name: \"Advanced analytics\", tooltip: \"Detailed usage and performance metrics\" },\r\n            \"Custom domains\",\r\n            \"SSO authentication\",\r\n        ],\r\n        cta: \"Subscribe\",\r\n        popular: false,\r\n    },\r\n    {\r\n        name: \"Enterprise\",\r\n        description: \"For large organizations with custom requirements\",\r\n        monthlyPrice: null,\r\n        yearlyPrice: null,\r\n        features: [\r\n            \"Unlimited users\",\r\n            \"Unlimited projects\",\r\n            \"Unlimited storage\",\r\n            \"Dedicated support team\",\r\n            { name: \"Custom API solutions\", tooltip: \"Tailored API solutions for your needs\" },\r\n            { name: \"Advanced security\", tooltip: \"Enhanced security features and compliance\" },\r\n            \"Custom domains\",\r\n            \"SSO authentication\",\r\n            \"Dedicated infrastructure\",\r\n            \"Custom integrations\",\r\n        ],\r\n        cta: \"Contact Sales\",\r\n        popular: false,\r\n    },\r\n]\r\n\r\nexport default function PricingSection() {\r\n    const [billingCycle, setBillingCycle] = useState<\"monthly\" | \"yearly\">(\"monthly\")\r\n\r\n    const yearlyDiscount = 20 \r\n\r\n    return (\r\n        <section className=\"w-full py-12 md:py-24 lg:py-32\">\r\n            <div className=\"container px-4 md:px-6\">\r\n                <div className=\"flex flex-col items-center justify-center space-y-4 text-center\">\r\n                    <div className=\"space-y-2\">\r\n                        <h2 className=\"text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl\">Simple, transparent pricing</h2>\r\n                        <p className=\"mx-auto max-w-[700px] text-muted-foreground md:text-xl\">\r\n                            Choose the perfect plan for your needs. Always know what you'll pay.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"w-full max-w-sm\">\r\n                        <BillingToggle billingCycle={billingCycle} setBillingCycle={setBillingCycle} />\r\n                    </div>\r\n                    {billingCycle === \"yearly\" && (\r\n                        <div className=\"inline-flex items-center rounded-full border border-green-200 bg-green-100 px-3 py-1 text-sm text-green-700 dark:border-green-800 dark:bg-green-900/30 dark:text-green-400\">\r\n                            <span>Save {yearlyDiscount}% with yearly billing</span>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"mt-12 grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4\">\r\n                    {plans.map((plan) => {\r\n                        const price = billingCycle === \"monthly\" ? plan.monthlyPrice : plan.yearlyPrice\r\n                        const priceDisplay = price === null ? \"Custom pricing\" : `$${price}`\r\n                        const interval = billingCycle === \"monthly\" ? \"/month\" : \"/year\"\r\n                        return (\r\n                            <Card\r\n                                key={plan.name}\r\n                                className={cn(\r\n                                    \"flex flex-col transition-all duration-200 hover:shadow-lg rounded-2xl\",\r\n                                    plan.popular ? \"border-primary shadow-md dark:border-primary dark:bg-primary/5\" : \"border-border\",\r\n                                )}\r\n                            >\r\n                                {plan.popular && (\r\n                                    <div className=\"absolute right-4 top-4 rounded-full bg-primary px-3 py-1 text-xs font-medium text-primary-foreground\">\r\n                                        Popular\r\n                                    </div>\r\n                                )}\r\n                                <CardHeader className={cn(\"flex flex-col space-y-1.5\", plan.popular && \"pt-10\")}>\r\n                                    <CardTitle className=\"text-2xl font-bold\">{plan.name}</CardTitle>\r\n                                    <CardDescription className=\"line-clamp-2 min-h-[40px]\">{plan.description}</CardDescription>\r\n                                </CardHeader>\r\n                                <CardContent className=\"flex-1\">\r\n                                    <div className=\"mb-6 flex items-baseline text-foreground\">\r\n                                        <span className=\"text-4xl font-bold\">{priceDisplay}</span>\r\n                                        {price !== null && <span className=\"ml-1 text-sm text-muted-foreground\">{interval}</span>}\r\n                                    </div>\r\n                                    <ul className=\"space-y-3\">\r\n                                        {plan.features.map((feature, index) => (\r\n                                            <li key={index} className=\"flex items-start\">\r\n                                                <Check className=\"mr-2 h-5 w-5 shrink-0 text-primary\" />\r\n                                                <span className=\"text-sm\">\r\n                                                    {typeof feature === \"string\" ? (\r\n                                                        feature\r\n                                                    ) : (\r\n                                                        <TooltipProvider>\r\n                                                            <Tooltip>\r\n                                                                <TooltipTrigger className=\"flex items-center text-left\">\r\n                                                                    {feature.name}\r\n                                                                    <HelpCircle className=\"ml-1 h-3 w-3 text-muted-foreground\" />\r\n                                                                </TooltipTrigger>\r\n                                                                <TooltipContent className=\"max-w-xs\">\r\n                                                                    <p>{feature.tooltip}</p>\r\n                                                                </TooltipContent>\r\n                                                            </Tooltip>\r\n                                                        </TooltipProvider>\r\n                                                    )}\r\n                                                </span>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </CardContent>\r\n                                <CardFooter>\r\n                                    <Button\r\n                                        className={cn(\r\n                                            \"w-full rounded-full transition-all\",\r\n                                            plan.popular ? \"bg-primary text-primary-foreground\" : \"bg-card text-card-foreground\",\r\n                                        )}\r\n                                        variant={plan.popular ? \"default\" : \"outline\"}\r\n                                    >\r\n                                        {plan.cta}\r\n                                    </Button>\r\n                                </CardFooter>\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"mt-12 text-center\">\r\n                    <p className=\"text-muted-foreground\">All plans include a 14-day free trial. No credit card required.</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/pricing-2/page": {
      "content": "import PricingSection from \"./components/pricing-section\";\r\n\r\nexport default function page() {\r\n    return (\r\n        <div className=\"py-10 md:py-12 lg:py-16\">\r\n            <PricingSection />\r\n        </div>\r\n    )\r\n}",
      "language": "tsx"
    }
  },
  "pricing-3": {
    "components": {
      "@/registry/view/pricing-3/components/billing-toggle": {
        "content": "\"use client\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface BillingToggleProps {\r\n    billingCycle: \"monthly\" | \"annual\"\r\n    setBillingCycle: (value: \"monthly\" | \"annual\") => void\r\n    discount: number\r\n}\r\n\r\nexport function BillingToggle({ billingCycle, setBillingCycle, discount }: BillingToggleProps) {\r\n    return (\r\n        <div className=\"inline-flex rounded-full bg-purple-50 dark:bg-purple-950/20 p-1\">\r\n            <button\r\n                onClick={() => setBillingCycle(\"monthly\")}\r\n                className={cn(\r\n                    \"rounded-full px-4 py-2 text-sm font-medium transition-colors\",\r\n                    billingCycle === \"monthly\"\r\n                        ? \"bg-white dark:bg-gray-950 text-gray-950 dark:text-white shadow-sm\"\r\n                        : \"bg-transparent text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white\",\r\n                )}\r\n            >\r\n                Monthly\r\n            </button>\r\n            <button\r\n                onClick={() => setBillingCycle(\"annual\")}\r\n                className={cn(\r\n                    \"rounded-full px-4 py-2 text-sm font-medium transition-colors\",\r\n                    billingCycle === \"annual\"\r\n                        ? \"bg-purple-600 dark:bg-purple-500 text-white shadow-sm\"\r\n                        : \"bg-transparent text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white\",\r\n                )}\r\n            >\r\n                Annual (Save {discount}%)\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n",
        "language": "tsx"
      },
      "@/registry/view/pricing-3/components/pricing-section": {
        "content": "\"use client\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Check } from 'lucide-react'\r\nimport { useState } from \"react\"\r\nimport { BillingToggle } from \"./billing-toggle\"\r\n\r\nconst plans = [\r\n    {\r\n        name: \"Creator\",\r\n        description: \"Unlock powerful AI tools to create your content, wherever you work online.\",\r\n        monthlyPrice: 19,\r\n        annualPrice: 9.5,\r\n        features: [\r\n            \"01 User Access\",\r\n            \"Access to Fixoria AI Chatbot\",\r\n            \"Access to SEO Mode\",\r\n            \"AI Image Generation and editing Tool\",\r\n            \"03 Brand Voice Access\",\r\n            \"Use AI with Browser Extension\",\r\n        ],\r\n        cta: \"Current Plan\",\r\n        ctaVariant: \"outline\" as const,\r\n        popular: false,\r\n        trial: \"Start Free 7-Days Trial\",\r\n    },\r\n    {\r\n        name: \"Pro Plan\",\r\n        description: \"Leverage advanced AI to create content for multiple brands on campaigns.\",\r\n        monthlyPrice: 99,\r\n        annualPrice: 49.5,\r\n        features: [\r\n            \"05 User Access\",\r\n            \"10 Knowledge Assets\",\r\n            \"Access to Pro SEO Mode\",\r\n            \"Collaboration with our Management\",\r\n            \"10 Brand Voice Access\",\r\n            \"01 Page Custom change Access\",\r\n        ],\r\n        cta: \"Switch to this Plan\",\r\n        ctaVariant: \"default\" as const,\r\n        popular: true,\r\n        trial: \"Start Free 7-Days Trial\",\r\n        billingNote: \"Per user, per month & billed annually\",\r\n    },\r\n    {\r\n        name: \"Business Plan\",\r\n        description: \"Personalized AI with enhanced control, security, team training, and tech support.\",\r\n        monthlyPrice: 199,\r\n        annualPrice: 99.5,\r\n        features: [\r\n            \"Unlimited Feature Usage\",\r\n            \"Performance Analytics & Insights\",\r\n            \"Custom Style Guides with New View\",\r\n            \"Advanced Admin Panel Access\",\r\n            \"Group Document Collaboration\",\r\n            \"Hight Security Platform\",\r\n        ],\r\n        cta: \"Contact Sales\",\r\n        ctaVariant: \"default\" as const,\r\n        popular: false,\r\n        trial: \"Start Free 15-Days Trial\",\r\n        customPricing: true,\r\n    },\r\n]\r\n\r\nexport default function PricingSection() {\r\n    const [billingCycle, setBillingCycle] = useState<\"monthly\" | \"annual\">(\"monthly\")\r\n    const discount = 50\r\n\r\n    return (\r\n        <section className=\"w-full py-12\">\r\n            <div className=\"container px-4 md:px-6 max-w-6xl\">\r\n                <div className=\"flex flex-col items-start space-y-4 pb-10\">\r\n                    <div className=\"space-y-2\">\r\n                        <h2 className=\"text-3xl font-bold tracking-tight text-gray-900 dark:text-gray-50\">Upgrade Plan</h2>\r\n                        <p className=\"text-gray-500 dark:text-gray-400\">Fixoria pricing plan are designed to meet your needs as you grow</p>\r\n                    </div>\r\n                    <div className=\"mt-6\">\r\n                        <BillingToggle billingCycle={billingCycle} setBillingCycle={setBillingCycle} discount={discount} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n                    {plans.map((plan) => {\r\n                        const price = billingCycle === \"monthly\" ? plan.monthlyPrice : plan.annualPrice\r\n                        return (\r\n                            <Card\r\n                                key={plan.name}\r\n                                className={cn(\r\n                                    \"relative overflow-hidden rounded-2xl border transition-all duration-200 hover:shadow-md\",\r\n                                    \"border-gray-200 dark:border-gray-800 shadow-sm dark:shadow-none\",\r\n                                    plan.popular\r\n                                        ? \"border-purple-100 dark:border-purple-900/50 bg-gradient-to-b from-purple-50 to-white dark:from-purple-950/20 dark:to-black\"\r\n                                        : \"dark:bg-black\"\r\n                                )}\r\n                            >\r\n                                {plan.popular && (\r\n                                    <div className=\"absolute right-4 top-4 flex items-center rounded-full bg-purple-100 dark:bg-purple-900/50 px-3 py-1 text-xs font-medium text-purple-600 dark:text-purple-300\">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            viewBox=\"0 0 24 24\"\r\n                                            fill=\"currentColor\"\r\n                                            className=\"mr-1 h-3 w-3\"\r\n                                        >\r\n                                            <path\r\n                                                fillRule=\"evenodd\"\r\n                                                d=\"M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z\"\r\n                                                clipRule=\"evenodd\"\r\n                                            />\r\n                                        </svg>\r\n                                        Popular\r\n                                    </div>\r\n                                )}\r\n                                <CardHeader className={cn(\"pb-8 pt-6\", plan.popular && \"pt-10\")}>\r\n                                    <CardTitle className=\"text-xl font-bold text-gray-900 dark:text-gray-50\">{plan.name}</CardTitle>\r\n                                    <CardDescription className=\"mt-1.5 text-sm text-gray-500 dark:text-gray-400\">{plan.description}</CardDescription>\r\n                                </CardHeader>\r\n                                <CardContent className=\"pb-6\">\r\n                                    <div className=\"mb-5\">\r\n                                        {plan.customPricing ? (\r\n                                            <div>\r\n                                                <div className=\"flex items-baseline\">\r\n                                                    <span className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Start from</span>\r\n                                                    <span className=\"ml-1.5 text-4xl font-bold text-gray-900 dark:text-gray-50\">${price}</span>\r\n                                                </div>\r\n                                                <div className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">Custom Pricing, Custom Billing</div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div>\r\n                                                <div className=\"flex items-baseline\">\r\n                                                    <span className=\"text-4xl font-bold text-gray-900 dark:text-gray-50\">${price}</span>\r\n                                                </div>\r\n                                                <div className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">{plan.billingNote || `Per user & per month`}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <Button\r\n                                        variant={plan.ctaVariant}\r\n                                        className={cn(\r\n                                            \"w-full rounded-lg py-2.5 text-sm font-medium\",\r\n                                            plan.ctaVariant === \"default\" &&\r\n                                            \"bg-gradient-to-r from-purple-500 to-purple-700 text-white hover:from-purple-600 hover:to-purple-800 shadow-sm dark:from-purple-600 dark:to-purple-800 dark:hover:from-purple-500 dark:hover:to-purple-700\",\r\n                                            plan.ctaVariant === \"outline\" &&\r\n                                            \"border-gray-200 text-gray-900 hover:bg-gray-50 dark:border-gray-700 dark:text-gray-100 dark:hover:bg-gray-800\"\r\n                                        )}\r\n                                    >\r\n                                        {plan.cta}\r\n                                    </Button>\r\n                                    <div className=\"mt-3 text-center text-xs text-gray-500 dark:text-gray-400\">{plan.trial}</div>\r\n                                </CardContent>\r\n                                <CardFooter className=\"flex flex-col items-start border-t border-gray-100 dark:border-gray-800 px-6 py-5\">\r\n                                    <h4 className=\"mb-4 text-sm font-semibold text-gray-900 dark:text-gray-50\">Features</h4>\r\n                                    <p className=\"mb-4 text-xs text-gray-500 dark:text-gray-400\">\r\n                                        {plan.name === \"Creator\"\r\n                                            ? \"Everything in our free plan includes\"\r\n                                            : plan.name === \"Pro Plan\"\r\n                                                ? \"Everything in Creator & Plus\"\r\n                                                : \"Everything in Creator, Plus & Business\"}\r\n                                    </p>\r\n                                    <ul className=\"space-y-3\">\r\n                                        {plan.features.map((feature, index) => (\r\n                                            <li key={index} className=\"flex items-start\">\r\n                                                <div className=\"mr-3 flex h-5 w-5 items-center justify-center rounded-full bg-purple-100 dark:bg-purple-900/30\">\r\n                                                    <Check className=\"h-3 w-3 text-purple-600 dark:text-purple-400\" />\r\n                                                </div>\r\n                                                <span className=\"text-sm text-gray-600 dark:text-gray-300\">{feature}</span>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </CardFooter>\r\n                            </Card>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/pricing-3/page": {
      "content": "import PricingSection from \"./components/pricing-section\";\r\n\r\nexport default function page() {\r\n    return (\r\n        <div className=\"py-10 md:py-12 lg:py-16\">\r\n            <PricingSection />\r\n        </div>\r\n    )\r\n}",
      "language": "tsx"
    }
  },
  "pricing-4": {
    "components": {
      "@/registry/view/pricing-4/components/billing-toggle": {
        "content": "\"use client\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface BillingToggleProps {\r\n    billingCycle: \"monthly\" | \"annual\"\r\n    setBillingCycle: (value: \"monthly\" | \"annual\") => void\r\n    discount: number\r\n}\r\n\r\nexport function BillingToggle({ billingCycle, setBillingCycle, discount }: BillingToggleProps) {\r\n    return (\r\n        <div className=\"inline-flex rounded-full bg-gray-50 dark:bg-gray-950/30 p-1\">\r\n            <button\r\n                onClick={() => setBillingCycle(\"monthly\")}\r\n                className={cn(\r\n                    \"rounded-full px-4 py-2 text-sm font-medium transition-colors\",\r\n                    billingCycle === \"monthly\"\r\n                        ? \"bg-white dark:bg-zinc-900 text-gray-900 dark:text-white shadow-sm\"\r\n                        : \"bg-transparent text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white\",\r\n                )}\r\n            >\r\n                Monthly\r\n            </button>\r\n            <button\r\n                onClick={() => setBillingCycle(\"annual\")}\r\n                className={cn(\r\n                    \"rounded-full px-4 py-2 text-sm font-medium transition-colors\",\r\n                    billingCycle === \"annual\"\r\n                        ? \"bg-slate-900 dark:bg-gray-950 text-white shadow-sm\"\r\n                        : \"bg-transparent text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white\",\r\n                )}\r\n            >\r\n                Annual (Save {discount}%)\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n",
        "language": "tsx"
      },
      "@/registry/view/pricing-4/components/pricing-section": {
        "content": "\"use client\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Check } from \"lucide-react\"\r\nimport type React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { BillingToggle } from \"./billing-toggle\"\r\n\r\nexport default function PricingSection() {\r\n    const [billingCycle, setBillingCycle] = useState<\"monthly\" | \"annual\">(\"monthly\")\r\n    const discount = 20\r\n\r\n    const plans = {\r\n        essential: {\r\n            monthly: {\r\n                price: \"$14.99\",\r\n                suffix: \"/month\",\r\n            },\r\n            annual: {\r\n                price: \"$149.90\",\r\n                suffix: \"/year\",\r\n            },\r\n        },\r\n        creator: {\r\n            monthly: {\r\n                price: \"$29.99\",\r\n                suffix: \"/month\",\r\n            },\r\n            annual: {\r\n                price: \"$299.90\",\r\n                suffix: \"/year\",\r\n            },\r\n        },\r\n        business: {\r\n            monthly: {\r\n                price: \"$59.99\",\r\n                suffix: \"/month\",\r\n            },\r\n            annual: {\r\n                price: \"$599.90\",\r\n                suffix: \"/year\",\r\n            },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <div className={cn(\"w-full py-16 px-4 md:px-6 lg:px-8\", \"bg-white dark:bg-black\")}>\r\n            <div className=\"max-w-6xl mx-auto\">\r\n                <h2\r\n                    className={cn(\r\n                        \"text-3xl md:text-4xl lg:text-5xl font-bold text-center mb-8\",\r\n                        \"text-slate-900 dark:text-white\",\r\n                    )}\r\n                >\r\n                    Pricing that scales with\r\n                    <br />\r\n                    your business\r\n                </h2>\r\n                <div className=\"flex flex-col items-center justify-center mb-16\">\r\n                    <BillingToggle billingCycle={billingCycle} setBillingCycle={setBillingCycle} discount={discount} />\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 lg:gap-8\">\r\n                    <div\r\n                        className={cn(\r\n                            \"rounded-xl shadow-lg p-6 flex flex-col\",\r\n                            \"bg-white border border-slate-200\",\r\n                            \"dark:bg-zinc-900 dark:border-zinc-800\",\r\n                        )}\r\n                    >\r\n                        <div className=\"mb-6\">\r\n                            <h3 className={cn(\"text-xl font-semibold mb-2\", \"text-slate-900 dark:text-white\")}>Essentials Plan</h3>\r\n                            <div className=\"flex items-baseline\">\r\n                                <span className={cn(\"text-3xl font-bold\", \"text-slate-900 dark:text-white\")}>\r\n                                    {plans.essential[billingCycle].price}\r\n                                </span>\r\n                                <span className=\"text-muted-foreground ml-1\">{plans.essential[billingCycle].suffix}</span>\r\n                            </div>\r\n                            <p className=\"text-muted-foreground mt-2 text-sm\">Perfect for solopreneurs and content creators</p>\r\n                        </div>\r\n                        <button\r\n                            className={cn(\r\n                                \"w-full py-2.5 px-4 rounded-full transition mb-6\",\r\n                                \"bg-slate-100 hover:bg-slate-200 text-slate-900\",\r\n                                \"dark:bg-zinc-800 dark:hover:bg-zinc-700 dark:text-white\",\r\n                            )}\r\n                        >\r\n                            Get Started\r\n                        </button>\r\n                        <div className=\"mt-2\">\r\n                            <p className={cn(\"text-xs uppercase font-semibold mb-4\", \"text-slate-500 dark:text-zinc-500\")}>\r\n                                FEATURES\r\n                            </p>\r\n                            <ul className=\"space-y-3\">\r\n                                <Feature>5 social media accounts</Feature>\r\n                                <Feature>Unlimited scheduled posts</Feature>\r\n                                <Feature>Visual content calendar</Feature>\r\n                                <Feature>Basic analytics dashboard</Feature>\r\n                                <Feature>Best time to post recommendations</Feature>\r\n                                <Feature>Mobile app access</Feature>\r\n                                <Feature>Email support</Feature>\r\n                                <Feature>7-day free trial</Feature>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={cn(\r\n                            \"rounded-xl shadow-lg p-6 flex flex-col relative md:transform md:-translate-y-2 md:scale-105 z-10\",\r\n                            \"bg-white border border-slate-200\",\r\n                            \"dark:bg-zinc-900 dark:border-zinc-800\",\r\n                        )}\r\n                    >\r\n                        <div className=\"absolute top-0 left-0 right-0 h-full overflow-hidden rounded-xl z-0\">\r\n                            <div className=\"block\">\r\n                                <div className=\"absolute top-0 -left-5 w-44 h-44 bg-gradient-radial from-purple-400 to-transparent rounded-full blur-xl\" />\r\n                                <div className=\"absolute top-0 left-1/4 w-44 h-44 bg-gradient-radial from-violet-400 to-transparent rounded-full blur-xl\" />\r\n                                <div className=\"absolute -top-4 right-1/2 w-48 h-44 bg-gradient-radial from-pink-300 to-transparent rounded-full blur-xl\" />\r\n                                <div className=\"absolute top-4 right-1/4 w-40 h-36 bg-gradient-radial from-teal-300 to-transparent rounded-full blur-xl\" />\r\n                                <div className=\"absolute top-0 right-0 w-40 h-36 bg-gradient-radial from-green-300 to-transparent rounded-full blur-xl\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-6 relative z-10\">\r\n                            <h3 className={cn(\"text-xl font-semibold mb-2\", \"text-slate-900 dark:text-white\")}>Creator Plan</h3>\r\n                            <div className=\"flex items-baseline\">\r\n                                <span className={cn(\"text-3xl font-bold\", \"text-slate-900 dark:text-white\")}>\r\n                                    {plans.creator[billingCycle].price}\r\n                                </span>\r\n                                <span className=\"text-muted-foreground ml-1\">{plans.creator[billingCycle].suffix}</span>\r\n                            </div>\r\n                            <p className=\"text-muted-foreground mt-2 text-sm\">Ideal for growing creators</p>\r\n                        </div>\r\n                        <button\r\n                            className={cn(\r\n                                \"w-full py-2.5 px-4 rounded-full transition mb-6 relative z-10\",\r\n                                \"bg-slate-900 hover:bg-slate-800 text-white\",\r\n                                \"dark:bg-black dark:hover:bg-zinc-800 dark:text-white\",\r\n                            )}\r\n                        >\r\n                            Get Started\r\n                        </button>\r\n                        <div className=\"mt-2 relative z-10\">\r\n                            <p className={cn(\"text-xs uppercase font-semibold mb-4\", \"text-slate-500 dark:text-zinc-500\")}>\r\n                                FEATURES\r\n                            </p>\r\n                            <ul className=\"space-y-3\">\r\n                                <Feature>15 social media accounts</Feature>\r\n                                <Feature>Everything in Essentials plan</Feature>\r\n                                <Feature>Enhanced analytics with custom reports</Feature>\r\n                                <Feature>Content Studio</Feature>\r\n                                <Feature>Full AI content assistant (50 generations/month)</Feature>\r\n                                <Feature>Advanced content studio with brand presets</Feature>\r\n                                <Feature>Post recycling for evergreen content</Feature>\r\n                                <Feature>Content categories and tagging</Feature>\r\n                                <Feature>Team collaboration (3 users)</Feature>\r\n                                <Feature>Hashtag performance tracking</Feature>\r\n                                <Feature>Bulk scheduling and uploads</Feature>\r\n                                <Feature>Priority email support</Feature>\r\n                                <Feature>7-day free trial</Feature>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={cn(\r\n                            \"rounded-xl shadow-lg p-6 flex flex-col\",\r\n                            \"bg-white border border-slate-200\",\r\n                            \"dark:bg-zinc-900 dark:border-zinc-800\",\r\n                        )}\r\n                    >\r\n                        <div className=\"mb-6\">\r\n                            <h3 className={cn(\"text-xl font-semibold mb-2\", \"text-slate-900 dark:text-white\")}>Business Plan</h3>\r\n                            <div className=\"flex items-baseline\">\r\n                                <span className={cn(\"text-3xl font-bold\", \"text-slate-900 dark:text-white\")}>\r\n                                    {plans.business[billingCycle].price}\r\n                                </span>\r\n                                <span className=\"text-muted-foreground ml-1\">{plans.business[billingCycle].suffix}</span>\r\n                            </div>\r\n                            <p className=\"text-muted-foreground mt-2 text-sm\">Built for growing businesses, and agencies</p>\r\n                        </div>\r\n                        <button\r\n                            className={cn(\r\n                                \"w-full py-2.5 px-4 rounded-full transition mb-6\",\r\n                                \"bg-slate-100 hover:bg-slate-200 text-slate-900\",\r\n                                \"dark:bg-zinc-800 dark:hover:bg-zinc-700 dark:text-white\",\r\n                            )}\r\n                        >\r\n                            Get Started\r\n                        </button>\r\n                        <div className=\"mt-2\">\r\n                            <p className={cn(\"text-xs uppercase font-semibold mb-4\", \"text-slate-500 dark:text-zinc-500\")}>\r\n                                FEATURES\r\n                            </p>\r\n                            <ul className=\"space-y-3\">\r\n                                <Feature>30 social media accounts</Feature>\r\n                                <Feature>Everything in Business plan</Feature>\r\n                                <Feature>Unlimited team members</Feature>\r\n                                <Feature>Unlimited AI content generations</Feature>\r\n                                <Feature>Premium content studio with multi-brand assets</Feature>\r\n                                <Feature>Client access portal with white labeling</Feature>\r\n                                <Feature>Advanced approval workflows</Feature>\r\n                                <Feature>Content library with asset management</Feature>\r\n                                <Feature>AI-powered content strategy suggestions</Feature>\r\n                                <Feature>Custom branded reports</Feature>\r\n                                <Feature>API access</Feature>\r\n                                <Feature>Real-time performance alerts</Feature>\r\n                                <Feature>Dedicated account manager</Feature>\r\n                                <Feature>Priority support with live chat</Feature>\r\n                                <Feature>7-day free trial</Feature>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Feature({ children }: { children: React.ReactNode }) {\r\n    return (\r\n        <li className=\"flex items-start\">\r\n            <div className=\"mr-2 mt-0.5\">\r\n                <Check className=\"h-4 w-4 text-emerald-400\" />\r\n            </div>\r\n            <span className={cn(\"text-sm\", \"text-slate-700 dark:text-zinc-300\")}>{children}</span>\r\n        </li>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/pricing-4/page": {
      "content": "import PricingSection from \"./components/pricing-section\"\r\n\r\nexport default function Page() {\r\n    return (\r\n        <div>\r\n            <PricingSection />\r\n        </div>\r\n    )\r\n}\r\n",
      "language": "tsx"
    }
  },
  "product-overview-1": {
    "components": {
      "@/registry/view/product-overview-1/components/discounted-price": {
        "content": "import React from \"react\"\n\nimport { formatPrice } from \"../lib/utils\"\n\ninterface DiscountPriceProps {\n  price: number\n  discount: number\n  quantity?: number\n}\nconst DiscountPrice: React.FC<DiscountPriceProps> = ({\n  price,\n  discount,\n  quantity = 1,\n}) => {\n  // here we are using Math.ceil to round up the price to the nearest integer\n  // this is because the price is in EGP and we want to avoid decimal values\n  let priceIncreasing = Math.ceil(price)\n  const discountedPrice = Math.ceil(priceIncreasing * (1 - discount))\n  // When using the quantity parameter, please ensure that the shipping price is updated accordingly, as shipping costs depend on the quantity of products ordered.\n  // const PriceAfterTimesQuantity = discountedPrice * quantity + shippingPrice + taxPrice * (discountedPrice * quantity);\n  const formattedPrice = formatPrice(discountedPrice * quantity)\n  return (\n    <div>\n      <p className=\"text-destructive font-semibold\">{formattedPrice}</p>\n    </div>\n  )\n}\n\nexport default DiscountPrice\n",
        "language": "tsx"
      },
      "@/registry/view/product-overview-1/components/normal-price": {
        "content": "import React from \"react\"\n\nimport { formatPrice } from \"../lib/utils\"\n\ntype ProductPrices = {\n  price: number\n  quantity?: number\n}\n\nconst NormalPrice: React.FC<ProductPrices> = ({ price, quantity = 1 }) => {\n  // here we are using Math.ceil to round up the price to the nearest integer\n  // this is because the price is in EGP and we want to avoid decimal values\n  const PriceAfterTimesQuantity = price * quantity\n  let normalPrice = Math.ceil(PriceAfterTimesQuantity)\n  // If you want to add more parameters to the price like: shippingPrice, taxPrice, etc.\n  // you can add it like this:\n  // When using the quantity parameter, please ensure that the shipping price is updated accordingly, as shipping costs depend on the quantity of products ordered.\n  // const PriceAfterTimesQuantity = normalPrice * quantity + shippingPrice + taxPrice * (normalPrice * quantity);\n  const formattedTotalPrice = formatPrice(normalPrice)\n  return (\n    <div>\n      <p>{formattedTotalPrice}</p>\n    </div>\n  )\n}\n\nexport default NormalPrice\n",
        "language": "tsx"
      },
      "@/registry/view/product-overview-1/components/product-color-temp-button": {
        "content": "\"use client\"\n\nimport React, { useEffect, useState } from \"react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\nexport type ProductColorTemp = \"warm\" | \"cool\" | \"white\"\n\nexport interface ColorTemperatureOption {\n  value: ProductColorTemp\n  label: string\n  icon?: React.ReactNode\n}\n\nconst DEFAULT_OPTIONS: ColorTemperatureOption[] = [\n  { value: \"warm\", label: \"Warm\" },\n  { value: \"cool\", label: \"Cool\" },\n  { value: \"white\", label: \"White\" },\n]\n\ninterface ColorTemperatureSelectorProps {\n  value: ProductColorTemp\n  onValueChange: (newValue: ProductColorTemp) => void\n  options?: ColorTemperatureOption[]\n  title?: string\n  disabled?: boolean\n  className?: string\n  buttonClassName?: string\n}\n\nexport function ColorTemperatureSelector({\n  value,\n  onValueChange,\n  options = DEFAULT_OPTIONS,\n  title = \"Color Temperature\",\n  disabled = false,\n  className,\n  buttonClassName,\n}: ColorTemperatureSelectorProps) {\n  const [selectedValue, setSelectedValue] = useState<ProductColorTemp>(value)\n\n  useEffect(() => {\n    setSelectedValue(value)\n  }, [value])\n\n  const handleSelectionChange = (newValue: ProductColorTemp) => {\n    if (disabled || newValue === selectedValue) return\n\n    setSelectedValue(newValue)\n    onValueChange(newValue)\n  }\n\n  return (\n    <div className={cn(\"space-y-2\", className)}>\n      {title && <h3 className=\"text-lg font-semibold mb-2\">{title}</h3>}\n      <div className=\"grid grid-cols-3 gap-2\">\n        {options.map((option) => (\n          <Button\n            key={option.value}\n            onClick={() => handleSelectionChange(option.value)}\n            variant={selectedValue === option.value ? \"default\" : \"outline\"}\n            disabled={disabled}\n            className={cn(\n              \"flex items-center justify-center p-0 m-0 rounded-full transition-all duration-200\",\n              selectedValue === option.value\n                ? \"bg-primary text-primary-foreground shadow-lg\"\n                : \"bg-background hover:bg-secondary\",\n              disabled && \"opacity-50 cursor-not-allowed\",\n              buttonClassName\n            )}\n          >\n            {option.label}\n          </Button>\n        ))}\n      </div>\n    </div>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/product-overview-1/components/product-image-carousel": {
        "content": "\"use client\"\n\nimport React from \"react\"\nimport Image from \"next/image\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { Carousel } from \"react-responsive-carousel\"\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\n\ntype ProductImagesProps = {\n  productImages: string[]\n}\n\nconst ProductImages: React.FC<ProductImagesProps> = ({ productImages }) => {\n  const [currentIndex, setCurrentIndex] = React.useState(0)\n  const handleSlideChange = (index: number) => {\n    setCurrentIndex(index)\n  }\n\n  return (\n    <div className=\"relative\">\n      <Carousel\n        showThumbs={true}\n        showStatus={false}\n        useKeyboardArrows={true}\n        infiniteLoop={false}\n        autoPlay={false}\n        selectedItem={currentIndex}\n        onChange={handleSlideChange}\n        className=\"product-carousel\"\n        thumbWidth={60}\n        renderThumbs={() =>\n          productImages.map((img, index) => (\n            <div key={index} className=\"thumbnail-wrapper h-12 sm:h-14 md:h-16\">\n              <Image\n                src={img}\n                alt={`Thumbnail ${index + 1}`}\n                width={80}\n                height={80}\n                className=\"object-cover rounded-sm thumbnail-image\"\n              />\n            </div>\n          ))\n        }\n        renderArrowPrev={(onClickHandler, hasPrev, label) =>\n          hasPrev && (\n            <button\n              onClick={onClickHandler}\n              title={label}\n              className=\"absolute z-[2] w-8 h-8 sm:w-10 sm:h-10 left-1 sm:left-2 rounded-full bg-gray-50 dark:bg-gray-950 cursor-pointer border-none shadow-md flex items-center justify-center\"\n              style={{\n                top: \"calc(50% - 20px)\",\n              }}\n            >\n              <ChevronLeft className=\"w-4 h-4 sm:w-5 sm:h-5\" />\n            </button>\n          )\n        }\n        renderArrowNext={(onClickHandler, hasNext, label) =>\n          hasNext && (\n            <button\n              onClick={onClickHandler}\n              title={label}\n              className=\"absolute z-[2] w-8 h-8 sm:w-10 sm:h-10 right-1 sm:right-2 rounded-full bg-gray-50 dark:bg-gray-950 cursor-pointer border-none shadow-md flex items-center justify-center\"\n              style={{\n                top: \"calc(50% - 20px)\",\n              }}\n            >\n              <ChevronRight className=\"w-4 h-4 sm:w-5 sm:h-5\" />\n            </button>\n          )\n        }\n      >\n        {productImages.map((img, index) => (\n          <div\n            key={index}\n            className=\"w-full aspect-square flex items-center justify-center\"\n          >\n            <Image\n              src={img}\n              alt={`Product image ${index + 1}`}\n              width={800}\n              height={800}\n              priority={index === 0}\n              quality={90}\n              className=\"max-h-[60vh] mx-auto rounded-lg\"\n            />\n          </div>\n        ))}\n      </Carousel>\n      <style jsx global>{`\n        .carousel .thumbs-wrapper {\n          margin: 10px 0 !important;\n          overflow: hidden;\n        }\n\n        .carousel .thumbs {\n          padding: 0 !important;\n          display: flex;\n          justify-content: center;\n          gap: 8px;\n        }\n\n        /* Better spacing on mobile */\n        @media (max-width: 640px) {\n          .carousel .thumbs {\n            gap: 4px;\n          }\n\n          .carousel .thumb {\n            margin-right: 0 !important;\n          }\n        }\n\n        /* Make sure main image container is responsive */\n        .carousel .slide img {\n          max-width: 100%;\n          max-height: 100%;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nexport default ProductImages\n",
        "language": "tsx"
      },
      "@/registry/view/product-overview-1/components/product-info": {
        "content": "\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { ArrowRight, Minus, Plus, ShoppingCart } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\nimport DiscountPrice from \"./discounted-price\"\nimport NormalPrice from \"./normal-price\"\nimport {\n  ColorTemperatureSelector,\n  ProductColorTemp,\n} from \"./product-color-temp-button\"\nimport { ProductIP, ProductIPSelector } from \"./product-ip-buttons\"\n\ninterface ProductConfigurationPanelProps {\n  productName: string\n  productCode?: string\n  description: string\n  displayPrice: number\n  discountPercentage?: number\n  quantity: number\n  onIncreaseQuantity: () => void\n  onDecreaseQuantity: () => void\n  canDecreaseQuantity: boolean\n  showIpSelector: boolean\n  selectedIp: ProductIP\n  onIpChange: (newIp: ProductIP) => void\n  isIpSelectorDisabled?: boolean\n  showColorTempSelector?: boolean\n  selectedColorTemp: ProductColorTemp\n  onColorTempChange: (newColorTemp: ProductColorTemp) => void\n  isColorTempSelectorDisabled?: boolean\n  showLampSelector: boolean\n  isLampSelectorDisabled?: boolean\n  basePriceForLamp?: number\n  hNumberForLamp?: number\n  onAddToCart: () => void\n  isAddToCartLoading: boolean\n  addToCartLabel?: string\n  onOrderNow: () => void\n  isOrderNowLoading: boolean\n  orderNowLabel?: string\n  stockStatus: \"inStock\" | \"outOfStock\" | \"checkAvailability\"\n  stockStatusText?: string\n  availabilityCheckCta?: string\n}\n\nexport function ProductConfigurationPanel({\n  productName,\n  productCode = \"PRODUCT-CODE\",\n  description,\n  displayPrice,\n  discountPercentage,\n  quantity,\n  onIncreaseQuantity,\n  onDecreaseQuantity,\n  canDecreaseQuantity,\n  showIpSelector,\n  selectedIp,\n  onIpChange,\n  isIpSelectorDisabled,\n  showColorTempSelector = true,\n  selectedColorTemp,\n  onColorTempChange,\n  isColorTempSelectorDisabled,\n  onAddToCart,\n  isAddToCartLoading,\n  addToCartLabel = \"Add to Cart\",\n  onOrderNow,\n  isOrderNowLoading,\n  orderNowLabel = \"Order Now\",\n  stockStatus,\n  stockStatusText = \"In Stock\",\n  availabilityCheckCta = \"Check Stores Availability\",\n}: ProductConfigurationPanelProps) {\n  // State to track IP-related price changes\n  const [currentPrice, setCurrentPrice] = useState(displayPrice)\n  const [additionalIpCost, setAdditionalIpCost] = useState(0)\n\n  // Update price when displayPrice or additionalIpCost changes\n  useEffect(() => {\n    setCurrentPrice(displayPrice + additionalIpCost)\n  }, [displayPrice, additionalIpCost])\n\n  // Handle IP change with price updates\n  const handleIpChange = (newIp: ProductIP, newAdditionalPrice?: number) => {\n    onIpChange(newIp)\n    if (newAdditionalPrice !== undefined) {\n      setAdditionalIpCost(newAdditionalPrice)\n    }\n  }\n\n  return (\n    <div className=\"w-full px-2 sm:px-4 lg:ml-0 xl:ml-8 2xl:ml-16\">\n      <h1 className=\"text-xl sm:text-2xl md:text-[24px] lg:text-3xl mt-3 lg:mt-5 mb-2 font-bold uppercase\">\n        {productCode}\n      </h1>\n      <p className=\"text-muted-foreground text-sm md:text-base lg:text-lg mb-3\">\n        {description}\n      </p>\n      <div className=\"flex flex-col mb-2 sm:mb-4\">\n        <div\n          className={cn(\n            \"grid gap-4 space-x-0 gap-y-4 grid-cols-1 md:grid-cols-2 \"\n          )}\n        >\n          {showColorTempSelector && (\n            <ColorTemperatureSelector\n              value={selectedColorTemp}\n              onValueChange={onColorTempChange}\n              disabled={\n                isColorTempSelectorDisabled ||\n                isOrderNowLoading ||\n                isAddToCartLoading\n              }\n            />\n          )}\n          {showIpSelector && (\n            <ProductIPSelector\n              value={selectedIp}\n              onValueChange={handleIpChange}\n              disabled={\n                isIpSelectorDisabled || isOrderNowLoading || isAddToCartLoading\n              }\n              title=\"Water Resistance (IP)\"\n              basePrice={displayPrice}\n            />\n          )}\n        </div>\n      </div>\n      <div className=\"my-3 sm:my-4 flex flex-wrap items-center gap-2 sm:gap-3\">\n        {discountPercentage && discountPercentage > 0 ? (\n          <>\n            <span className=\"text-base sm:text-lg font-semibold\">\n              <DiscountPrice\n                price={currentPrice}\n                discount={discountPercentage}\n                quantity={quantity}\n              />\n            </span>\n            <s className=\"text-gray-500 italic text-sm sm:text-base\">\n              <NormalPrice price={currentPrice} quantity={quantity} />\n            </s>\n            <span className=\"text-green-500 font-semibold text-sm sm:text-base\">\n              {discountPercentage * 100}% OFF\n            </span>\n          </>\n        ) : (\n          <span className=\"text-base sm:text-lg font-semibold\">\n            <NormalPrice price={currentPrice} quantity={quantity} />\n          </span>\n        )}\n      </div>\n      <div className=\"flex flex-row justify-between items-center w-full mb-3 sm:mb-4 gap-2 sm:gap-0\">\n        <button\n          className=\"text-primary text-sm sm:text-base md:text-lg flex items-center hover:underline disabled:text-muted-foreground disabled:no-underline disabled:cursor-not-allowed\"\n          disabled={stockStatus !== \"checkAvailability\"}\n        >\n          {availabilityCheckCta}\n          <ArrowRight className=\"w-4 h-4 sm:w-5 sm:h-5 ml-1 sm:ml-2\" />\n        </button>\n        <p\n          className={cn(\n            \"text-sm sm:text-base md:text-lg\",\n            stockStatus === \"inStock\" ? \"text-green-400\" : \"text-red-500\"\n          )}\n        >\n          {stockStatusText}\n        </p>\n      </div>\n      <div className=\"mt-4 sm:mt-6\">\n        <div className=\"flex flex-row items-center gap-3 sm:gap-4 w-full\">\n          <div className=\"flex items-center justify-center w-auto\">\n            <Button\n              size=\"icon\"\n              onClick={onDecreaseQuantity}\n              disabled={\n                !canDecreaseQuantity || isOrderNowLoading || isAddToCartLoading\n              }\n              className=\"w-10 h-10 sm:w-12 sm:h-12 shadow-md hover:shadow-lg transition-shadow bg-gray-950 hover:bg-black dark:bg-gray-100 dark:hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <Minus className=\"h-4 w-4 sm:w-5 sm:h-5\" />\n            </Button>\n            <span className=\"text-base sm:text-lg mx-3 sm:mx-4 w-0 sm:w-6 md:w-8 text-center\">\n              {quantity}\n            </span>\n            <Button\n              size=\"icon\"\n              onClick={onIncreaseQuantity}\n              disabled={isOrderNowLoading || isAddToCartLoading}\n              className=\"w-10 h-10 sm:w-12 sm:h-12 shadow-md hover:shadow-lg transition-shadow bg-gray-950 hover:bg-black dark:bg-gray-100 dark:hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <Plus className=\"h-4 w-4 sm:w-5 sm:h-5\" />\n            </Button>\n          </div>\n          <Button\n            onClick={onAddToCart}\n            disabled={\n              isAddToCartLoading ||\n              isOrderNowLoading ||\n              stockStatus !== \"inStock\"\n            }\n            className=\"bg-primary text-white px-3 py-2.5 sm:px-4 sm:py-3 text-sm sm:text-base w-full rounded uppercase flex items-center justify-center disabled:opacity-70 disabled:cursor-not-allowed\"\n          >\n            {isAddToCartLoading ? \"Adding...\" : addToCartLabel}\n            {!isAddToCartLoading && (\n              <ShoppingCart className=\"ml-2 w-4 h-4 sm:w-5 sm:h-5\" />\n            )}\n          </Button>\n        </div>\n        <div className=\"mt-3 sm:mt-4\">\n          <button\n            onClick={onOrderNow}\n            disabled={\n              isOrderNowLoading ||\n              isAddToCartLoading ||\n              stockStatus !== \"inStock\"\n            }\n            className={cn(\n              \"border-gray-950 dark:border-gray-50 transition-colors duration-300 bg-gray-50 dark:bg-transparent border-[1.5px] px-3 py-2.5 sm:px-4 sm:py-3 text-sm sm:text-base w-full rounded\",\n              \"hover:bg-black hover:text-white dark:hover:bg-gray-100 dark:hover:text-gray-950 dark:text-gray-100 dark:bg-background\",\n              \"disabled:opacity-70 disabled:cursor-not-allowed disabled:bg-gray-200 disabled:text-gray-500 disabled:hover:bg-gray-200 disabled:hover:text-gray-500\"\n            )}\n          >\n            {isOrderNowLoading ? \"Processing...\" : orderNowLabel}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/product-overview-1/components/product-ip-buttons": {
        "content": "\"use client\"\n\nimport { useEffect, useState } from \"react\"\nimport { Droplets } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nexport type ProductIP = \"IP20\" | \"IP44\" | \"IP54\" | \"IP65\" | \"IP68\"\n\nconst PRODUCT_IP_OPTIONS_MAP: Record<\n  ProductIP,\n  { label: string; description: string; increaseOnPricePercent: number }\n> = {\n  IP20: {\n    label: \"IP 20\",\n    description: \"Protected against solid objects over 12mm\",\n    increaseOnPricePercent: 0,\n  },\n  IP44: {\n    label: \"IP 44\",\n    description: \"Protected against water splashes from all directions\",\n    increaseOnPricePercent: 0.04,\n  },\n  IP54: {\n    label: \"IP 54\",\n    description: \"Protected against dust and water splashes\",\n    increaseOnPricePercent: 0.06,\n  },\n  IP65: {\n    label: \"IP 65\",\n    description: \"Dust tight and protected against water jets\",\n    increaseOnPricePercent: 0.08,\n  },\n  IP68: {\n    label: \"IP 68\",\n    description: \"Dust tight and protected against long periods of immersion\",\n    increaseOnPricePercent: 0.1,\n  },\n}\n\ninterface ProductIPSelectorProps {\n  value: ProductIP\n  onValueChange: (newValue: ProductIP, newPrice?: number) => void\n  title?: string\n  basePrice: number\n  disabled?: boolean\n}\n\nexport function ProductIPSelector({\n  value,\n  onValueChange,\n  title = \"Water Resistance (IP Rating)\",\n  disabled = false,\n  basePrice,\n}: ProductIPSelectorProps) {\n  const [selectedIp, setSelectedIp] = useState<ProductIP>(value)\n\n  useEffect(() => {\n    setSelectedIp(value)\n  }, [value])\n\n  const handleIpChange = (newIp: ProductIP) => {\n    if (disabled) return\n    setSelectedIp(newIp)\n\n    const { increaseOnPricePercent } = PRODUCT_IP_OPTIONS_MAP[newIp]\n    const additionalPrice = basePrice * increaseOnPricePercent\n    onValueChange(newIp, additionalPrice)\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      {title && <h3 className=\"text-lg font-semibold mb-2\">{title}</h3>}\n      <div className=\"grid sm:grid-cols-3 grid-cols-1 gap-2\">\n        {Object.entries(PRODUCT_IP_OPTIONS_MAP).map(\n          ([ip, { label, description }]) => (\n            <TooltipProvider key={ip}>\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Button\n                    onClick={() => handleIpChange(ip as ProductIP)}\n                    variant={selectedIp === ip ? \"default\" : \"outline\"}\n                    disabled={disabled}\n                    className={cn(\n                      \"flex items-center justify-center w-full rounded-full\",\n                      \"transition-colors duration-150 ease-in-out\",\n                      selectedIp === ip\n                        ? \"bg-primary text-primary-foreground\"\n                        : \"bg-background hover:bg-secondary text-secondary-foreground\",\n                      disabled && \"opacity-50 cursor-not-allowed\"\n                    )}\n                  >\n                    <Droplets className=\"w-4 h-4 mr-1 flex-shrink-0\" />\n                    <span className=\"ml-1 truncate\">{label}</span>\n                  </Button>\n                </TooltipTrigger>\n                <TooltipContent className=\"sm:block hidden font-medium\">\n                  {description}\n                </TooltipContent>\n              </Tooltip>\n            </TooltipProvider>\n          )\n        )}\n      </div>\n    </div>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {
      "@/registry/view/product-overview-1/lib/utils.ts": {
        "content": "// this for formatting the price in the product overview page for your country currency\nexport const formatPrice = (price: number) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"EGP\",\n    useGrouping: false,\n  })\n  return formatter.format(price)\n}\n",
        "language": "typescript"
      }
    },
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/product-overview-1/page": {
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { ProductColorTemp } from \"@/components/product-color-temp-button\"\nimport ProductImages from \"@/components/product-image-carousel\"\nimport { ProductConfigurationPanel } from \"@/components/product-info\"\nimport { ProductIP } from \"@/components/product-ip-buttons\"\n\nimport Container from \"@/components/Container\"\n\ninterface ProductOverviewProps {\n  productName: string\n  productCode?: string\n  description: string\n  price: number\n  originalPrice?: number\n  discountPercentage?: number\n  images: string[]\n  initialIp?: ProductIP\n  initialColorTemp?: ProductColorTemp\n  stockStatus?: \"inStock\" | \"outOfStock\" | \"checkAvailability\"\n  stockStatusText?: string\n  specifications?: { [key: string]: string }\n}\n\nexport default function ProductOverviewPage({\n  productName = \"Product Name\",\n  productCode = \"PRODUCT-CODE\",\n  description = \"Product description goes here. This is a sample product overview page.\",\n  price = 99.99,\n  discountPercentage = 0.1,\n  images = [\n    \"/components/product-card-1.png\",\n    \"/components/product-card-1.png\",\n    \"/components/product-card-1.png\",\n  ],\n  initialIp = \"IP44\",\n  initialColorTemp = \"warm\",\n  stockStatus = \"inStock\",\n  stockStatusText = \"In Stock\",\n  specifications,\n}: ProductOverviewProps) {\n  const [quantity, setQuantity] = useState<number>(1)\n  const [selectedIp, setSelectedIp] = useState<ProductIP>(initialIp)\n  const [selectedColorTemp, setSelectedColorTemp] =\n    useState<ProductColorTemp>(initialColorTemp)\n  const [isAddingToCart, setIsAddingToCart] = useState<boolean>(false)\n  const [isOrdering, setIsOrdering] = useState<boolean>(false)\n  const [currentPrice, setCurrentPrice] = useState<number>(price)\n\n  const handleIncreaseQuantity = () => {\n    setQuantity((prev) => prev + 1)\n  }\n\n  const handleDecreaseQuantity = () => {\n    if (quantity > 1) {\n      setQuantity((prev) => prev - 1)\n    }\n  }\n\n  const handleIpChange = (newIp: ProductIP) => {\n    setSelectedIp(newIp)\n  }\n\n  const handleAddToCart = () => {\n    setIsAddingToCart(true)\n    setTimeout(() => {\n      console.log(\"Added to cart:\", {\n        productName,\n        productCode,\n        quantity,\n        selectedIp,\n        selectedColorTemp,\n        price: currentPrice,\n      })\n      setIsAddingToCart(false)\n    }, 1000)\n  }\n\n  const handleOrderNow = () => {\n    setIsOrdering(true)\n    setTimeout(() => {\n      console.log(\"Ordered:\", {\n        productName,\n        productCode,\n        quantity,\n        selectedIp,\n        selectedColorTemp,\n        price: currentPrice,\n      })\n      setIsOrdering(false)\n    }, 1000)\n  }\n\n  return (\n    <div className=\"py-10 md:py-16 lg:py-20 w-full h-full\">\n      <Container>\n        <div className=\"flex flex-col sm:flex-row gap-4 sm:gap-6 lg:gap-8\">\n          <div className=\"w-full md:w-1/2 lg:w-4/12 mx-auto md:mx-0\">\n            <ProductImages productImages={images} />\n          </div>\n          <div className=\"w-full lg:w-7/12\">\n            <ProductConfigurationPanel\n              productName={productName}\n              productCode={productCode}\n              description={description}\n              displayPrice={price}\n              discountPercentage={discountPercentage}\n              quantity={quantity}\n              onIncreaseQuantity={handleIncreaseQuantity}\n              onDecreaseQuantity={handleDecreaseQuantity}\n              canDecreaseQuantity={quantity > 1}\n              showIpSelector={true}\n              selectedIp={selectedIp}\n              onIpChange={handleIpChange}\n              isIpSelectorDisabled={false}\n              showColorTempSelector={true}\n              selectedColorTemp={selectedColorTemp}\n              onColorTempChange={(newTemp) => setSelectedColorTemp(newTemp)}\n              isColorTempSelectorDisabled={false}\n              showLampSelector={false}\n              onAddToCart={handleAddToCart}\n              isAddToCartLoading={isAddingToCart}\n              onOrderNow={handleOrderNow}\n              isOrderNowLoading={isOrdering}\n              stockStatus={stockStatus}\n              stockStatusText={stockStatusText}\n            />\n          </div>\n        </div>\n      </Container>\n    </div>\n  )\n}\n",
      "language": "tsx"
    }
  },
  "products-carousel-1": {
    "components": {
      "@/registry/view/products-carousel-1/components/product-card": {
        "content": "\"use client\"\n\nimport React, { useState } from \"react\"\nimport Image from \"next/image\"\nimport Link from \"next/link\"\nimport { Truck } from \"lucide-react\"\nimport { Carousel } from \"react-responsive-carousel\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Badge } from \"@/components/ui/badge\"\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\n\nimport DiscountPrice from \"../../product-overview-1/components/discounted-price\"\nimport NormalPrice from \"../../product-overview-1/components/normal-price\"\n\ninterface Product {\n  productId: string\n  productName: string\n  brand?: string\n  price: number\n  productImages: string[]\n  productDiscount: number\n  detailsUrl?: string\n  productDescription?: string\n}\n\ninterface ProductCardProps {\n  product: Product\n  showBadge?: boolean\n  showShipping?: boolean\n  onAddToCart?: (productId: string) => void\n  className?: string\n  cardWidth?: string\n  isSignedIn?: boolean\n  onAuthRequired?: () => void\n}\n\nconst ProductCard: React.FC<ProductCardProps> = ({\n  product,\n  showBadge = true,\n  showShipping = true,\n  onAddToCart,\n  className = \"\",\n  cardWidth = \"max-w-[300px]\",\n  isSignedIn = true,\n  onAuthRequired,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState<number>(0)\n  const [isClicked, setIsClicked] = useState(false)\n\n  const handleSlideChange = (index: number) => setCurrentIndex(index)\n  const handleDetailsClick = () => setIsClicked(true)\n\n  const handleAddToCart = () => {\n    if (!isSignedIn && onAuthRequired) {\n      onAuthRequired()\n      return\n    }\n    onAddToCart?.(product.productId)\n  }\n\n  return (\n    <div className={cn(\"relative select-none\", cardWidth, className)}>\n      <div className=\"absolute top-2 left-2 z-10 px-2 py-1 flex items-center gap-2 text-xs text-white bg-[#676769] rounded-tr-md rounded-br-md\">\n        <Truck className=\"w-4 h-4\" />\n        <span>Fast Shipping</span>\n      </div>\n      <div className=\"absolute top-0 right-0 z-10\">\n        <Badge className=\"rounded-none text-sm bg-red-500 text-white\">\n          {Math.round(product.productDiscount * 100)}% OFF\n        </Badge>\n      </div>\n      <div className=\"flex flex-col overflow-hidden\">\n        <div className=\"w-full h-52 relative overflow-hidden\">\n          {product.productImages.length > 0 && (\n            <Carousel\n              showThumbs={false}\n              showStatus={false}\n              useKeyboardArrows\n              infiniteLoop={false}\n              autoPlay={false}\n              selectedItem={currentIndex}\n              onChange={handleSlideChange}\n              renderArrowPrev={(onClick, hasPrev) =>\n                hasPrev && (\n                  <button\n                    type=\"button\"\n                    onClick={onClick}\n                    className=\"absolute left-2 top-1/2 -translate-y-1/2 z-10 p-1 bg-white/80 dark:bg-black/30 rounded-full\"\n                  >\n                    <svg\n                      className=\"w-5 h-5 text-gray-800 dark:text-white\"\n                      aria-hidden=\"true\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path stroke=\"currentColor\" d=\"m15 19-7-7 7-7\" />\n                    </svg>\n                  </button>\n                )\n              }\n              renderArrowNext={(onClick, hasNext) =>\n                hasNext && (\n                  <button\n                    type=\"button\"\n                    onClick={onClick}\n                    className=\"absolute right-0 top-1/2 -translate-y-1/2 z-10 p-1 bg-white/80 dark:bg-black/30 rounded-full\"\n                  >\n                    <svg\n                      className=\"w-5 h-5 text-gray-800 dark:text-white\"\n                      aria-hidden=\"true\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path stroke=\"currentColor\" d=\"m9 5 7 7-7 7\" />\n                    </svg>\n                  </button>\n                )\n              }\n            >\n              {product.productImages.map((image, idx) => (\n                <div key={idx} className=\"w-full h-full\">\n                  <Image\n                    src={image}\n                    alt={product.productName}\n                    width={500}\n                    height={300}\n                    quality={90}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n              ))}\n            </Carousel>\n          )}\n        </div>\n        <div className=\"mt-1 space-y-2\">\n          <h2 className=\"text-lg font-medium text-gray-900 dark:text-white\">\n            {product.productName}\n          </h2>\n          <p className=\"text-sm text-gray-600 dark:text-gray-300 line-clamp-2\">\n            {product.productDescription}\n          </p>\n          <div>\n            {product.productDiscount > 0 ? (\n              <div className=\"flex items-center gap-2\">\n                <span className=\"text-lg text-red-600 font-semibold\">\n                  <DiscountPrice\n                    price={product.price}\n                    discount={product.productDiscount}\n                  />\n                </span>\n                <s className=\"text-gray-500 text-sm\">\n                  <NormalPrice price={product.price} />\n                </s>\n              </div>\n            ) : (\n              <span className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                <NormalPrice price={product.price} />\n              </span>\n            )}\n          </div>\n\n          <div className=\"flex gap-2 mt-4\">\n            <Link\n              href={product.detailsUrl || \"#\"}\n              className={cn(\n                \"flex-1 text-center px-4 py-2 text-sm font-medium border border-gray-800 rounded hover:bg-gray-800 hover:text-white dark:border-gray-200 dark:hover:bg-gray-200 dark:hover:text-gray-800 transition-colors\",\n                isClicked\n                  ? \"bg-gray-800 text-white dark:bg-gray-200 dark:text-gray-800\"\n                  : \"\"\n              )}\n              onClick={handleDetailsClick}\n            >\n              More Details\n            </Link>\n\n            <button\n              onClick={handleAddToCart}\n              className=\"bg-black rounded py-1 px-2 flex items-center justify-center\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 576 512\"\n                width={20}\n                height={20}\n                fill=\"white\"\n              >\n                <path d=\"M0 24C0 10.7 10.7 0 24 0H69.5c22 0 41.5 12.8 50.6 32h411c26.3 0 45.5 25 38.6 50.4l-41 152.3c-8.5 31.4-37 53.3-69.5 53.3H170.7l5.4 28.5c2.2 11.3 12.1 19.5 23.6 19.5H488c13.3 0 24 10.7 24 24s-10.7 24-24 24H199.7c-34.6 0-64.3-24.6-70.7-58.5L77.4 54.5c-.7-3.8-4-6.5-7.9-6.5H24C10.7 48 0 37.3 0 24zM128 464a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm336-48a48 48 0 1 1 0 96 48 48 0 1 1 0-96z\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductCard\n",
        "language": "tsx"
      },
      "@/registry/view/products-carousel-1/components/product-carousel": {
        "content": "import {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselNext,\n  CarouselPrevious,\n} from \"@/components/ui/carousel\"\n\nimport { products } from \"../constant\"\nimport ProductCard from \"./product-card\"\n\nconst ProductCarousel = () => {\n  return (\n    <Carousel className=\"w-full\">\n      <CarouselContent>\n        {products.map((product, index) => (\n          <CarouselItem\n            key={index}\n            className=\"sm:basis-1/2 md:basis-1/3 lg:basis-1/4 xl:basis-1/5\"\n          >\n            <ProductCard\n              product={product}\n              showBadge={true}\n              showShipping={true}\n            />\n          </CarouselItem>\n        ))}\n      </CarouselContent>\n      <CarouselPrevious className=\"ml-9 h-10 w-10 bg-slate-50 text-gray-950\" />\n      <CarouselNext className=\"mr-9 h-10 w-10 bg-slate-50 text-gray-950\" />\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n",
        "language": "tsx"
      }
    },
    "constant": {
      "@/registry/view/products-carousel-1/constant/index": {
        "content": "export const products = [\n  {\n    productId: \"product-jy-535-5w\",\n    productName: \"Product-JY-535-5W\",\n    productImages: [\n      \"/blocks/product-carousel/jy-535-5w/JY-535-5W (1).png\",\n      \"/blocks/product-carousel/jy-535-5w/JY-535-5W (2).png\",\n    ],\n    productDescription:\n      \"Product-JY-535-5W is a high-quality indoor product with advanced features.\",\n    price: 500,\n    productDiscount: 0.1,\n    detailsUrl: \"/products/jy-535-5w\",\n  },\n  {\n    productId: \"product-jy-539-7w\",\n    productName: \"Product-JY-539-7W\",\n    productImages: [\n      \"/blocks/product-carousel/jy-539-7w/JY-539-7W (1).png\",\n      \"/blocks/product-carousel/jy-539-7w/JY-539-7W (2).png\",\n    ],\n    productDescription:\n      \"High-performance lighting solution for modern interiors.\",\n    price: 750,\n    productDiscount: 0.1,\n    detailsUrl: \"/products/jy-539-7w\",\n  },\n  {\n    productId: \"product-jy-540-7w\",\n    productName: \"Product-JY-540-7W\",\n    productImages: [\n      \"/blocks/product-carousel/jy-540-7w/JY-540-7W (1).png\",\n      \"/blocks/product-carousel/jy-540-7w/JY-540-7W (2).png\",\n    ],\n    productDescription: \"Energy efficient lighting with sleek design.\",\n    price: 750,\n    productDiscount: 0.1,\n    detailsUrl: \"/products/jy-540-7w\",\n  },\n  {\n    productId: \"product-jy-595-44w\",\n    productName: \"Product-JY-595-44W\",\n    productImages: [\n      \"/blocks/product-carousel/jy-595-44w/JY-595-44W (1).png\",\n      \"/blocks/product-carousel/jy-595-44w/JY-595-44W (2).png\",\n    ],\n    productDescription:\n      \"Product-JY-595-44W is a high-quality indoor product with advanced features.\",\n    price: 900,\n    productDiscount: 0.1,\n    detailsUrl: \"/products/jy-595-44w\",\n  },\n  {\n    productId: \"product-jy-595-48w\",\n    productName: \"Product-JY-595-48W\",\n    productImages: [\n      \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\n      \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\n    ],\n    productDescription:\n      \"Product-JY-595-48W is a high-quality indoor product with advanced features.\",\n    price: 1100,\n    productDiscount: 0.1,\n    detailsUrl: \"/products/jy-595-48w\",\n  },\n  {\n    productId: \"product-jy-595-48w\",\n    productName: \"Product-JY-595-48W\",\n    productImages: [\n      \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\n      \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\n    ],\n    productDescription:\n      \"Product-JY-595-48W is a high-quality indoor product with advanced features.\",\n    price: 1100,\n    productDiscount: 0.1,\n    detailsUrl: \"/products/jy-595-48w\",\n  },\n  {\n    productId: \"product-jy-595-48w\",\n    productName: \"Product-JY-595-48W\",\n    productImages: [\n      \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\n      \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\n    ],\n    productDescription:\n      \"Product-JY-595-48W is a high-quality indoor product with advanced features.\",\n    price: 1100,\n    productDiscount: 0.1,\n    detailsUrl: \"/products/jy-595-48w\",\n  },\n  {\n    productId: \"product-jy-595-48w\",\n    productName: \"Product-JY-595-48W\",\n    productImages: [\n      \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\n      \"/blocks/product-carousel/jy-595-48w/JY-595-48W (1).png\",\n    ],\n    productDescription:\n      \"Product-JY-595-48W is a high-quality indoor product with advanced features.\",\n    price: 1100,\n    productDiscount: 0.1,\n    detailsUrl: \"/products/jy-595-48w\",\n  },\n]\n",
        "language": "tsx"
      }
    },
    "lib": {
      "@/registry/view/products-carousel-1/lib/utils.ts": {
        "content": "// this for formatting the price in the product overview page for your country currency\nexport const formatPrice = (price: number) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"EGP\",\n    useGrouping: false,\n  })\n  return formatter.format(price)\n}\n",
        "language": "typescript"
      }
    },
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/products-carousel-1/page": {
      "content": "import Container from \"@/components/Container\"\n\nimport ProductCarousel from \"./components/product-carousel\"\n\nconst page = () => {\n  return (\n    <div className=\"py-10 md:py-16 lg:py-20\">\n      <Container>\n        <ProductCarousel />\n      </Container>\n    </div>\n  )\n}\n\nexport default page\n",
      "language": "tsx"
    }
  },
  "products-list-1": {
    "components": {
      "@/registry/view/products-list-1/components/product-list": {
        "content": "import Image from \"next/image\"\nimport Link from \"next/link\"\nimport { products } from \"@/registry/view/products-list-1/constant\"\nimport { MoveLeft, MoveRight } from \"lucide-react\"\n\nimport Container from \"@/components/Container\"\n\nimport { Sidebar } from \"./sidebar\"\n\nexport default function ProductsList() {\n  return (\n    <Container>\n      <div className=\"flex items-center justify-between mb-8 max-w-xl  \">\n        <div className=\"space-y-2 \">\n          <h1 className=\"text-3xl font-normal text-neutral-800\">Our Product</h1>\n          <p className=\"text-lg font-light text-muted-foreground \">\n            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Totam ut\n            sequi vitae beatae? Commodi, omnis. Incidunt dolore.\n          </p>\n        </div>\n      </div>\n      <div className=\"flex h-screen border border-border p-2 rounded-lg\">\n        <Sidebar />\n        <main className=\"flex-1  lg:p-8 p-4 overflow-y-auto hide-scrollbar\">\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-6\">\n            {products.map((product) => (\n              <Link\n                href={`/products/${product.id}`}\n                key={product.id}\n                className=\"group rounded-md overflow-hidden transition-all duration-300 hover:opacity-90\"\n              >\n                <div className=\"aspect-square relative\">\n                  <Image\n                    src={product.image}\n                    alt={product.name}\n                    fill\n                    className=\"object-cover\"\n                  />\n                </div>\n                <div className=\"flex justify-between items-center mt-3 mb-1 px-3\">\n                  <p className=\"lg:text-lg md:text-base sm:text-sm text-neutral-700\">\n                    {product.name}\n                  </p>\n                  <p className=\"lg:text-lg md:text-base sm:text-sm font-medium text-neutral-700\">\n                    ${product.price}\n                  </p>\n                </div>\n              </Link>\n            ))}\n          </div>\n          <div className=\"flex items-center justify-between gap-4 mt-16\">\n            <button className=\"py-3 px-8  rounded-md hover:bg-gray-200 transition-colors\">\n              <MoveLeft size={20} />\n            </button>\n            <div className=\"flex space-x-2\">\n              <span className=\"w-8 h-2 bg-gray-950 rounded-full cursor-pointer\" />\n              <span className=\"w-2 h-2 bg-gray-300 rounded-full cursor-pointer\" />\n              <span className=\"w-2 h-2 bg-gray-300 rounded-full cursor-pointer\" />\n              <span className=\"w-2 h-2 bg-gray-300 rounded-full cursor-pointer\" />\n            </div>\n            <button className=\"py-3 px-8 rounded-md hover:bg-gray-200 transition-colors\">\n              <MoveRight size={20} />\n            </button>\n          </div>\n        </main>\n      </div>\n    </Container>\n  )\n}\n",
        "language": "tsx"
      },
      "@/registry/view/products-list-1/components/sidebar": {
        "content": "\"use client\"\n\nimport type React from \"react\"\nimport { useCallback, useRef, useState } from \"react\"\nimport Link from \"next/link\"\nimport { motion } from \"framer-motion\"\nimport {\n  Armchair,\n  Bath,\n  Bed,\n  Crown,\n  Facebook,\n  Instagram,\n  Layers,\n  Mail,\n  PanelLeftOpen,\n  PanelRightOpen,\n  Sparkles,\n  Star,\n  SwatchBook,\n  TreePine,\n  UtensilsCrossed,\n} from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\ninterface SidebarItemProps {\n  icon: React.ReactNode\n  label: string\n  isActive?: boolean\n  href: string\n}\n\nconst SidebarItem = ({\n  icon,\n  label,\n  isActive = false,\n  href,\n}: SidebarItemProps) => {\n  return (\n    <Link\n      href={href}\n      className={cn(\n        \"flex items-center gap-3 px-4 py-2 rounded-md transition-colors\",\n        isActive\n          ? \"bg-primary text-primary-foreground\"\n          : \"hover:bg-accent text-muted-foreground\"\n      )}\n    >\n      <span className=\"w-5 h-5 text-current\">{icon}</span>\n      <span className=\"text-sm font-medium\">{label}</span>\n    </Link>\n  )\n}\n\ninterface SidebarSectionProps {\n  title: string\n  children: React.ReactNode\n}\n\nconst SidebarSection = ({ title, children }: SidebarSectionProps) => {\n  return (\n    <div className=\"mt-6 px-4\">\n      <h3 className=\"text-xs font-semibold tracking-wider text-gray-300 dark:text-gray-500 mb-2\">\n        {title}\n      </h3>\n      <div className=\"space-y-1\">{children}</div>\n    </div>\n  )\n}\n\nexport function Sidebar() {\n  const [isOpenSidebar, setIsOpenSidebar] = useState(true)\n  const toggleSidebar = useCallback(() => {\n    setIsOpenSidebar((prevState) => !prevState)\n  }, [])\n\n  const sidebarVariants = {\n    open: {\n      width: 280,\n      opacity: 1,\n      transition: { duration: 0.3 },\n    },\n    closed: {\n      width: 0,\n      opacity: 0,\n      transition: { duration: 0.3 },\n    },\n  }\n\n  return (\n    <>\n      {!isOpenSidebar && (\n        <button\n          onClick={toggleSidebar}\n          aria-label=\"Open sidebar\"\n          className=\"relative top-2 left-0 z-20 p-2 border-r border-border bg-background hover:bg-accent transition-colors flex items-center justify-center\"\n        >\n          <PanelLeftOpen className=\"w-5 h-5 text-foreground\" />\n        </button>\n      )}\n      <motion.aside\n        initial={isOpenSidebar ? \"open\" : \"closed\"}\n        animate={isOpenSidebar ? \"open\" : \"closed\"}\n        variants={sidebarVariants}\n        className={cn(\n          \"w-64 h-full border-r border-border sticky top-0 flex flex-col\",\n          isOpenSidebar ? \"open\" : \"closed\"\n        )}\n      >\n        <div className=\"px-6 py-8 flex justify-between items-center border-b border-border\">\n          <h1 className=\"text-xl font-semibold uppercase\">UniqueBrand</h1>\n          {isOpenSidebar && (\n            <button\n              onClick={toggleSidebar}\n              aria-label=\"Close sidebar\"\n              className=\"p-1.5 rounded-md hover:bg-accent transition-colors\"\n            >\n              <PanelRightOpen className=\"w-5 h-5 text-foreground\" />\n            </button>\n          )}\n        </div>\n        <nav className=\"flex-1 overflow-y-auto hide-scrollbar\">\n          <SidebarSection title=\"\">\n            <SidebarItem\n              icon={<Star size={18} />}\n              label=\"Popular\"\n              isActive\n              href=\"#\"\n            />\n            <SidebarItem\n              icon={<Sparkles size={18} />}\n              label=\"New Collection\"\n              href=\"#\"\n            />\n            <SidebarItem\n              icon={<Armchair size={18} />}\n              label=\"Custom Furniture\"\n              href=\"#\"\n            />\n          </SidebarSection>\n          <SidebarSection title=\"MATERIAL\">\n            <SidebarItem icon={<TreePine size={18} />} label=\"Wood\" href=\"#\" />\n            <SidebarItem icon={<Layers size={18} />} label=\"Glass\" href=\"#\" />\n            <SidebarItem\n              icon={<SwatchBook size={18} />}\n              label=\"Fabric\"\n              href=\"#\"\n            />\n          </SidebarSection>\n          <SidebarSection title=\"PACKAGE\">\n            <SidebarItem icon={<Crown size={18} />} label=\"Brand\" href=\"#\" />\n            <SidebarItem icon={<Bed size={18} />} label=\"Bedroom\" href=\"#\" />\n            <SidebarItem icon={<Bath size={18} />} label=\"Bathroom\" href=\"#\" />\n            <SidebarItem\n              icon={<UtensilsCrossed size={18} />}\n              label=\"Kitchen Sets\"\n              href=\"#\"\n            />\n          </SidebarSection>\n          <SidebarSection title=\"CONTACT\">\n            <SidebarItem\n              icon={<Facebook size={18} />}\n              label=\"Facebook\"\n              href=\"#\"\n            />\n            <SidebarItem\n              icon={<Instagram size={18} />}\n              label=\"Instagram\"\n              href=\"#\"\n            />\n            <SidebarItem icon={<Mail size={18} />} label=\"Email\" href=\"#\" />\n          </SidebarSection>\n        </nav>\n      </motion.aside>\n    </>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {
      "@/registry/view/products-list-1/constant/index": {
        "content": "interface Product {\n  id: string\n  name: string\n  price: number\n  image: string\n}\n\nexport const products: Product[] = [\n  {\n    id: \"1\",\n    name: \"Radiant Glow Lamp\",\n    price: 30,\n    image: \"/blocks/products-list-1/image-1.jpg\",\n  },\n  {\n    id: \"2\",\n    name: \"Breeze Recliner\",\n    price: 59,\n    image: \"/blocks/products-list-1/image-2.jpg\",\n  },\n  {\n    id: \"3\",\n    name: \"Vista Armchair\",\n    price: 40,\n    image: \"/blocks/products-list-1/image-3.jpg\",\n  },\n  {\n    id: \"4\",\n    name: \"Eden Comfort Seat\",\n    price: 60,\n    image: \"/blocks/products-list-1/image-4.jpg\",\n  },\n  {\n    id: \"5\",\n    name: \"Crestwood Chair\",\n    price: 59,\n    image: \"/blocks/products-list-1/image-5.jpg\",\n  },\n  {\n    id: \"6\",\n    name: \"Dining Chair With Arms\",\n    price: 45,\n    image: \"/blocks/products-list-1/image-6.jpg\",\n  },\n  {\n    id: \"7\",\n    name: \"Floor Lamp\",\n    price: 50,\n    image: \"/blocks/products-list-1/image-7.jpg\",\n  },\n  {\n    id: \"8\",\n    name: \"Luxe Lounger\",\n    price: 48,\n    image: \"/blocks/products-list-1/image-8.jpg\",\n  },\n  {\n    id: \"9\",\n    name: \"Outdoor Armchair\",\n    price: 47,\n    image: \"/blocks/products-list-1/image-9.jpg\",\n  },\n]\n",
        "language": "tsx"
      }
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/products-list-1/page": {
      "content": "import Container from \"@/components/Container\"\n\nimport ProductsList from \"./components/product-list\"\n\nconst page = () => {\n  return (\n    <div className=\"py-10 md:py-16 lg:py-20\">\n      <Container>\n        <ProductsList />\n      </Container>\n    </div>\n  )\n}\n\nexport default page\n",
      "language": "tsx"
    }
  },
  "service-1": {
    "components": {
      "@/registry/view/service-1/components/service": {
        "content": "\"use client\"\n\nimport { useEffect, useRef, useState } from \"react\"\nimport Link from \"next/link\"\nimport gsap from \"gsap\"\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\"\nimport { MoveRight } from \"lucide-react\"\n\nimport Container from \"@/components/Container\"\n\nimport { services } from \"../constant\"\n\ngsap.registerPlugin(ScrollTrigger)\nexport default function Services() {\n  const [activeService, setActiveService] = useState<number>(2)\n  const sectionRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    const ctx = gsap.context(() => {\n      gsap.fromTo(\n        \".service-card\",\n        { y: 50, opacity: 0 },\n        {\n          y: 0,\n          opacity: 1,\n          duration: 0.8,\n          stagger: 0.3,\n          ease: \"power4.out\",\n          scrollTrigger: {\n            trigger: sectionRef.current,\n            start: \"top 80%\",\n            end: \"top 30%\",\n            toggleActions: \"play none none none\",\n          },\n        }\n      )\n    }, sectionRef)\n    return () => ctx.revert()\n  }, [])\n\n  return (\n    <section\n      className=\"bg-background text-foreground py-20 relative overflow-hidden\"\n      ref={sectionRef}\n    >\n      <Container>\n        <span className=\"text-sm uppercase tracking-wider text-muted-foreground\">\n          OUR SERVICES\n        </span>\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mt-6\">\n          <div>\n            <h2 className=\"text-4xl md:text-5xl lg:text-6xl font-bold leading-tight\">\n              What <span className=\"text-primary\">Services</span>\n              <br />\n              We&apos;re Offering\n            </h2>\n          </div>\n          <div className=\"hidden lg:block relative\">\n            <p className=\"text-muted-foreground mt-6 max-w-xl leading-6\">\n              We empower businesses to thrive online. Our services enhance\n              online visibility, expand market reach, and boost revenue through\n              effective digital strategies.\n            </p>\n          </div>\n        </div>\n        <div className=\"mt-16 space-y-4 md:space-y-6\">\n          {services.map((service, index) => (\n            <div\n              key={service.title}\n              className={`service-card border-b border-border pb-4 md:pb-6`}\n              onMouseEnter={() => setActiveService(index)}\n            >\n              <div className=\"group flex items-center justify-between cursor-pointer\">\n                <Link href={service.link} className=\"space-y-2 flex-1\">\n                  <h3\n                    className={`text-xl md:text-2xl lg:text-3xl font-medium transition-colors duration-300 ${\n                      activeService === index\n                        ? \"text-foreground\"\n                        : \"text-muted-foreground group-hover:text-foreground\"\n                    }`}\n                  >\n                    {service.title}\n                  </h3>\n                  <p\n                    className={`text-base md:text-lg leading-5 font-normal lg:leading-[1.4] transition-all duration-500 md:max-w-xl max-w-xs overflow-hidden ${\n                      activeService === index\n                        ? \"text-muted-foreground h-auto opacity-100\"\n                        : \"h-0 opacity-0\"\n                    }`}\n                  >\n                    {service.description}\n                  </p>\n                </Link>\n                <MoveRight\n                  className={`w-6 h-6 transition-transform duration-500 ${\n                    activeService === index\n                      ? \"opacity-100 translate-x-0\"\n                      : \"opacity-0 -translate-x-6\"\n                  }`}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </Container>\n    </section>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {
      "@/registry/view/service-1/constant/index": {
        "content": "export const services: Service[] = [\n  {\n    id: \"uiux-design\",\n    link: \"/services/uiux-design\",\n    title: \"UI&UX Design\",\n    subtitle: \"Creating seamless user experiences\",\n    description:\n      \"We specialize in crafting intuitive and visually appealing digital experiences that align with user needs and business goals. Our design process ensures your product stands out while delivering exceptional usability.\",\n    showTags: true,\n    iconColor: \"text-teal-500\",\n  },\n  {\n    id: \"web-development\",\n    link: \"/services/web-development\",\n    title: \"Web Development\",\n    subtitle: \"Building modern, high-performing websites\",\n    description:\n      \"Our team develops high-performance and scalable websites and web applications tailored to meet your business requirements, utilizing the latest technologies and best practices.\",\n    showTags: true,\n    iconColor: \"text-blue-500\",\n  },\n  {\n    id: \"hosting-and-domain\",\n    link: \"/services/hosting-and-domain\",\n    title: \"Hosting & Domain\",\n    subtitle: \"Reliable hosting and domain services\",\n    description:\n      \"Our hosting and domain registration services guarantee reliability, scalability, and security, providing the foundation your online presence needs to thrive.\",\n    showTags: false,\n    iconColor: \"text-yellow-500\",\n  },\n  {\n    id: \"mvp-development\",\n    link: \"/services/mvp\",\n    title: \"MVP Development\",\n    subtitle: \"Bring your ideas to life quickly\",\n    description:\n      \"Our MVP development service enables you to rapidly test market assumptions and gather user feedback with functional, prototype-level solutions designed to scale.\",\n    showTags: true,\n    iconColor: \"text-green-500\",\n  },\n]\n",
        "language": "tsx"
      }
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/service-1/page": {
      "content": "import Services from \"./components/service\"\n\nconst page = () => {\n  return <Services />\n}\n\nexport default page\n",
      "language": "tsx"
    }
  },
  "signup-1": {
    "components": {
      "@/registry/view/signup-1/components/signup-form": {
        "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport type React from \"react\"\nimport Link from \"next/link\"\nimport { Eye, EyeOff } from \"lucide-react\"\nimport { FcGoogle } from \"react-icons/fc\"\n\nimport { cn } from \"@/lib/utils\"\nimport Container from \"@/components/Container\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Progress } from \"@/components/ui/progress\"\n\nexport function SignUpForm({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<\"div\">) {\n  const [password, setPassword] = useState(\"\")\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n  const [passwordStrength, setPasswordStrength] = useState({\n    score: 0,\n    message: \"Enter a password\",\n    color: \"bg-gray-200\",\n  })\n\n  const checkPasswordStrength = (password: string) => {\n    // Initialize score\n    let score = 0\n    let message = \"\"\n    let color = \"bg-gray-200\"\n\n    // Check if password is empty\n    if (password.length === 0) {\n      return { score: 0, message: \"Enter a password\", color: \"bg-gray-200\" }\n    }\n\n    // Check length\n    if (password.length < 8) {\n      score += 1\n      message = \"Weak - Too short\"\n      color = \"bg-red-500\"\n    } else {\n      score += 2\n    }\n\n    // Check for numbers\n    if (/\\d/.test(password)) {\n      score += 1\n    }\n\n    // Check for lowercase letters\n    if (/[a-z]/.test(password)) {\n      score += 1\n    }\n\n    // Check for uppercase letters\n    if (/[A-Z]/.test(password)) {\n      score += 1\n    }\n\n    // Check for special characters\n    if (/[^A-Za-z0-9]/.test(password)) {\n      score += 1\n    }\n\n    // Determine strength message and color based on score\n    if (score < 3) {\n      message = \"Weak\"\n      color = \"bg-red-500\"\n    } else if (score < 5) {\n      message = \"Medium\"\n      color = \"bg-yellow-500\"\n    } else {\n      message = \"Strong\"\n      color = \"bg-green-500\"\n    }\n\n    // Normalize score to percentage for progress bar (max score is 6)\n    const normalizedScore = Math.min(Math.floor((score / 6) * 100), 100)\n\n    return { score: normalizedScore, message, color }\n  }\n\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newPassword = e.target.value\n    setPassword(newPassword)\n    setPasswordStrength(checkPasswordStrength(newPassword))\n  }\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword)\n  }\n\n  const toggleConfirmPasswordVisibility = () => {\n    setShowConfirmPassword(!showConfirmPassword)\n  }\n\n  return (\n    <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\n      <Container>\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-2xl\">Sign Up</CardTitle>\n            <CardDescription>Create an account to get started</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <form>\n              <div className=\"flex flex-col gap-6\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"name\">Full Name</Label>\n                  <Input\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"John Doe\"\n                    required\n                  />\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"email\">Email</Label>\n                  <Input\n                    id=\"email\"\n                    type=\"email\"\n                    placeholder=\"m@example.com\"\n                    required\n                  />\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"password\">Password</Label>\n                  <div className=\"relative\">\n                    <Input\n                      id=\"password\"\n                      type={showPassword ? \"text\" : \"password\"}\n                      value={password}\n                      onChange={handlePasswordChange}\n                      required\n                    />\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                      onClick={togglePasswordVisibility}\n                      aria-label={\n                        showPassword ? \"Hide password\" : \"Show password\"\n                      }\n                    >\n                      {showPassword ? (\n                        <EyeOff className=\"h-4 w-4 text-gray-500\" />\n                      ) : (\n                        <Eye className=\"h-4 w-4 text-gray-500\" />\n                      )}\n                      <span className=\"sr-only\">\n                        {showPassword ? \"Hide password\" : \"Show password\"}\n                      </span>\n                    </Button>\n                  </div>\n                  <div className=\"mt-2\">\n                    <div className=\"flex items-center justify-between mb-1\">\n                      <span className=\"text-sm\">Password strength:</span>\n                      <span\n                        className={`text-sm font-medium ${\n                          passwordStrength.message === \"Weak\"\n                            ? \"text-red-500\"\n                            : passwordStrength.message === \"Medium\"\n                              ? \"text-yellow-500\"\n                              : passwordStrength.message === \"Strong\"\n                                ? \"text-green-500\"\n                                : \"text-gray-500\"\n                        }`}\n                      >\n                        {passwordStrength.message}\n                      </span>\n                    </div>\n                    <Progress\n                      value={passwordStrength.score}\n                      className=\"h-2\"\n                      indicatorClassName={passwordStrength.color}\n                    />\n                    <p className=\"mt-1 text-xs text-gray-500\">\n                      Use 8+ characters with a mix of letters, numbers & symbols\n                    </p>\n                  </div>\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\n                  <div className=\"relative\">\n                    <Input\n                      id=\"confirmPassword\"\n                      type={showConfirmPassword ? \"text\" : \"password\"}\n                      required\n                    />\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"icon\"\n                      className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                      onClick={toggleConfirmPasswordVisibility}\n                      aria-label={\n                        showConfirmPassword\n                          ? \"Hide confirm password\"\n                          : \"Show confirm password\"\n                      }\n                    >\n                      {showConfirmPassword ? (\n                        <EyeOff className=\"h-4 w-4 text-gray-500\" />\n                      ) : (\n                        <Eye className=\"h-4 w-4 text-gray-500\" />\n                      )}\n                      <span className=\"sr-only\">\n                        {showConfirmPassword\n                          ? \"Hide confirm password\"\n                          : \"Show confirm password\"}\n                      </span>\n                    </Button>\n                  </div>\n                </div>\n                <Button type=\"submit\" className=\"w-full\">\n                  Sign Up\n                </Button>\n                <Button variant=\"outline\" className=\"w-full\">\n                  <FcGoogle className=\"inline-block \" />\n                  Sign Up with Google\n                </Button>\n              </div>\n              <div className=\"mt-4 text-center text-sm\">\n                Already have an account?{\" \"}\n                <Link\n                  href=\"/ui-blocks/login-1\"\n                  className=\"underline underline-offset-4\"\n                >\n                  Login\n                </Link>\n              </div>\n            </form>\n          </CardContent>\n        </Card>\n      </Container>\n    </div>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/signup-1/page": {
      "content": "import { SignUpForm } from \"./components/signup-form\"\n\nexport default function SignUpPage() {\n  return (\n    <div className=\"flex min-h-svh flex-col items-center justify-center py-10 md:py-16 lg:py-20\">\n      <SignUpForm className=\"w-full max-w-md\" />\n    </div>\n  )\n}\n",
      "language": "tsx"
    }
  },
  "signup-2": {
    "components": {
      "@/registry/view/signup-2/components/signup-1": {
        "content": "\"use client\"\n\nimport type React from \"react\"\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { ArrowLeft, Eye, EyeOff } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\n\nexport function SignUpForm({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n\n  const togglePasswordVisibility = () => setShowPassword((prev) => !prev)\n  const toggleConfirmPasswordVisibility = () =>\n    setShowConfirmPassword((prev) => !prev)\n\n  return (\n    <div className={cn(\"flex flex-col gap-6 py-12\", className)} {...props}>\n      <Link\n        href=\"/\"\n        className=\"absolute top-4 left-4 text-foreground hover:text-primary transition-colors\"\n      >\n        <span className=\"flex items-center\">\n          <ArrowLeft className=\"mr-2 w-5 h-5\" />\n          Back to Home\n        </span>\n      </Link>\n      <Card className=\"overflow-hidden\">\n        <CardContent className=\"grid p-0 md:grid-cols-2\">\n          <form className=\"p-6 md:p-8\">\n            <div className=\"flex flex-col gap-6\">\n              <div className=\"flex flex-col items-center text-center\">\n                <h1 className=\"text-2xl font-bold\">Create an account</h1>\n                <p className=\"text-balance text-muted-foreground\">\n                  Sign up for your Acme Inc account\n                </p>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"firstName\">First Name</Label>\n                  <Input\n                    id=\"firstName\"\n                    type=\"text\"\n                    placeholder=\"John\"\n                    required\n                  />\n                </div>\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"lastName\">Last Name</Label>\n                  <Input id=\"lastName\" type=\"text\" placeholder=\"Doe\" required />\n                </div>\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"email\">Email</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"m@example.com\"\n                  required\n                />\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"password\">Password</Label>\n                <div className=\"relative\">\n                  <Input\n                    id=\"password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    required\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                    onClick={togglePasswordVisibility}\n                    aria-label={\n                      showPassword ? \"Hide password\" : \"Show password\"\n                    }\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\n                    ) : (\n                      <Eye className=\"h-5 w-5 text-muted-foreground\" />\n                    )}\n                    <span className=\"sr-only\">\n                      {showPassword ? \"Hide password\" : \"Show password\"}\n                    </span>\n                  </Button>\n                </div>\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"confirmPassword\">Confirm Password</Label>\n                <div className=\"relative\">\n                  <Input\n                    id=\"confirmPassword\"\n                    type={showConfirmPassword ? \"text\" : \"password\"}\n                    required\n                  />\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                    onClick={toggleConfirmPasswordVisibility}\n                    aria-label={\n                      showConfirmPassword ? \"Hide password\" : \"Show password\"\n                    }\n                  >\n                    {showConfirmPassword ? (\n                      <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\n                    ) : (\n                      <Eye className=\"h-5 w-5 text-muted-foreground\" />\n                    )}\n                    <span className=\"sr-only\">\n                      {showConfirmPassword ? \"Hide password\" : \"Show password\"}\n                    </span>\n                  </Button>\n                </div>\n              </div>\n              <Button type=\"submit\" className=\"w-full\">\n                Sign Up\n              </Button>\n              <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\n                <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\n                  Or continue with\n                </span>\n              </div>\n              <div className=\"grid grid-cols-3 gap-4\">\n                <Button variant=\"outline\" className=\"w-full\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                    <path\n                      d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\n                      fill=\"currentColor\"\n                    />\n                  </svg>\n                  <span className=\"sr-only\">Sign up with Apple</span>\n                </Button>\n                <Button variant=\"outline\" className=\"w-full\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                    <path\n                      d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\n                      fill=\"currentColor\"\n                    />\n                  </svg>\n                  <span className=\"sr-only\">Sign up with Google</span>\n                </Button>\n                <Button variant=\"outline\" className=\"w-full\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    width={30}\n                    height={30}\n                  >\n                    <path\n                      d=\"M6.915 4.03c-1.968 0-3.683 1.28-4.871 3.113C.704 9.208 0 11.883 0 14.449c0 .706.07 1.369.21 1.973a6.624 6.624 0 0 0 .265.86 5.297 5.297 0 0 0 .371.761c.696 1.159 1.818 1.927 3.593 1.927 1.497 0 2.633-.671 3.965-2.444.76-1.012 1.144-1.626 2.663-4.32l.756-1.339.186-.325c.061.1.121.196.183.3l2.152 3.595c.724 1.21 1.665 2.556 2.47 3.314 1.046.987 1.992 1.22 3.06 1.22 1.075 0 1.876-.355 2.455-.843a3.743 3.743 0 0 0 .81-.973c.542-.939.861-2.127.861-3.745 0-2.72-.681-5.357-2.084-7.45-1.282-1.912-2.957-2.93-4.716-2.93-1.047 0-2.088.467-3.053 1.308-.652.57-1.257 1.29-1.82 2.05-.69-.875-1.335-1.547-1.958-2.056-1.182-.966-2.315-1.303-3.454-1.303zm10.16 2.053c1.147 0 2.188.758 2.992 1.999 1.132 1.748 1.647 4.195 1.647 6.4 0 1.548-.368 2.9-1.839 2.9-.58 0-1.027-.23-1.664-1.004-.496-.601-1.343-1.878-2.832-4.358l-.617-1.028a44.908 44.908 0 0 0-1.255-1.98c.07-.109.141-.224.211-.327 1.12-1.667 2.118-2.602 3.358-2.602zm-10.201.553c1.265 0 2.058.791 2.675 1.446.307.327.737.871 1.234 1.579l-1.02 1.566c-.757 1.163-1.882 3.017-2.837 4.338-1.191 1.649-1.81 1.817-2.486 1.817-.524 0-1.038-.237-1.383-.794-.263-.426-.464-1.13-.464-2.046 0-2.221.63-4.535 1.66-6.088.454-.687.964-1.226 1.533-1.533a2.264 2.264 0 0 1 1.088-.285z\"\n                      fill=\"currentColor\"\n                    />\n                  </svg>\n                  <span className=\"sr-only\">Sign up with Meta</span>\n                </Button>\n              </div>\n              <div className=\"text-center text-sm\">\n                Already have an account?{\" \"}\n                <Link href=\"#\" className=\"underline underline-offset-4\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </form>\n          <div className=\"flex-1 hidden md:block relative\">\n            <img\n              src=\"/blocks/case-studies-1/image-1.jpg\"\n              alt=\"Art Lighting Showcase\"\n              className=\"absolute inset-0 h-full w-full object-cover\"\n            />\n            <div className=\"absolute inset-0 bg-background/60 backdrop-blur-sm flex flex-col justify-end p-8 text-foreground\">\n              <h2 className=\"text-3xl font-bold mb-2\">\n                Create Your Alpha Account\n              </h2>\n              <p className=\"text-sm\">\n                Sign up today and start exploring our curated collection of\n                web developments and software solutions\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n      <div className=\"text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:text-primary\">\n        By clicking sign up, you agree to our{\" \"}\n        <Link href=\"#\">Terms of Service</Link> and{\" \"}\n        <Link href=\"#\">Privacy Policy</Link>.\n      </div>\n    </div>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/signup-2/page": {
      "content": "import Container from \"@/components/Container\"\n\nimport { SignUpForm } from \"./components/signup-1\"\n\nconst page = () => {\n  return (\n    <div className=\"flex min-h-svh flex-col items-center justify-center p-6 md:p-10 bg-gradient-to-br from-primary/20 via-background to-secondary/20\">\n      <Container className=\"w-full max-w-sm md:max-w-3xl\">\n        <SignUpForm />\n      </Container>\n    </div>\n  )\n}\n\nexport default page\n",
      "language": "tsx"
    }
  },
  "signup-3": {
    "components": {
      "@/registry/view/signup-3/components/signup-form": {
        "content": "\"use client\"\n\nimport type React from \"react\"\nimport { useState } from \"react\"\nimport Link from \"next/link\"\nimport { Eye, EyeOff } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\n\nexport function SignupForm({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<\"form\">) {\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n\n  const togglePasswordVisibility = () => setShowPassword((prev) => !prev)\n  const toggleConfirmPasswordVisibility = () =>\n    setShowConfirmPassword((prev) => !prev)\n\n  return (\n    <form className={cn(\"flex flex-col gap-6\", className)} {...props}>\n      <div className=\"flex flex-col items-center gap-2 text-center\">\n        <h1 className=\"text-2xl font-bold\">Create an account</h1>\n        <p className=\"text-balance text-sm text-muted-foreground\">\n          Enter your details below to create your account\n        </p>\n      </div>\n      <div className=\"grid gap-6\">\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"grid gap-2\">\n            <Label htmlFor=\"firstName\">First name</Label>\n            <Input id=\"firstName\" type=\"text\" required />\n          </div>\n          <div className=\"grid gap-2\">\n            <Label htmlFor=\"lastName\">Last name</Label>\n            <Input id=\"lastName\" type=\"text\" required />\n          </div>\n        </div>\n        <div className=\"grid gap-2\">\n          <Label htmlFor=\"email\">Email</Label>\n          <Input id=\"email\" type=\"email\" placeholder=\"m@example.com\" required />\n        </div>\n        <div className=\"grid gap-2\">\n          <Label htmlFor=\"password\">Password</Label>\n          <div className=\"relative\">\n            <Input\n              id=\"password\"\n              type={showPassword ? \"text\" : \"password\"}\n              required\n            />\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\n              onClick={togglePasswordVisibility}\n              aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n            >\n              {showPassword ? (\n                <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\n              ) : (\n                <Eye className=\"h-5 w-5 text-muted-foreground\" />\n              )}\n              <span className=\"sr-only\">\n                {showPassword ? \"Hide password\" : \"Show password\"}\n              </span>\n            </Button>\n          </div>\n        </div>\n        <div className=\"grid gap-2\">\n          <Label htmlFor=\"confirmPassword\">Confirm password</Label>\n          <div className=\"relative\">\n            <Input\n              id=\"confirmPassword\"\n              type={showConfirmPassword ? \"text\" : \"password\"}\n              required\n            />\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\n              onClick={toggleConfirmPasswordVisibility}\n              aria-label={\n                showConfirmPassword ? \"Hide password\" : \"Show password\"\n              }\n            >\n              {showConfirmPassword ? (\n                <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\n              ) : (\n                <Eye className=\"h-5 w-5 text-muted-foreground\" />\n              )}\n              <span className=\"sr-only\">\n                {showConfirmPassword ? \"Hide password\" : \"Show password\"}\n              </span>\n            </Button>\n          </div>\n        </div>\n        <Button type=\"submit\" className=\"w-full\">\n          Sign up\n        </Button>\n        <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\n          <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\n            Or continue with\n          </span>\n        </div>\n        <Button variant=\"outline\" className=\"w-full\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n            <path\n              d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"\n              fill=\"currentColor\"\n            />\n          </svg>\n          Sign up with GitHub\n        </Button>\n      </div>\n      <div className=\"text-center text-sm\">\n        Already have an account?{\" \"}\n        <Link href=\"/login\" className=\"underline underline-offset-4\">\n          Login\n        </Link>\n      </div>\n    </form>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/signup-3/page": {
      "content": "import Link from \"next/link\"\nimport { GalleryVerticalEnd } from \"lucide-react\"\n\nimport { SignupForm } from \"./components/signup-form\"\n\nexport default function SignupPage() {\n  return (\n    <div className=\"grid min-h-svh lg:grid-cols-2\">\n      <div className=\"flex flex-col gap-4 p-6 md:p-10\">\n        <div className=\"flex justify-center gap-2 md:justify-start\">\n          <Link href=\"#\" className=\"flex items-center gap-2 font-medium\">\n            <div className=\"flex h-6 w-6 items-center justify-center rounded-md bg-primary text-primary-foreground\">\n              <GalleryVerticalEnd className=\"size-4\" />\n            </div>\n            UniqueBrand.\n          </Link>\n        </div>\n        <div className=\"flex flex-1 items-center justify-center\">\n          <div className=\"w-full max-w-xs\">\n            <SignupForm />\n          </div>\n        </div>\n      </div>\n      <div className=\"relative hidden bg-muted lg:block\">\n        <img\n          src=\"/blocks/case-studies-1/image-1.jpg\"\n          alt=\"Image\"\n          className=\"absolute inset-0 h-full w-full object-cover\"\n        />\n      </div>\n    </div>\n  )\n}\n",
      "language": "tsx"
    }
  },
  "signup-4": {
    "components": {
      "@/registry/view/signup-4/components/signup-form": {
        "content": "\"use client\"\n\nimport type React from \"react\"\nimport { useState } from \"react\"\nimport { Eye, EyeOff, GalleryVerticalEnd } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\n\nexport function SignupForm({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<\"div\">) {\n  const [showPassword, setShowPassword] = useState(false)\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\n\n  const togglePasswordVisibility = () => setShowPassword((prev) => !prev)\n  const toggleConfirmPasswordVisibility = () =>\n    setShowConfirmPassword((prev) => !prev)\n\n  return (\n    <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\n      <form>\n        <div className=\"flex flex-col gap-6\">\n          <div className=\"flex flex-col items-center gap-2\">\n            <a\n              href=\"#\"\n              className=\"flex flex-col items-center gap-2 font-medium\"\n            >\n              <div className=\"flex h-8 w-8 items-center justify-center rounded-md\">\n                <GalleryVerticalEnd className=\"size-6\" />\n              </div>\n              <span className=\"sr-only\">Acme Inc.</span>\n            </a>\n            <h1 className=\"text-xl font-bold\">Create your Acme Inc. account</h1>\n            <div className=\"text-center text-sm\">\n              Already have an account?{\" \"}\n              <a href=\"/login\" className=\"underline underline-offset-4\">\n                Login\n              </a>\n            </div>\n          </div>\n          <div className=\"flex flex-col gap-6\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"firstName\">First name</Label>\n                <Input id=\"firstName\" type=\"text\" required />\n              </div>\n              <div className=\"grid gap-2\">\n                <Label htmlFor=\"lastName\">Last name</Label>\n                <Input id=\"lastName\" type=\"text\" required />\n              </div>\n            </div>\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"m@example.com\"\n                required\n              />\n            </div>\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"password\">Password</Label>\n              <div className=\"relative\">\n                <Input\n                  id=\"password\"\n                  type={showPassword ? \"text\" : \"password\"}\n                  required\n                />\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                  onClick={togglePasswordVisibility}\n                  aria-label={showPassword ? \"Hide password\" : \"Show password\"}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-muted-foreground\" />\n                  )}\n                  <span className=\"sr-only\">\n                    {showPassword ? \"Hide password\" : \"Show password\"}\n                  </span>\n                </Button>\n              </div>\n            </div>\n            <div className=\"grid gap-2\">\n              <Label htmlFor=\"confirmPassword\">Confirm password</Label>\n              <div className=\"relative\">\n                <Input\n                  id=\"confirmPassword\"\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  required\n                />\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"absolute right-1 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                  onClick={toggleConfirmPasswordVisibility}\n                  aria-label={\n                    showConfirmPassword ? \"Hide password\" : \"Show password\"\n                  }\n                >\n                  {showConfirmPassword ? (\n                    <EyeOff className=\"h-5 w-5 text-muted-foreground\" />\n                  ) : (\n                    <Eye className=\"h-5 w-5 text-muted-foreground\" />\n                  )}\n                  <span className=\"sr-only\">\n                    {showConfirmPassword ? \"Hide password\" : \"Show password\"}\n                  </span>\n                </Button>\n              </div>\n            </div>\n            <Button type=\"submit\" className=\"w-full\">\n              Sign up\n            </Button>\n          </div>\n          <div className=\"relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t after:border-border\">\n            <span className=\"relative z-10 bg-background px-2 text-muted-foreground\">\n              Or\n            </span>\n          </div>\n          <div className=\"grid gap-4 sm:grid-cols-2\">\n            <Button variant=\"outline\" className=\"w-full\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                <path\n                  d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n              Continue with Apple\n            </Button>\n            <Button variant=\"outline\" className=\"w-full\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                <path\n                  d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n              Continue with Google\n            </Button>\n          </div>\n        </div>\n      </form>\n      <div className=\"text-balance text-center text-xs text-muted-foreground [&_a]:underline [&_a]:underline-offset-4 hover:[&_a]:text-primary\">\n        By clicking continue, you agree to our <a href=\"#\">Terms of Service</a>{\" \"}\n        and <a href=\"#\">Privacy Policy</a>.\n      </div>\n    </div>\n  )\n}\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/signup-4/page": {
      "content": "import { SignupForm } from \"./components/signup-form\"\n\nexport default function SignUpPage() {\n  return (\n    <div className=\"flex min-h-svh flex-col items-center justify-center gap-6 bg-background p-6 md:p-10\">\n      <div className=\"w-full max-w-sm\">\n        <SignupForm />\n      </div>\n    </div>\n  )\n}\n",
      "language": "tsx"
    }
  },
  "status-bar-1": {
    "components": {
      "@/registry/view/status-bar-1/components/status-bar": {
        "content": "\"use client\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\nimport { motion } from \"framer-motion\";\r\nimport { CheckCircle, Circle } from \"lucide-react\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport React from \"react\";\r\n\r\nexport default function StatusBar() {\r\n    const pathname = usePathname();\r\n\r\n    const STEPS = [\r\n        {\r\n            name: \"Preview\",\r\n            description: \"Review your product before confirming your order.\",\r\n            url: `/preview`, // Here you put the link (URL) to be active when the user is on the page\r\n        },\r\n        {\r\n            name: \"Confirm\",\r\n            description: \"Enter your shipping address and information.\",\r\n            url: \"/view/status-bar-1\",\r\n        },\r\n        {\r\n            name: \"Complete\",\r\n            description: \"Review your order, shipping price, and all information.\",\r\n            url: \"/complete\",\r\n        },\r\n    ];\r\n\r\n    const getCurrentStepIndex = () => {\r\n        return STEPS.findIndex((step) => pathname.includes(step.url));\r\n    };\r\n\r\n    return (\r\n        <div className=\"bg-gradient-to-r from-neutral-50-50 to-background dark:from-[#1c1a17] dark:to-[#1d1d1d] rounded-lg shadow-md px-4 sm:px-6 pb-8 pt-10 mb-8\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 md:gap-8 gap-4 relative\">\r\n                {STEPS.map((step, i) => {\r\n                    const currentStepIndex = getCurrentStepIndex();\r\n                    const isCurrent = i === currentStepIndex;\r\n                    const isCompleted = i < currentStepIndex;\r\n                    return (\r\n                        <React.Fragment key={step.name}>\r\n                            <motion.div\r\n                                className=\"flex flex-col items-center relative z-10\"\r\n                                initial={{ opacity: 0, y: 20 }}\r\n                                animate={{ opacity: 1, y: 0 }}\r\n                                transition={{ duration: 0.5, delay: i * 0.1 }}\r\n                            >\r\n                                <div\r\n                                    className={cn(\r\n                                        \"flex items-center justify-center md:w-16 md:h-16 w-12 h-12 rounded-full font-medium md:text-xl text-lg transition-colors duration-300\",\r\n                                        {\r\n                                            \"bg-primary text-primary-foreground shadow-lg\": isCurrent,\r\n                                            \"bg-white dark:bg-gray-950 text-primary border-2 border-green-500\":\r\n                                                isCompleted,\r\n                                            \"bg-gray-200 dark:bg-gray-600 text-gray-500 dark:text-gray-400\":\r\n                                                !isCurrent && !isCompleted,\r\n                                        },\r\n                                    )}\r\n                                >\r\n                                    {isCompleted ? (\r\n                                        <CheckCircle className=\"md:w-8 md:h-8 w-6 h-6 text-green-500 dark:text-green-400\" />\r\n                                    ) : (\r\n                                        <Circle className=\"md:w-8 md:h-8 w-6 h-6\" />\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"mt-4 text-center\">\r\n                                    <span\r\n                                        className={cn(\"block md:text-lg text-base font-semibold\", {\r\n                                            \"text-primary dark:text-primary\": isCurrent,\r\n                                            \"text-gray-900 dark:text-gray-200\": !isCurrent,\r\n                                        })}\r\n                                    >\r\n                                        {step.name}\r\n                                    </span>\r\n                                    <span className=\"text-sm text-gray-600 dark:text-gray-400 mt-2 block max-w-xs mx-auto\">\r\n                                        {step.description}\r\n                                    </span>\r\n                                </div>\r\n                            </motion.div>\r\n                            {i === 0 && (\r\n                                <div className=\"hidden md:block absolute top-8 left-1/3 w-1/3 h-0.5 bg-gray-300 dark:bg-gray-700 -translate-y-1/2\" />\r\n                            )}\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/status-bar-1/page": {
      "content": "import StatusBar from \"./components/status-bar\";\r\n\r\nexport default function page() {\r\n    return (\r\n        <div>\r\n            <StatusBar />\r\n        </div>\r\n    )\r\n}",
      "language": "tsx"
    }
  },
  "status-section-1": {
    "components": {
      "@/registry/view/status-section-1/components/status-section": {
        "content": "\"use client\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { AlertTriangle, CheckCircle, ChevronDown, ChevronUp, Info, XCircle } from \"lucide-react\"\r\nimport { useState } from \"react\"\r\n\r\ninterface Service {\r\n    id: string\r\n    name: string\r\n    status: \"operational\" | \"incident\" | \"outage\" | \"unknown\"\r\n    description: string\r\n    details: string\r\n    hasDetails?: boolean\r\n}\r\n\r\ninterface StatusSectionProps {\r\n    title?: string\r\n    services?: Service[]\r\n    showIncidentHistory?: boolean\r\n    onIncidentClick?: () => void\r\n    className?: string\r\n}\r\n\r\nconst StatusSection = ({\r\n    title = \"Status\",\r\n    services = [],\r\n    showIncidentHistory = true,\r\n    onIncidentClick = () => { },\r\n    className = \"\",\r\n}: StatusSectionProps) => {\r\n    const [expandedServices, setExpandedServices] = useState<Set<string>>(new Set())\r\n\r\n    const toggleService = (serviceId: string) => {\r\n        const newExpanded = new Set(expandedServices)\r\n        if (newExpanded.has(serviceId)) {\r\n            newExpanded.delete(serviceId)\r\n        } else {\r\n            newExpanded.add(serviceId)\r\n        }\r\n        setExpandedServices(newExpanded)\r\n    }\r\n\r\n    const getStatusIcon = (status: Service[\"status\"]) => {\r\n        switch (status) {\r\n            case \"operational\":\r\n                return <CheckCircle className=\"w-4 h-4 text-green-600 dark:text-green-400\" />\r\n            case \"incident\":\r\n                return <AlertTriangle className=\"w-4 h-4 text-yellow-600 dark:text-yellow-400\" />\r\n            case \"outage\":\r\n                return <XCircle className=\"w-4 h-4 text-red-600 dark:text-red-400\" />\r\n            default:\r\n                return <Info className=\"w-4 h-4 text-muted-foreground\" />\r\n        }\r\n    }\r\n\r\n    const getStatusColor = (status: Service[\"status\"]) => {\r\n        switch (status) {\r\n            case \"operational\":\r\n                return \"bg-green-500 dark:bg-green-400\"\r\n            case \"incident\":\r\n                return \"bg-yellow-500 dark:bg-yellow-400\"\r\n            case \"outage\":\r\n                return \"bg-red-500 dark:bg-red-400\"\r\n            default:\r\n                return \"bg-muted-foreground\"\r\n        }\r\n    }\r\n\r\n    const getStatusText = (status: Service[\"status\"]) => {\r\n        switch (status) {\r\n            case \"operational\":\r\n                return \"No issues\"\r\n            case \"incident\":\r\n                return \"Incident\"\r\n            case \"outage\":\r\n                return \"Outage\"\r\n            default:\r\n                return \"Unknown\"\r\n        }\r\n    }\r\n\r\n    const defaultServices: Service[] = [\r\n        {\r\n            id: \"login-sso\",\r\n            name: \"Login / SSO\",\r\n            status: \"operational\",\r\n            description: \"Single Sign-On authentication services\",\r\n            details: \"All authentication endpoints are responding normally\",\r\n        },\r\n        {\r\n            id: \"connectivity\",\r\n            name: \"Connectivity\",\r\n            status: \"incident\",\r\n            description: \"Network connectivity and routing\",\r\n            details: \"Something is not quite right. View details\",\r\n            hasDetails: true,\r\n        },\r\n        {\r\n            id: \"listener\",\r\n            name: \"Listener\",\r\n            status: \"operational\",\r\n            description: \"Event listening and processing services\",\r\n            details: \"All listeners are processing events successfully\",\r\n        },\r\n        {\r\n            id: \"parser\",\r\n            name: \"Parser\",\r\n            status: \"operational\",\r\n            description: \"Data parsing and transformation services\",\r\n            details: \"All parsers are functioning optimally\",\r\n        },\r\n        {\r\n            id: \"alerts\",\r\n            name: \"Alerts\",\r\n            status: \"operational\",\r\n            description: \"Notification and alerting system\",\r\n            details: \"Alert delivery systems are fully operational\",\r\n        },\r\n        {\r\n            id: \"web-application\",\r\n            name: \"Web Application\",\r\n            status: \"operational\",\r\n            description: \"Main web application platform\",\r\n            details: \"Web application is running smoothly\",\r\n        },\r\n    ]\r\n\r\n    const activeServices = services.length > 0 ? services : defaultServices\r\n\r\n    return (\r\n        <div className={cn(\"bg-card rounded-lg shadow-sm border border-border transition-colors duration-200\", className)}>\r\n            <div className=\"px-6 py-4 border-b border-border\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center gap-3\">\r\n                        <div className=\"w-8 h-8 bg-accent rounded-lg flex items-center justify-center\">\r\n                            <div className=\"w-4 h-4 bg-primary rounded-sm\" />\r\n                        </div>\r\n                        <h2 className=\"text-lg font-semibold text-foreground\">{title}</h2>\r\n                    </div>\r\n                    {showIncidentHistory && (\r\n                        <button\r\n                            onClick={onIncidentClick}\r\n                            className=\"text-sm text-primary hover:text-primary/80 font-medium transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 focus:ring-offset-background rounded-sm px-1\"\r\n                        >\r\n                            Incident history →\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Incident Banner */}\r\n            <div className=\"px-6 py-4 bg-yellow-50 dark:bg-yellow-950/20 border-b border-yellow-200 dark:border-yellow-800/30\">\r\n                <div className=\"flex items-start gap-3\">\r\n                    <AlertTriangle className=\"w-5 h-5 text-yellow-600 dark:text-yellow-400 mt-0.5 flex-shrink-0\" />\r\n                    <div>\r\n                        <p className=\"text-sm font-medium text-yellow-800 dark:text-yellow-200\">\r\n                            Users may be experiencing issues connecting to Alpha\r\n                        </p>\r\n                        <p className=\"text-xs text-yellow-700 dark:text-yellow-300 mt-1\">\r\n                            Today · 9:21 AM EDT ·\r\n                            <button className=\"ml-1 underline hover:no-underline focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-1 rounded-sm transition-colors duration-200\">\r\n                                See incident details\r\n                            </button>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Status Legend */}\r\n            <div className=\"px-6 py-3 bg-accent/30 border-b border-border\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm font-medium text-foreground\">Current Status by service</span>\r\n                    <div className=\"flex items-center gap-4\">\r\n                        <div className=\"flex items-center gap-1\">\r\n                            <div className=\"w-2 h-2 bg-green-500 dark:bg-green-400 rounded-full\"></div>\r\n                            <span className=\"text-xs text-muted-foreground\">No issues</span>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-1\">\r\n                            <div className=\"w-2 h-2 bg-yellow-500 dark:bg-yellow-400 rounded-full\"></div>\r\n                            <span className=\"text-xs text-muted-foreground\">Incident</span>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-1\">\r\n                            <div className=\"w-2 h-2 bg-red-500 dark:bg-red-400 rounded-full\"></div>\r\n                            <span className=\"text-xs text-muted-foreground\">Outage</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Services List */}\r\n            <div className=\"divide-y divide-border\">\r\n                {activeServices.map((service) => (\r\n                    <div key={service.id} className=\"px-6 py-4\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"flex items-center gap-3 flex-1\">\r\n                                <div className={`w-2 h-2 rounded-full ${getStatusColor(service.status)}`}></div>\r\n                                <div className=\"flex-1\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <h3 className=\"text-sm font-medium text-foreground\">{service.name}</h3>\r\n                                        {service.hasDetails && (\r\n                                            <button\r\n                                                onClick={() => toggleService(service.id)}\r\n                                                className=\"text-muted-foreground hover:text-foreground transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 focus:ring-offset-background rounded-sm p-0.5\"\r\n                                                aria-expanded={expandedServices.has(service.id)}\r\n                                                aria-controls={`service-details-${service.id}`}\r\n                                                aria-label={`${expandedServices.has(service.id) ? \"Collapse\" : \"Expand\"} ${service.name} details`}\r\n                                            >\r\n                                                {expandedServices.has(service.id) ? (\r\n                                                    <ChevronUp className=\"w-4 h-4\" />\r\n                                                ) : (\r\n                                                    <ChevronDown className=\"w-4 h-4\" />\r\n                                                )}\r\n                                            </button>\r\n                                        )}\r\n                                    </div>\r\n                                    <p className=\"text-xs text-muted-foreground mt-0.5\">{getStatusText(service.status)}</p>\r\n                                </div>\r\n                            </div>\r\n                            {getStatusIcon(service.status)}\r\n                        </div>\r\n                        {expandedServices.has(service.id) && service.hasDetails && (\r\n                            <div className=\"mt-3 pl-5 border-l-2 border-border\" id={`service-details-${service.id}`}>\r\n                                <div className=\"bg-accent/50 rounded-lg p-3 border border-border/50\">\r\n                                    <p className=\"text-sm text-foreground\">{service.details}</p>\r\n                                    {service.status === \"incident\" && (\r\n                                        <div className=\"mt-2 pt-2 border-t border-border/50\">\r\n                                            <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\r\n                                                <span>Last updated: 2 minutes ago</span>\r\n                                                <span>•</span>\r\n                                                <button className=\"text-primary hover:text-primary/80 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-1 rounded-sm\">\r\n                                                    Subscribe to updates\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Footer */}\r\n            <div className=\"px-6 py-3 bg-accent/20 border-t border-border rounded-b-lg\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <p className=\"text-xs text-muted-foreground\">Last updated: {new Date().toLocaleString()}</p>\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <button className=\"text-xs text-muted-foreground hover:text-foreground transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-1 rounded-sm px-1\">\r\n                            Subscribe to updates\r\n                        </button>\r\n                        <span className=\"text-xs text-muted-foreground/50\">•</span>\r\n                        <button className=\"text-xs text-muted-foreground hover:text-foreground transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-1 rounded-sm px-1\">\r\n                            Status API\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusSection\r\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/status-section-1/page": {
      "content": "import { useState } from \"react\";\r\nimport StatusSection from \"./components/status-section\";\r\n\r\nconst page = () => {\r\n    const [customServices] = useState([\r\n        {\r\n            id: 'api-gateway',\r\n            name: 'API Gateway',\r\n            status: 'operational',\r\n            description: 'Core API routing and management',\r\n            details: 'All API endpoints are responding within normal parameters'\r\n        },\r\n        {\r\n            id: 'database',\r\n            name: 'Database Cluster',\r\n            status: 'incident',\r\n            description: 'Primary database infrastructure',\r\n            details: 'Experiencing elevated response times. Engineering team investigating.',\r\n            hasDetails: true\r\n        },\r\n        {\r\n            id: 'cdn',\r\n            name: 'Content Delivery Network',\r\n            status: 'operational',\r\n            description: 'Global content distribution network',\r\n            details: 'CDN nodes are performing optimally across all regions'\r\n        }\r\n    ]);\r\n\r\n    const handleIncidentClick = () => {\r\n        console.log('Navigating to incident history...');\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-background p-8\">\r\n            <div className=\"max-w-4xl mx-auto space-y-8\">\r\n                <StatusSection\r\n                    title=\"Alpha / Status\"\r\n                    onIncidentClick={handleIncidentClick}\r\n                />\r\n                <StatusSection\r\n                    title=\"Custom Services Status\"\r\n                    services={customServices}\r\n                    onIncidentClick={handleIncidentClick}\r\n                    className=\"mt-8\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default page;",
      "language": "tsx"
    }
  },
  "subscription-email-1": {
    "components": {
      "@/registry/view/subscription-email-1/components/subscription-email": {
        "content": "\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { useState } from \"react\"\r\nimport { Mail, ArrowRight, Check } from \"lucide-react\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Button } from \"@/components/ui/button\"\r\n\r\ninterface SubscriptionEmailProps {\r\n    className?: string\r\n    headline?: string\r\n    subheadline?: string\r\n    buttonText?: string\r\n    successMessage?: string\r\n}\r\n\r\nexport default function SubscriptionEmail({\r\n    className,\r\n    headline = \"Exclusive Early Access\",\r\n    subheadline = \"Be the first to shop our limited collections and receive personalized style recommendations\",\r\n    buttonText = \"Subscribe\",\r\n    successMessage = \"You're on the list\",\r\n}: SubscriptionEmailProps) {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const [isSubmitted, setIsSubmitted] = useState(false)\r\n    const [isValid, setIsValid] = useState(true)\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n\r\n        // Basic email validation\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n        if (!emailRegex.test(email)) {\r\n            setIsValid(false)\r\n            return\r\n        }\r\n\r\n        setIsSubmitting(true)\r\n\r\n        // Simulate API call\r\n        await new Promise((resolve) => setTimeout(resolve, 1000))\r\n\r\n        setIsSubmitting(false)\r\n        setIsSubmitted(true)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={cn(\r\n                \"w-full max-w-3xl mx-auto rounded-3xl overflow-hidden bg-gradient-to-b from-neutral-50 to-neutral-100 dark:from-neutral-900 dark:to-neutral-950 border border-neutral-200 dark:border-neutral-800\",\r\n                className,\r\n            )}\r\n        >\r\n            <div className=\"px-8 py-12 md:px-12 md:py-16 relative overflow-hidden\">\r\n                {/* Abstract background element */}\r\n                <div className=\"absolute -top-24 -right-24 w-64 h-64 bg-gradient-to-br from-neutral-100 to-neutral-200 dark:from-neutral-800 dark:to-neutral-900 rounded-full opacity-50 blur-3xl\"></div>\r\n\r\n                <div className=\"relative z-10\">\r\n                    <div className=\"flex items-center gap-2 mb-6\">\r\n                        <div className=\"flex items-center justify-center w-10 h-10 rounded-full bg-neutral-900 dark:bg-neutral-100\">\r\n                            <Mail className=\"w-5 h-5 text-neutral-100 dark:text-neutral-900\" />\r\n                        </div>\r\n                    </div>\r\n                    <h2 className=\"text-2xl md:text-3xl font-medium text-neutral-900 dark:text-neutral-100 mb-3 tracking-tight\">\r\n                        {headline}\r\n                    </h2>\r\n                    <p className=\"text-muted-foreground mb-8 max-w-lg\">{subheadline}</p>\r\n                    {!isSubmitted ? (\r\n                        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                            <div className=\"relative\">\r\n                                <Input\r\n                                    type=\"email\"\r\n                                    placeholder=\"Your email address\"\r\n                                    value={email}\r\n                                    onChange={(e) => {\r\n                                        setEmail(e.target.value)\r\n                                        setIsValid(true)\r\n                                    }}\r\n                                    className={cn(\r\n                                        \"h-14 px-5 bg-white dark:bg-neutral-800 border-neutral-200 dark:border-neutral-700 rounded-xl shadow-sm focus-visible:ring-neutral-400 dark:focus-visible:ring-neutral-500\",\r\n                                        !isValid && \"border-red-300 dark:border-red-700 focus-visible:ring-red-400\",\r\n                                    )}\r\n                                />\r\n                                {!isValid && (\r\n                                    <p className=\"text-red-500 dark:text-red-400 text-sm mt-2\">Please enter a valid email address</p>\r\n                                )}\r\n                            </div>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                disabled={isSubmitting || !email}\r\n                                className=\"h-14 px-6 rounded-full bg-neutral-900 hover:bg-black text-white dark:bg-white dark:hover:bg-neutral-200 dark:text-neutral-900 transition-all duration-200 shadow-sm hover:shadow-md w-full md:w-auto\"\r\n                            >\r\n                                {isSubmitting ? (\r\n                                    <span className=\"flex items-center gap-2\">\r\n                                        <span className=\"h-4 w-4 border-2 border-white border-t-transparent dark:border-neutral-900 dark:border-t-transparent rounded-full animate-spin\"></span>\r\n                                        Processing\r\n                                    </span>\r\n                                ) : (\r\n                                    <span className=\"flex items-center gap-2\">\r\n                                        {buttonText}\r\n                                        <ArrowRight className=\"w-4 h-4\" />\r\n                                    </span>\r\n                                )}\r\n                            </Button>\r\n                        </form>\r\n                    ) : (\r\n                        <div className=\"flex items-center gap-3 text-neutral-900 dark:text-neutral-100 bg-neutral-100 dark:bg-neutral-800 py-4 px-5 rounded-xl\">\r\n                            <Check className=\"w-5 h-5 text-green-500\" />\r\n                            <span className=\"font-medium\">{successMessage}</span>\r\n                        </div>\r\n                    )}\r\n                    <p className=\"text-muted-foreground text-xs mt-6\">\r\n                        By subscribing, you agree to our Privacy Policy and consent to receive updates from our company.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/subscription-email-1/page": {
      "content": "import SubscriptionEmail from \"./components/subscription-email\"\r\n\r\nexport default function page() {\r\n    return (\r\n        <main className=\"min-h-screen flex items-center justify-center p-4 md:p-8 bg-white dark:bg-neutral-950\">\r\n            <SubscriptionEmail />\r\n        </main>\r\n    )\r\n}\r\n",
      "language": "tsx"
    }
  },
  "subscription-email-2": {
    "components": {
      "@/registry/view/subscription-email-2/components/subscription-email": {
        "content": "\"use client\"\r\n\r\nimport { Mail } from \"lucide-react\"\r\nimport type React from \"react\"\r\nimport { useState } from \"react\"\r\n\r\nexport default function SubscriptionEmail() {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const [isSubmitted, setIsSubmitted] = useState(false)\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n        setIsSubmitting(true)\r\n\r\n        await new Promise((resolve) => setTimeout(resolve, 1000))\r\n\r\n        setIsSubmitting(false)\r\n        setIsSubmitted(true)\r\n        setEmail(\"\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-6 flex items-center justify-center flex-col\"> \r\n            <div className=\"space-y-2\">\r\n                <h1 className=\"text-4xl md:text-5xl font-semibold tracking-tight\">\r\n                    Exclusive offers.\r\n                    <br />\r\n                    Limited time.\r\n                </h1>\r\n                <p className=\"text-gray-500 mt-4 text-base\">Get early access to our Black Friday deals.</p>\r\n            </div>\r\n            {isSubmitted ? (\r\n                <div className=\"bg-white rounded-full shadow-md p-4 text-center\">\r\n                    <p className=\"text-gray-800\">Thanks for subscribing!</p>\r\n                </div>\r\n            ) : (\r\n                <form onSubmit={handleSubmit} className=\"relative\">\r\n                    <div className=\"bg-white rounded-xl shadow-md flex items-center p-2 pr-2 border border-gray-300\">\r\n                        <div className=\"pl-3 pr-2\">\r\n                            <Mail className=\"h-5 w-5 text-gray-400\" />\r\n                        </div>\r\n                        <input\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            placeholder=\"Email address\"\r\n                            required\r\n                            className=\"flex-1 bg-transparent outline-none text-gray-800 placeholder-gray-400 text-sm md:text-base py-2 px-1\"\r\n                        />\r\n                        <button\r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}\r\n                            className=\"bg-gray-100 hover:bg-gray-200 transition-colors rounded-xl py-2 px-6 text-gray-800 font-medium text-sm md:text-base\"\r\n                        >\r\n                            {isSubmitting ? \"Subscribing...\" : \"Subscribe\"}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/subscription-email-2/page": {
      "content": "import SubscriptionEmail from \"./components/subscription-email\"\r\n\r\nexport default function page() {\r\n    return (\r\n        <main className=\"flex min-h-screen flex-col items-center justify-center p-4 relative overflow-hidden bg-gradient-to-br from-gray-50 via-white to-gray-100 dark:from-gray-950 dark:via-gray-800 dark:to-gray-900\">\r\n            <div className=\"absolute inset-0 bg-gradient-to-br from-gray-50/80 via-white/60 to-gray-100/80 backdrop-blur-3xl dark:from-gray-950/80 dark:via-gray-800/60 dark:to-gray-900/80 dark:backdrop-blur-3xl\" />\r\n            <div className=\"relative z-10 max-w-lg w-full text-center\">\r\n                <SubscriptionEmail />\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n",
      "language": "tsx"
    }
  },
  "subscription-email-3": {
    "components": {
      "@/registry/view/subscription-email-3/components/subscription-email": {
        "content": "\"use client\"\r\n\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { motion } from \"framer-motion\"\r\nimport type React from \"react\"\r\nimport { useState } from \"react\"\r\n\r\ninterface CheckmarkProps {\r\n    size?: number\r\n    strokeWidth?: number\r\n    className?: string\r\n    color?: string\r\n}\r\n\r\nconst draw = {\r\n    hidden: { pathLength: 0, opacity: 0 },\r\n    visible: (i: number) => ({\r\n        pathLength: 1,\r\n        opacity: 1,\r\n        transition: {\r\n            pathLength: {\r\n                delay: i * 0.2,\r\n                type: \"spring\",\r\n                duration: 1.5,\r\n                bounce: 0.2,\r\n                ease: \"easeInOut\",\r\n            },\r\n            opacity: { delay: i * 0.2, duration: 0.2 },\r\n        },\r\n    }),\r\n}\r\n\r\nexport function Checkmark({ size = 100, strokeWidth = 2, color = \"currentColor\", className = \"\" }: CheckmarkProps) {\r\n    return (\r\n        <motion.svg\r\n            width={size}\r\n            height={size}\r\n            viewBox=\"0 0 100 100\"\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            className={className}\r\n        >\r\n            <title>Animated Checkmark</title>\r\n            <motion.circle\r\n                cx=\"50\"\r\n                cy=\"50\"\r\n                r=\"40\"\r\n                stroke={color}\r\n                variants={draw}\r\n                custom={0}\r\n                style={{\r\n                    strokeWidth,\r\n                    strokeLinecap: \"round\",\r\n                    fill: \"transparent\",\r\n                }}\r\n            />\r\n            <motion.path\r\n                d=\"M30 50L45 65L70 35\"\r\n                stroke={color}\r\n                variants={draw}\r\n                custom={1}\r\n                style={{\r\n                    strokeWidth,\r\n                    strokeLinecap: \"round\",\r\n                    strokeLinejoin: \"round\",\r\n                    fill: \"transparent\",\r\n                }}\r\n            />\r\n        </motion.svg>\r\n    )\r\n}\r\nexport default function SubscriptionEmail() {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const [isSubmitted, setIsSubmitted] = useState(false)\r\n    const [isFocused, setIsFocused] = useState(false)\r\n\r\n    const handleSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n        if (!email || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) return\r\n\r\n        setIsSubmitting(true)\r\n        await new Promise((resolve) => setTimeout(resolve, 1200))\r\n        setIsSubmitting(false)\r\n        setIsSubmitted(true)\r\n    }\r\n\r\n    const containerVariants = {\r\n        hidden: { opacity: 0, y: 20 },\r\n        visible: {\r\n            opacity: 1,\r\n            y: 0,\r\n            transition: {\r\n                duration: 0.6,\r\n                ease: [0.25, 0.46, 0.45, 0.94],\r\n            },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            variants={containerVariants}\r\n            className=\"relative w-full max-w-2xl mx-auto transition-all\"\r\n        >\r\n            <div className=\"relative bg-white/80 dark:bg-zinc-900/80 backdrop-blur-xl border border-black/[0.08] dark:border-white/[0.08] rounded-3xl p-8 md:p-12 shadow-xl shadow-black/[0.04] dark:shadow-black/20\">\r\n                <div className=\"absolute inset-0 bg-gradient-to-b from-white/40 to-transparent dark:from-white/[0.02] dark:to-transparent rounded-3xl pointer-events-none\" />\r\n                <div className=\"relative\">\r\n                    {!isSubmitted ? (\r\n                        <>\r\n                            <div className=\"text-center mb-8\">\r\n                                <h2 className=\"text-3xl md:text-4xl font-semibold tracking-tight mb-3 text-zinc-900 dark:text-white\">\r\n                                    Stay Updated\r\n                                </h2>\r\n                                <p className=\"text-lg text-zinc-600 dark:text-zinc-400 max-w-md mx-auto leading-relaxed\">\r\n                                    Get notified when we launch new features and updates.\r\n                                </p>\r\n                            </div>\r\n                            <form onSubmit={handleSubmit} className=\"max-w-sm mx-auto\">\r\n                                <div className=\"space-y-4\">\r\n                                    <div\r\n                                        className=\"relative transition-all duration-200\"\r\n                                    >\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            value={email}\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                            onFocus={() => setIsFocused(true)}\r\n                                            onBlur={() => setIsFocused(false)}\r\n                                            placeholder=\"Enter your email\"\r\n                                            required\r\n                                            className=\"w-full px-4 py-3.5 bg-zinc-50/80 dark:bg-zinc-800/50 border border-zinc-200 dark:border-zinc-700 rounded-xl text-zinc-900 dark:text-white placeholder-zinc-500 dark:placeholder-zinc-400 outline-none transition-colors duration-200 focus:bg-white dark:focus:bg-zinc-800 focus:border-zinc-300 dark:focus:border-zinc-600\"\r\n                                        />\r\n                                    </div>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        disabled={isSubmitting || !email}\r\n                                        className=\"w-full py-3.5 bg-zinc-900 hover:bg-zinc-800 dark:bg-white dark:hover:bg-zinc-100 text-white dark:text-zinc-900 font-medium rounded-xl transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                    >\r\n                                        {isSubmitting ? \"Subscribing...\" : \"Subscribe\"}\r\n                                    </Button>\r\n                                </div>\r\n                            </form>\r\n                            <p className=\"text-xs text-center mt-6 text-zinc-500 dark:text-zinc-500 max-w-sm mx-auto\">\r\n                                We respect your privacy. Unsubscribe at any time.\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        <motion.div\r\n                            initial={{ opacity: 0, scale: 0.95 }}\r\n                            animate={{ opacity: 1, scale: 1 }}\r\n                            transition={{ duration: 0.4, ease: [0.25, 0.46, 0.45, 0.94] }}\r\n                            className=\"text-center py-4\"\r\n                        >\r\n                            <div className=\"mb-6 flex justify-center\">\r\n                                <div className=\"p-3 bg-green-50 dark:bg-green-900/20 rounded-full\">\r\n                                    <Checkmark\r\n                                        size={64}\r\n                                        strokeWidth={4}\r\n                                        className=\"relative z-10 text-green-600 dark:text-green-400\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <h3 className=\"text-2xl font-semibold mb-2 text-zinc-900 dark:text-white\">\r\n                                You're all set!\r\n                            </h3>\r\n                            <p className=\"text-zinc-600 dark:text-zinc-400 leading-relaxed max-w-sm mx-auto\">\r\n                                Thanks for subscribing. We'll keep you updated with our latest news.\r\n                            </p>\r\n                        </motion.div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}",
        "language": "tsx"
      }
    },
    "constant": {},
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/subscription-email-3/page": {
      "content": "import SubscriptionEmail from \"./components/subscription-email\"\r\n\r\nexport default function Page() {\r\n    return (\r\n        <main className=\"min-h-screen w-full flex flex-col items-center justify-center p-4 md:p-8 bg-zinc-50 dark:bg-zinc-950 transition-colors duration-300\">\r\n            <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_50%_50%,rgba(120,119,198,0.03),transparent_50%)] dark:bg-[radial-gradient(circle_at_50%_50%,rgba(120,119,198,0.05),transparent_50%)]\" />\r\n            <div className=\"relative z-10\">\r\n                <SubscriptionEmail />\r\n            </div>\r\n        </main>\r\n    )\r\n}",
      "language": "tsx"
    }
  },
  "timeline-1": {
    "components": {
      "@/registry/view/timeline-1/components/timeline-container": {
        "content": "import { TimeLineData } from \"@/registry/view/timeline-1/constant\"\n\nimport Timeline from \"./timeline\"\n\nconst TimelineContainer = () => {\n  return <Timeline data={TimeLineData} />\n}\n\nexport default TimelineContainer\n",
        "language": "tsx"
      },
      "@/registry/view/timeline-1/components/timeline": {
        "content": "\"use client\"\n\nimport { useEffect, useRef, useState } from \"react\"\nimport { motion, useScroll, useTransform, Variants } from \"framer-motion\"\n\nimport { cn } from \"@/lib/utils\"\nimport Container from \"@/components/Container\"\n\nconst cardVariants: Variants = {\n  offscreen: {\n    y: 75,\n    opacity: 0,\n  },\n  onscreen: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      duration: 0.4,\n    },\n  },\n}\n\nconst pointVariants: Variants = {\n  offscreen: {\n    scale: 0,\n    opacity: 0,\n  },\n  onscreen: {\n    scale: 1.1,\n    opacity: 1,\n    transition: {\n      duration: 0.3,\n    },\n  },\n}\n\nconst Timeline = ({ data }: { data: TimeLineProps[] }) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const [height, setHeight] = useState(0)\n  useEffect(() => {\n    const updateHeight = () => {\n      if (ref.current) {\n        const rect = ref.current.getBoundingClientRect()\n        setHeight(rect.height)\n      }\n    }\n    updateHeight()\n    window.addEventListener(\"resize\", updateHeight)\n    return () => window.removeEventListener(\"resize\", updateHeight)\n  }, [])\n\n  const { scrollYProgress } = useScroll({\n    target: containerRef,\n    offset: [\"start 0%\", \"end 50%\"],\n  })\n  const heightTransform = useTransform(scrollYProgress, [0, 1], [0, height])\n  const opacityTransform = useTransform(scrollYProgress, [0, 0.1], [0, 1])\n\n  return (\n    <div className=\"w-full my-24\" ref={containerRef}>\n      <Container>\n        <div className=\"mb-10 lg:mb-14\">\n          <h2 className=\"text-3xl md:text-4xl mb-4 text-center font-bold\">\n            How it works?\n          </h2>\n          <p className=\"text-muted-foreground text-center text-base md:text-lg\">\n            We work in a structured way. Here is how you will be onboard:\n          </p>\n        </div>\n        <div ref={ref} className=\"relative\">\n          <div className=\"absolute my-4 left-4 md:left-1/2 top-0 h-full w-[3px] bg-neutral-200 md:-translate-x-1/2\">\n            <motion.div\n              style={{\n                height: heightTransform,\n                opacity: opacityTransform,\n              }}\n              className=\"absolute inset-x-0 top-0 w-full bg-primary rounded-full\"\n            />\n          </div>\n          {data.map((item, index) => {\n            const isEven = index % 2 !== 0\n            return (\n              <motion.div\n                key={index}\n                initial=\"offscreen\"\n                whileInView=\"onscreen\"\n                viewport={{ once: true, amount: 0.6 }}\n                className={cn(\n                  \"flex flex-col md:flex-row items-start mb-16 md:mb-24\",\n                  isEven ? \"md:flex-row-reverse\" : \"\"\n                )}\n              >\n                <motion.div\n                  variants={pointVariants}\n                  viewport={{ once: true }}\n                  className=\"absolute my-4 left-1.5 ml-[3px] lg:-ml-[8.5px] md:left-1/2 w-4 h-4 bg-primary rounded-full md:-translate-x-1/2\"\n                />\n                <motion.div\n                  variants={cardVariants}\n                  className={cn(\n                    \"w-full md:w-5/12 pl-12 md:pl-0 md:h-[70vh] h-[50vh]\",\n                    isEven ? \"md:pl-8\" : \"md:pr-8\"\n                  )}\n                >\n                  <h3 className=\"text-sm font-semibold text-primary\">\n                    {item.title}\n                  </h3>\n                  <div>{item.content}</div>\n                </motion.div>\n              </motion.div>\n            )\n          })}\n        </div>\n      </Container>\n    </div>\n  )\n}\nexport default Timeline\n",
        "language": "tsx"
      }
    },
    "constant": {
      "@/registry/view/timeline-1/constant/index": {
        "content": "// Timeline block's data\nexport const TimeLineData: TimeLineProps[] = [\n  {\n    title: \"STEP 1: Discovery & Consultation\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Deep Dive & Alignment\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            We initiate with a thorough consultation to understand your unique\n            business needs, project goals, and desired outcomes for your\n            web/mobile app, MVP, or ERP system.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"STEP 2: Planning & Strategy\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Blueprint for Success\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            Our expert team meticulously plans the project roadmap, defining\n            scope, timelines, budget, and key deliverables for your web/mobile\n            app, MVP, or ERP system development.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"STEP 3: Design & Development\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Crafting Your Solution\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            Our skilled developers and designers bring your vision to life. We\n            focus on user-centered design, robust development, and seamless\n            integration for your web/mobile app, MVP, or ERP system.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"STEP 4: Testing & Quality Assurance\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Ensuring Excellence\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            Rigorous testing is conducted at every stage to identify and address\n            any issues, ensuring the highest quality and performance for your\n            web/mobile app, MVP, or ERP system.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n  {\n    title: \"STEP 5: Launch & Beyond\",\n    content: (\n      <div className=\"md:space-y-5 space-y-2\">\n        <div>\n          <h2 className=\"text-2xl md:text-3xl lg:text-4xl\">\n            Go-Live & Continuous Support\n          </h2>\n        </div>\n        <div className=\"md:w-[80%] w-full\">\n          <p className=\"text-muted-foreground text-sm md:text-base\">\n            We seamlessly launch your web/mobile app, MVP, or ERP system and\n            provide ongoing support, maintenance, and updates to ensure its\n            continued success and meet your evolving business needs.\n          </p>\n        </div>\n      </div>\n    ),\n  },\n]\n",
        "language": "tsx"
      }
    },
    "lib": {},
    "context": {},
    "hooks": {},
    "types": {},
    "styles": {},
    "layout": {},
    "@/registry/view/timeline-1/page": {
      "content": "import TimelineContainer from \"./components/timeline-container\"\n\nconst page = () => {\n  return <TimelineContainer />\n}\n\nexport default page\n",
      "language": "tsx"
    }
  }
}